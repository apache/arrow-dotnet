{
  "api/Apache.Arrow.Array.html": {
    "href": "api/Apache.Arrow.Array.html",
    "title": "Class Array | Apache Arrow .NET",
    "summary": "Class Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class Array : IArrowArray, IDisposable Inheritance object Array Implements IArrowArray IDisposable Derived FixedSizeBinaryArray BinaryArray BinaryViewArray BooleanArray DictionaryArray FixedSizeListArray LargeBinaryArray LargeListArray ListArray ListViewArray PrimitiveArray<T> StructArray Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Array(ArrayData) protected Array(ArrayData data) Parameters data ArrayData Properties Data public ArrayData Data { get; } Property Value ArrayData Length public int Length { get; } Property Value int NullBitmapBuffer public ArrowBuffer NullBitmapBuffer { get; } Property Value ArrowBuffer NullCount public int NullCount { get; } Property Value int Offset public int Offset { get; } Property Value int Methods Accept(IArrowArrayVisitor) public virtual void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool IsNull(int) public bool IsNull(int index) Parameters index int Returns bool IsValid(int) public bool IsValid(int index) Parameters index int Returns bool Slice(int, int) public Array Slice(int offset, int length) Parameters offset int length int Returns Array"
  },
  "api/Apache.Arrow.ArrayData.html": {
    "href": "api/Apache.Arrow.ArrayData.html",
    "title": "Class ArrayData | Apache Arrow .NET",
    "summary": "Class ArrayData Namespace Apache.Arrow Assembly Apache.Arrow.dll public sealed class ArrayData : IDisposable Inheritance object ArrayData Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ArrayData(IArrowType, int, int, int, ArrowBuffer[], ArrayData[]) public ArrayData(IArrowType dataType, int length, int nullCount, int offset, ArrowBuffer[] buffers, ArrayData[] children) Parameters dataType IArrowType length int nullCount int offset int buffers ArrowBuffer[] children ArrayData[] ArrayData(IArrowType, int, int, int, ArrowBuffer[], ArrayData[], ArrayData) public ArrayData(IArrowType dataType, int length, int nullCount = 0, int offset = 0, ArrowBuffer[] buffers = null, ArrayData[] children = null, ArrayData dictionary = null) Parameters dataType IArrowType length int nullCount int offset int buffers ArrowBuffer[] children ArrayData[] dictionary ArrayData ArrayData(IArrowType, int, int, int, IEnumerable<ArrowBuffer>, IEnumerable<ArrayData>) public ArrayData(IArrowType dataType, int length, int nullCount, int offset, IEnumerable<ArrowBuffer> buffers, IEnumerable<ArrayData> children) Parameters dataType IArrowType length int nullCount int offset int buffers IEnumerable<ArrowBuffer> children IEnumerable<ArrayData> ArrayData(IArrowType, int, int, int, IEnumerable<ArrowBuffer>, IEnumerable<ArrayData>, ArrayData) public ArrayData(IArrowType dataType, int length, int nullCount = 0, int offset = 0, IEnumerable<ArrowBuffer> buffers = null, IEnumerable<ArrayData> children = null, ArrayData dictionary = null) Parameters dataType IArrowType length int nullCount int offset int buffers IEnumerable<ArrowBuffer> children IEnumerable<ArrayData> dictionary ArrayData Fields Buffers public readonly ArrowBuffer[] Buffers Field Value ArrowBuffer[] Children public readonly ArrayData[] Children Field Value ArrayData[] DataType public readonly IArrowType DataType Field Value IArrowType Dictionary public readonly ArrayData Dictionary Field Value ArrayData Length public readonly int Length Field Value int NullCount The number of null values in the Array. May be -1 if the null count has not been computed. public int NullCount Field Value int Offset public readonly int Offset Field Value int Methods Clone(MemoryAllocator) public ArrayData Clone(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns ArrayData Dispose() public void Dispose() GetNullCount() Get the number of null values in the Array, computing the count if required. public int GetNullCount() Returns int Slice(int, int) public ArrayData Slice(int offset, int length) Parameters offset int length int Returns ArrayData"
  },
  "api/Apache.Arrow.ArrayDataConcatenator.html": {
    "href": "api/Apache.Arrow.ArrayDataConcatenator.html",
    "title": "Class ArrayDataConcatenator | Apache Arrow .NET",
    "summary": "Class ArrayDataConcatenator Namespace Apache.Arrow Assembly Apache.Arrow.dll public class ArrayDataConcatenator Inheritance object ArrayDataConcatenator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Concatenate(IReadOnlyList<ArrayData>, MemoryAllocator) public static ArrayData Concatenate(IReadOnlyList<ArrayData> arrayDataList, MemoryAllocator allocator = null) Parameters arrayDataList IReadOnlyList<ArrayData> allocator MemoryAllocator Returns ArrayData"
  },
  "api/Apache.Arrow.Arrays.FixedSizeBinaryArray.BuilderBase-2.html": {
    "href": "api/Apache.Arrow.Arrays.FixedSizeBinaryArray.BuilderBase-2.html",
    "title": "Class FixedSizeBinaryArray.BuilderBase<TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Class FixedSizeBinaryArray.BuilderBase<TArray, TBuilder> Namespace Apache.Arrow.Arrays Assembly Apache.Arrow.dll public abstract class FixedSizeBinaryArray.BuilderBase<TArray, TBuilder> : IArrowArrayBuilder<byte[], TArray, TBuilder>, IArrowArrayBuilder<TArray, TBuilder>, IArrowArrayBuilder<TArray>, IArrowArrayBuilder where TArray : IArrowArray where TBuilder : class, IArrowArrayBuilder<byte[], TArray, TBuilder> Type Parameters TArray TBuilder Inheritance object FixedSizeBinaryArray.BuilderBase<TArray, TBuilder> Implements IArrowArrayBuilder<byte[], TArray, TBuilder> IArrowArrayBuilder<TArray, TBuilder> IArrowArrayBuilder<TArray> IArrowArrayBuilder Derived Decimal128Array.Builder Decimal256Array.Builder Decimal32Array.Builder Decimal64Array.Builder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BuilderBase(IArrowType, int) protected BuilderBase(IArrowType dataType, int byteWidth) Parameters dataType IArrowType byteWidth int Properties ByteWidth protected int ByteWidth { get; } Property Value int DataType protected IArrowType DataType { get; } Property Value IArrowType Instance protected TBuilder Instance { get; } Property Value TBuilder Length public int Length { get; } Property Value int NullCount protected int NullCount { get; } Property Value int ValidityBuffer protected ArrowBuffer.BitmapBuilder ValidityBuffer { get; } Property Value ArrowBuffer.BitmapBuilder ValueBuffer protected ArrowBuffer.Builder<byte> ValueBuffer { get; } Property Value ArrowBuffer.Builder<byte> Methods Append(byte[]) public TBuilder Append(byte[] value) Parameters value byte[] Returns TBuilder Append(ReadOnlySpan<byte[]>) public TBuilder Append(ReadOnlySpan<byte[]> span) Parameters span ReadOnlySpan<byte[]> Returns TBuilder Append(ReadOnlySpan<byte>) public TBuilder Append(ReadOnlySpan<byte> span) Parameters span ReadOnlySpan<byte> Returns TBuilder AppendNull() public TBuilder AppendNull() Returns TBuilder AppendRange(IEnumerable<byte[]>) public TBuilder AppendRange(IEnumerable<byte[]> values) Parameters values IEnumerable<byte[]> Returns TBuilder Build(ArrayData) protected abstract TArray Build(ArrayData data) Parameters data ArrayData Returns TArray Build(MemoryAllocator) public TArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns TArray Clear() public TBuilder Clear() Returns TBuilder Reserve(int) public TBuilder Reserve(int capacity) Parameters capacity int Returns TBuilder Resize(int) public TBuilder Resize(int length) Parameters length int Returns TBuilder Set(int, byte[]) public TBuilder Set(int index, byte[] value) Parameters index int value byte[] Returns TBuilder Set(int, ReadOnlySpan<byte>) public TBuilder Set(int index, ReadOnlySpan<byte> value) Parameters index int value ReadOnlySpan<byte> Returns TBuilder SetNull(int) public TBuilder SetNull(int index) Parameters index int Returns TBuilder Swap(int, int) public TBuilder Swap(int i, int j) Parameters i int j int Returns TBuilder"
  },
  "api/Apache.Arrow.Arrays.FixedSizeBinaryArray.html": {
    "href": "api/Apache.Arrow.Arrays.FixedSizeBinaryArray.html",
    "title": "Class FixedSizeBinaryArray | Apache Arrow .NET",
    "summary": "Class FixedSizeBinaryArray Namespace Apache.Arrow.Arrays Assembly Apache.Arrow.dll public class FixedSizeBinaryArray : Array, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, IEnumerable<byte[]>, IEnumerable Inheritance object Array FixedSizeBinaryArray Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> IEnumerable<byte[]> IEnumerable Derived Decimal128Array Decimal256Array Decimal32Array Decimal64Array Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FixedSizeBinaryArray(ArrayData) public FixedSizeBinaryArray(ArrayData data) Parameters data ArrayData FixedSizeBinaryArray(ArrowTypeId, ArrayData) public FixedSizeBinaryArray(ArrowTypeId typeId, ArrayData data) Parameters typeId ArrowTypeId data ArrayData Properties ValueBuffer public ArrowBuffer ValueBuffer { get; } Property Value ArrowBuffer Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetBytes(int) Get the collection of bytes, as a read-only span, at a given index in the array. public ReadOnlySpan<byte> GetBytes(int index) Parameters index int Index at which to get bytes. Returns ReadOnlySpan<byte> Returns a ReadOnlySpan<T> object. Remarks Note that this method cannot reliably identify null values, which are indistinguishable from empty byte collection values when seen in the context of this method's return type of ReadOnlySpan<T>. Use the IsNull(int) method instead to reliably determine null values. Exceptions ArgumentOutOfRangeException If the index is negative or beyond the length of the array."
  },
  "api/Apache.Arrow.Arrays.html": {
    "href": "api/Apache.Arrow.Arrays.html",
    "title": "Namespace Apache.Arrow.Arrays | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Arrays Classes FixedSizeBinaryArray FixedSizeBinaryArray.BuilderBase<TArray, TBuilder>"
  },
  "api/Apache.Arrow.ArrowArrayConcatenator.html": {
    "href": "api/Apache.Arrow.ArrowArrayConcatenator.html",
    "title": "Class ArrowArrayConcatenator | Apache Arrow .NET",
    "summary": "Class ArrowArrayConcatenator Namespace Apache.Arrow Assembly Apache.Arrow.dll public static class ArrowArrayConcatenator Inheritance object ArrowArrayConcatenator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Concatenate(IReadOnlyList<IArrowArray>, MemoryAllocator) public static IArrowArray Concatenate(IReadOnlyList<IArrowArray> arrowArrayList, MemoryAllocator allocator = null) Parameters arrowArrayList IReadOnlyList<IArrowArray> allocator MemoryAllocator Returns IArrowArray"
  },
  "api/Apache.Arrow.ArrowArrayFactory.html": {
    "href": "api/Apache.Arrow.ArrowArrayFactory.html",
    "title": "Class ArrowArrayFactory | Apache Arrow .NET",
    "summary": "Class ArrowArrayFactory Namespace Apache.Arrow Assembly Apache.Arrow.dll public static class ArrowArrayFactory Inheritance object ArrowArrayFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildArray(ArrayData) public static IArrowArray BuildArray(ArrayData data) Parameters data ArrayData Returns IArrowArray Slice(IArrowArray, int, int) public static IArrowArray Slice(IArrowArray array, int offset, int length) Parameters array IArrowArray offset int length int Returns IArrowArray"
  },
  "api/Apache.Arrow.ArrowArrayVisitor.html": {
    "href": "api/Apache.Arrow.ArrowArrayVisitor.html",
    "title": "Class ArrowArrayVisitor | Apache Arrow .NET",
    "summary": "Class ArrowArrayVisitor Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class ArrowArrayVisitor : IArrowArrayVisitor Inheritance object ArrowArrayVisitor Implements IArrowArrayVisitor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Visit(IArrowArray) public virtual void Visit(IArrowArray array) Parameters array IArrowArray"
  },
  "api/Apache.Arrow.ArrowBuffer.BitmapBuilder.html": {
    "href": "api/Apache.Arrow.ArrowBuffer.BitmapBuilder.html",
    "title": "Class ArrowBuffer.BitmapBuilder | Apache Arrow .NET",
    "summary": "Class ArrowBuffer.BitmapBuilder Namespace Apache.Arrow Assembly Apache.Arrow.dll The ArrowBuffer.BitmapBuilder class is a complement to ArrowBuffer.Builder<T> and is designed for boolean fields, which are efficiently bit-packed into byte-aligned memory. public class ArrowBuffer.BitmapBuilder Inheritance object ArrowBuffer.BitmapBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BitmapBuilder(int) Creates an instance of the ArrowBuffer.BitmapBuilder class. public BitmapBuilder(int capacity = 64) Parameters capacity int Number of bits of initial capacity to reserve. Properties Capacity Gets the number of bits that can be contained in the memory allocated by the current instance. public int Capacity { get; } Property Value int Length Gets the number of bits currently appended. public int Length { get; } Property Value int Memory Gets the raw byte memory underpinning the builder. public Memory<byte> Memory { get; } Property Value Memory<byte> SetBitCount Gets the number of set bits (i.e. set to 1). public int SetBitCount { get; } Property Value int Span Gets the span of (bit-packed byte) memory underpinning the builder. public Span<byte> Span { get; } Property Value Span<byte> UnsetBitCount Gets the number of unset bits (i.e. set to 0). public int UnsetBitCount { get; } Property Value int Methods Append(bool) Append a single bit. public ArrowBuffer.BitmapBuilder Append(bool value) Parameters value bool Bit to append. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). Append(ReadOnlySpan<byte>, int) Append a span of bits. public ArrowBuffer.BitmapBuilder Append(ReadOnlySpan<byte> source, int validBits) Parameters source ReadOnlySpan<byte> Source of bits to append. validBits int Number of valid bits in the source span. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). AppendRange(bool, int) Append multiple bits. public ArrowBuffer.BitmapBuilder AppendRange(bool value, int length) Parameters value bool Value of bits to append. length int Number of times the value should be added. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). AppendRange(IEnumerable<bool>) Append multiple bits. public ArrowBuffer.BitmapBuilder AppendRange(IEnumerable<bool> values) Parameters values IEnumerable<bool> Bits to append. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). Build(MemoryAllocator) Build an Arrow buffer from the appended contents so far. public ArrowBuffer Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Optional memory allocator. Returns ArrowBuffer Returns an ArrowBuffer object. Clear() Clear all contents appended so far. public ArrowBuffer.BitmapBuilder Clear() Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). Reserve(int) Reserve a given number of bits' additional capacity. public ArrowBuffer.BitmapBuilder Reserve(int additionalCapacity) Parameters additionalCapacity int Number of bits of required additional capacity. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). Resize(int) Resize the buffer to a given size. public ArrowBuffer.BitmapBuilder Resize(int capacity) Parameters capacity int Number of bits of required capacity. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). Remarks Note that if the required capacity is larger than the current length of the populated buffer so far, the buffer's contents in the new, expanded region are undefined. Set(int) Set the bit at a particular index to 1. public ArrowBuffer.BitmapBuilder Set(int index) Parameters index int Index of bit to set. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). Set(int, bool) Set the bit at a particular index to a given value. public ArrowBuffer.BitmapBuilder Set(int index, bool value) Parameters index int Index of bit to set/unset. value bool Value of bit. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). Swap(int, int) Swap the bits at two given indices. public ArrowBuffer.BitmapBuilder Swap(int i, int j) Parameters i int First index. j int Second index. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition). Toggle(int) Toggle the bit at a particular index. public ArrowBuffer.BitmapBuilder Toggle(int index) Parameters index int Index of bit to toggle. Returns ArrowBuffer.BitmapBuilder Returns the builder (for fluent-style composition)."
  },
  "api/Apache.Arrow.ArrowBuffer.Builder-1.html": {
    "href": "api/Apache.Arrow.ArrowBuffer.Builder-1.html",
    "title": "Class ArrowBuffer.Builder<T> | Apache Arrow .NET",
    "summary": "Class ArrowBuffer.Builder<T> Namespace Apache.Arrow Assembly Apache.Arrow.dll The ArrowBuffer.Builder<T> class is able to append value-type items, with fluent-style methods, to build up an ArrowBuffer of contiguous items. public class ArrowBuffer.Builder<T> where T : struct Type Parameters T Value-type of item to build into a buffer. Inheritance object ArrowBuffer.Builder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Note that bool is not supported as a generic type argument for this class. Please use ArrowBuffer.BitmapBuilder instead. Constructors Builder(int) Creates an instance of the ArrowBuffer.Builder<T> class. public Builder(int capacity = 8) Parameters capacity int Number of items of initial capacity to reserve. Properties Capacity Gets the number of items that can be contained in the memory allocated by the current instance. public int Capacity { get; } Property Value int Length Gets the number of items currently appended. public int Length { get; } Property Value int Memory Gets the raw byte memory underpinning the builder. public Memory<byte> Memory { get; } Property Value Memory<byte> Span Gets the span of memory underpinning the builder. public Span<T> Span { get; } Property Value Span<T> Methods Append(ArrowBuffer) Append a buffer, assumed to contain items of the same type. public ArrowBuffer.Builder<T> Append(ArrowBuffer buffer) Parameters buffer ArrowBuffer Buffer to append. Returns ArrowBuffer.Builder<T> Returns the builder (for fluent-style composition). Append(ReadOnlySpan<T>) Append a span of items. public ArrowBuffer.Builder<T> Append(ReadOnlySpan<T> source) Parameters source ReadOnlySpan<T> Source of item span. Returns ArrowBuffer.Builder<T> Returns the builder (for fluent-style composition). Append(T) Append a single item. public ArrowBuffer.Builder<T> Append(T value) Parameters value T Item to append. Returns ArrowBuffer.Builder<T> Returns the builder (for fluent-style composition). AppendRange(IEnumerable<T>) Append a number of items. public ArrowBuffer.Builder<T> AppendRange(IEnumerable<T> values) Parameters values IEnumerable<T> Items to append. Returns ArrowBuffer.Builder<T> Returns the builder (for fluent-style composition). Build(MemoryAllocator) Build an Arrow buffer from the appended contents so far. public ArrowBuffer Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Optional memory allocator. Returns ArrowBuffer Returns an ArrowBuffer object. Clear() Clear all contents appended so far. public ArrowBuffer.Builder<T> Clear() Returns ArrowBuffer.Builder<T> Returns the builder (for fluent-style composition). Reserve(int) Reserve a given number of items' additional capacity. public ArrowBuffer.Builder<T> Reserve(int additionalCapacity) Parameters additionalCapacity int Number of items of required additional capacity. Returns ArrowBuffer.Builder<T> Returns the builder (for fluent-style composition). Resize(int) Resize the buffer to a given size. public ArrowBuffer.Builder<T> Resize(int capacity) Parameters capacity int Number of items of required capacity. Returns ArrowBuffer.Builder<T> Returns the builder (for fluent-style composition). Remarks Note that if the required capacity is larger than the current length of the populated buffer so far, the buffer's contents in the new, expanded region are undefined."
  },
  "api/Apache.Arrow.ArrowBuffer.html": {
    "href": "api/Apache.Arrow.ArrowBuffer.html",
    "title": "Struct ArrowBuffer | Apache Arrow .NET",
    "summary": "Struct ArrowBuffer Namespace Apache.Arrow Assembly Apache.Arrow.dll public readonly struct ArrowBuffer : IEquatable<ArrowBuffer>, IDisposable Implements IEquatable<ArrowBuffer> IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ArrowBuffer(ReadOnlyMemory<byte>) public ArrowBuffer(ReadOnlyMemory<byte> data) Parameters data ReadOnlyMemory<byte> Properties Empty public static ArrowBuffer Empty { get; } Property Value ArrowBuffer IsEmpty public bool IsEmpty { get; } Property Value bool Length public int Length { get; } Property Value int Memory public ReadOnlyMemory<byte> Memory { get; } Property Value ReadOnlyMemory<byte> Span public ReadOnlySpan<byte> Span { get; } Property Value ReadOnlySpan<byte> Methods Clone(MemoryAllocator) public ArrowBuffer Clone(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns ArrowBuffer Dispose() public void Dispose() Equals(ArrowBuffer) public bool Equals(ArrowBuffer other) Parameters other ArrowBuffer Returns bool"
  },
  "api/Apache.Arrow.ArrowTypeExtensions.html": {
    "href": "api/Apache.Arrow.ArrowTypeExtensions.html",
    "title": "Class ArrowTypeExtensions | Apache Arrow .NET",
    "summary": "Class ArrowTypeExtensions Namespace Apache.Arrow Assembly Apache.Arrow.dll public static class ArrowTypeExtensions Inheritance object ArrowTypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsFloatingPoint(IArrowType) public static bool IsFloatingPoint(this IArrowType type) Parameters type IArrowType Returns bool IsIntegral(IArrowType) public static bool IsIntegral(this IArrowType type) Parameters type IArrowType Returns bool"
  },
  "api/Apache.Arrow.BinaryArray.Builder.html": {
    "href": "api/Apache.Arrow.BinaryArray.Builder.html",
    "title": "Class BinaryArray.Builder | Apache Arrow .NET",
    "summary": "Class BinaryArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class BinaryArray.Builder : BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>, IArrowArrayBuilder<byte, BinaryArray, BinaryArray.Builder>, IArrowArrayBuilder<BinaryArray, BinaryArray.Builder>, IArrowArrayBuilder<BinaryArray>, IArrowArrayBuilder Inheritance object BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder> BinaryArray.Builder Implements IArrowArrayBuilder<byte, BinaryArray, BinaryArray.Builder> IArrowArrayBuilder<BinaryArray, BinaryArray.Builder> IArrowArrayBuilder<BinaryArray> IArrowArrayBuilder Inherited Members BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.DataType BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Instance BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.ValueOffsets BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.ValueBuffer BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.ValidityBuffer BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Offset BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.NullCount BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Build(ArrayData) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Length BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Build(MemoryAllocator) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.AppendNull() BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Append(byte) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Append(ReadOnlySpan<byte>) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Append(IEnumerable<byte>) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.AppendRange(IEnumerable<byte>) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.AppendRange(IEnumerable<byte[]>) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Reserve(int) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Resize(int) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Swap(int, int) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Set(int, byte) BinaryArray.BuilderBase<BinaryArray, BinaryArray.Builder>.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Builder(IArrowType) public Builder(IArrowType dataType) Parameters dataType IArrowType Methods Build(ArrayData) protected override BinaryArray Build(ArrayData data) Parameters data ArrayData Returns BinaryArray"
  },
  "api/Apache.Arrow.BinaryArray.BuilderBase-2.html": {
    "href": "api/Apache.Arrow.BinaryArray.BuilderBase-2.html",
    "title": "Class BinaryArray.BuilderBase<TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Class BinaryArray.BuilderBase<TArray, TBuilder> Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class BinaryArray.BuilderBase<TArray, TBuilder> : IArrowArrayBuilder<byte, TArray, TBuilder>, IArrowArrayBuilder<TArray, TBuilder>, IArrowArrayBuilder<TArray>, IArrowArrayBuilder where TArray : IArrowArray where TBuilder : class, IArrowArrayBuilder<byte, TArray, TBuilder> Type Parameters TArray TBuilder Inheritance object BinaryArray.BuilderBase<TArray, TBuilder> Implements IArrowArrayBuilder<byte, TArray, TBuilder> IArrowArrayBuilder<TArray, TBuilder> IArrowArrayBuilder<TArray> IArrowArrayBuilder Derived BinaryArray.Builder StringArray.Builder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BuilderBase(IArrowType) protected BuilderBase(IArrowType dataType) Parameters dataType IArrowType Properties DataType protected IArrowType DataType { get; } Property Value IArrowType Instance protected TBuilder Instance { get; } Property Value TBuilder Length Gets the length of the array built so far. public int Length { get; } Property Value int NullCount protected int NullCount { get; } Property Value int Offset protected int Offset { get; set; } Property Value int ValidityBuffer protected ArrowBuffer.BitmapBuilder ValidityBuffer { get; } Property Value ArrowBuffer.BitmapBuilder ValueBuffer protected ArrowBuffer.Builder<byte> ValueBuffer { get; } Property Value ArrowBuffer.Builder<byte> ValueOffsets protected ArrowBuffer.Builder<int> ValueOffsets { get; } Property Value ArrowBuffer.Builder<int> Methods Append(byte) Appends a value, consisting of a single byte, to the array. public TBuilder Append(byte value) Parameters value byte Byte value to append. Returns TBuilder Returns the builder (for fluent-style composition). Append(IEnumerable<byte>) Append a value, consisting of an enumerable collection of bytes, to the array. public TBuilder Append(IEnumerable<byte> value) Parameters value IEnumerable<byte> Enumerable collection of bytes to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that this method appends a single value, which may consist of arbitrarily many bytes. If multiple values are to be added, use the AppendRange(IEnumerable<byte>) method instead. Append(ReadOnlySpan<byte>) Append a value, consisting of a span of bytes, to the array. public TBuilder Append(ReadOnlySpan<byte> span) Parameters span ReadOnlySpan<byte> Span of bytes to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that a single value is added, which consists of arbitrarily many bytes. If multiple values are to be added, use the AppendRange(IEnumerable<byte>) method. AppendNull() Append a single null value to the array. public TBuilder AppendNull() Returns TBuilder Returns the builder (for fluent-style composition). AppendRange(IEnumerable<byte[]>) Append an enumerable collection of values to the array. public TBuilder AppendRange(IEnumerable<byte[]> values) Parameters values IEnumerable<byte[]> Values to add. Returns TBuilder Returns the builder (for fluent-style composition). AppendRange(IEnumerable<byte>) Append an enumerable collection of single-byte values to the array. public TBuilder AppendRange(IEnumerable<byte> values) Parameters values IEnumerable<byte> Single-byte values to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that this method appends multiple values, each of which is a single byte. If a single value is to be added, use the Append(IEnumerable<byte>) method instead. Build(ArrayData) protected abstract TArray Build(ArrayData data) Parameters data ArrayData Returns TArray Build(MemoryAllocator) Build an Arrow array from the appended contents so far. public TArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Optional memory allocator. Returns TArray Returns an array of type TArray. Clear() Clear all contents appended so far. public TBuilder Clear() Returns TBuilder Returns the builder (for fluent-style composition). Reserve(int) public TBuilder Reserve(int capacity) Parameters capacity int Returns TBuilder Resize(int) public TBuilder Resize(int length) Parameters length int Returns TBuilder Set(int, byte) public TBuilder Set(int index, byte value) Parameters index int value byte Returns TBuilder Swap(int, int) public TBuilder Swap(int i, int j) Parameters i int j int Returns TBuilder"
  },
  "api/Apache.Arrow.BinaryArray.html": {
    "href": "api/Apache.Arrow.BinaryArray.html",
    "title": "Class BinaryArray | Apache Arrow .NET",
    "summary": "Class BinaryArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class BinaryArray : Array, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, ICollection<byte[]>, IEnumerable<byte[]>, IEnumerable Inheritance object Array BinaryArray Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> ICollection<byte[]> IEnumerable<byte[]> IEnumerable Derived StringArray Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BinaryArray(ArrayData) public BinaryArray(ArrayData data) Parameters data ArrayData BinaryArray(ArrowTypeId, ArrayData) public BinaryArray(ArrowTypeId typeId, ArrayData data) Parameters typeId ArrowTypeId data ArrayData BinaryArray(IArrowType, int, ArrowBuffer, ArrowBuffer, ArrowBuffer, int, int) public BinaryArray(IArrowType dataType, int length, ArrowBuffer valueOffsetsBuffer, ArrowBuffer dataBuffer, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int valueOffsetsBuffer ArrowBuffer dataBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer nullCount int offset int Properties ValueBuffer public ArrowBuffer ValueBuffer { get; } Property Value ArrowBuffer ValueOffsets public ReadOnlySpan<int> ValueOffsets { get; } Property Value ReadOnlySpan<int> ValueOffsetsBuffer public ArrowBuffer ValueOffsetsBuffer { get; } Property Value ArrowBuffer Values public ReadOnlySpan<byte> Values { get; } Property Value ReadOnlySpan<byte> Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetBytes(int) Get the collection of bytes, as a read-only span, at a given index in the array. public ReadOnlySpan<byte> GetBytes(int index) Parameters index int Index at which to get bytes. Returns ReadOnlySpan<byte> Returns a ReadOnlySpan<T> object. Remarks Note that this method cannot reliably identify null values, which are indistinguishable from empty byte collection values when seen in the context of this method's return type of ReadOnlySpan<T>. Use the IsNull(int) method or the GetBytes(int, out bool) overload instead to reliably determine null values. Exceptions ArgumentOutOfRangeException If the index is negative or beyond the length of the array. GetBytes(int, out bool) Get the collection of bytes, as a read-only span, at a given index in the array. public ReadOnlySpan<byte> GetBytes(int index, out bool isNull) Parameters index int Index at which to get bytes. isNull bool Set to true if the value at the given index is null. Returns ReadOnlySpan<byte> Returns a ReadOnlySpan<T> object. Exceptions ArgumentOutOfRangeException If the index is negative or beyond the length of the array. GetValueLength(int) public int GetValueLength(int index) Parameters index int Returns int GetValueOffset(int) [Obsolete(\"This method has been deprecated. Please use ValueOffsets[index] instead.\")] public int GetValueOffset(int index) Parameters index int Returns int"
  },
  "api/Apache.Arrow.BinaryViewArray.Builder.html": {
    "href": "api/Apache.Arrow.BinaryViewArray.Builder.html",
    "title": "Class BinaryViewArray.Builder | Apache Arrow .NET",
    "summary": "Class BinaryViewArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class BinaryViewArray.Builder : BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>, IArrowArrayBuilder<byte, BinaryViewArray, BinaryViewArray.Builder>, IArrowArrayBuilder<BinaryViewArray, BinaryViewArray.Builder>, IArrowArrayBuilder<BinaryViewArray>, IArrowArrayBuilder Inheritance object BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder> BinaryViewArray.Builder Implements IArrowArrayBuilder<byte, BinaryViewArray, BinaryViewArray.Builder> IArrowArrayBuilder<BinaryViewArray, BinaryViewArray.Builder> IArrowArrayBuilder<BinaryViewArray> IArrowArrayBuilder Inherited Members BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.DataType BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Instance BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.BinaryViews BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.ValueBuffer BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.ValidityBuffer BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.NullCount BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Build(ArrayData) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Length BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Build(MemoryAllocator) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.AppendNull() BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Append(byte) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Append(ReadOnlySpan<byte>) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.AppendRange(IEnumerable<byte>) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.AppendRange(IEnumerable<byte[]>) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Reserve(int) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Resize(int) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Swap(int, int) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Set(int, byte) BinaryViewArray.BuilderBase<BinaryViewArray, BinaryViewArray.Builder>.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Builder(IArrowType) public Builder(IArrowType dataType) Parameters dataType IArrowType Methods Build(ArrayData) protected override BinaryViewArray Build(ArrayData data) Parameters data ArrayData Returns BinaryViewArray"
  },
  "api/Apache.Arrow.BinaryViewArray.BuilderBase-2.html": {
    "href": "api/Apache.Arrow.BinaryViewArray.BuilderBase-2.html",
    "title": "Class BinaryViewArray.BuilderBase<TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Class BinaryViewArray.BuilderBase<TArray, TBuilder> Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class BinaryViewArray.BuilderBase<TArray, TBuilder> : IArrowArrayBuilder<byte, TArray, TBuilder>, IArrowArrayBuilder<TArray, TBuilder>, IArrowArrayBuilder<TArray>, IArrowArrayBuilder where TArray : IArrowArray where TBuilder : class, IArrowArrayBuilder<byte, TArray, TBuilder> Type Parameters TArray TBuilder Inheritance object BinaryViewArray.BuilderBase<TArray, TBuilder> Implements IArrowArrayBuilder<byte, TArray, TBuilder> IArrowArrayBuilder<TArray, TBuilder> IArrowArrayBuilder<TArray> IArrowArrayBuilder Derived BinaryViewArray.Builder StringViewArray.Builder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BuilderBase(IArrowType) protected BuilderBase(IArrowType dataType) Parameters dataType IArrowType Properties BinaryViews protected ArrowBuffer.Builder<BinaryView> BinaryViews { get; } Property Value ArrowBuffer.Builder<BinaryView> DataType protected IArrowType DataType { get; } Property Value IArrowType Instance protected TBuilder Instance { get; } Property Value TBuilder Length Gets the length of the array built so far. public int Length { get; } Property Value int NullCount protected int NullCount { get; } Property Value int ValidityBuffer protected ArrowBuffer.BitmapBuilder ValidityBuffer { get; } Property Value ArrowBuffer.BitmapBuilder ValueBuffer protected ArrowBuffer.Builder<byte> ValueBuffer { get; } Property Value ArrowBuffer.Builder<byte> Methods Append(byte) Appends a value, consisting of a single byte, to the array. public TBuilder Append(byte value) Parameters value byte Byte value to append. Returns TBuilder Returns the builder (for fluent-style composition). Append(ReadOnlySpan<byte>) Append a value, consisting of a span of bytes, to the array. public TBuilder Append(ReadOnlySpan<byte> span) Parameters span ReadOnlySpan<byte> Span of bytes to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that a single value is added, which consists of arbitrarily many bytes. If multiple values are to be added, use the AppendRange(IEnumerable<byte>) method. AppendNull() Append a single null value to the array. public TBuilder AppendNull() Returns TBuilder Returns the builder (for fluent-style composition). AppendRange(IEnumerable<byte[]>) Append an enumerable collection of values to the array. public TBuilder AppendRange(IEnumerable<byte[]> values) Parameters values IEnumerable<byte[]> Values to add. Returns TBuilder Returns the builder (for fluent-style composition). AppendRange(IEnumerable<byte>) Append an enumerable collection of single-byte values to the array. public TBuilder AppendRange(IEnumerable<byte> values) Parameters values IEnumerable<byte> Single-byte values to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that this method appends multiple values, each of which is a single byte Build(ArrayData) protected abstract TArray Build(ArrayData data) Parameters data ArrayData Returns TArray Build(MemoryAllocator) Build an Arrow array from the appended contents so far. public TArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Optional memory allocator. Returns TArray Returns an array of type TArray. Clear() Clear all contents appended so far. public TBuilder Clear() Returns TBuilder Returns the builder (for fluent-style composition). Reserve(int) public TBuilder Reserve(int capacity) Parameters capacity int Returns TBuilder Resize(int) public TBuilder Resize(int length) Parameters length int Returns TBuilder Set(int, byte) public TBuilder Set(int index, byte value) Parameters index int value byte Returns TBuilder Swap(int, int) public TBuilder Swap(int i, int j) Parameters i int j int Returns TBuilder"
  },
  "api/Apache.Arrow.BinaryViewArray.html": {
    "href": "api/Apache.Arrow.BinaryViewArray.html",
    "title": "Class BinaryViewArray | Apache Arrow .NET",
    "summary": "Class BinaryViewArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class BinaryViewArray : Array, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, IEnumerable<byte[]>, IEnumerable Inheritance object Array BinaryViewArray Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> IEnumerable<byte[]> IEnumerable Derived StringViewArray Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BinaryViewArray(ArrayData) public BinaryViewArray(ArrayData data) Parameters data ArrayData BinaryViewArray(ArrowTypeId, ArrayData) public BinaryViewArray(ArrowTypeId typeId, ArrayData data) Parameters typeId ArrowTypeId data ArrayData BinaryViewArray(IArrowType, int, ArrowBuffer, ArrowBuffer, ArrowBuffer, int, int) public BinaryViewArray(IArrowType dataType, int length, ArrowBuffer binaryViewsBuffer, ArrowBuffer dataBuffer, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int binaryViewsBuffer ArrowBuffer dataBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer nullCount int offset int Properties DataBufferCount public int DataBufferCount { get; } Property Value int Views public ReadOnlySpan<BinaryView> Views { get; } Property Value ReadOnlySpan<BinaryView> ViewsBuffer public ArrowBuffer ViewsBuffer { get; } Property Value ArrowBuffer Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor DataBuffer(int) public ArrowBuffer DataBuffer(int index) Parameters index int Returns ArrowBuffer GetBytes(int) Get the collection of bytes, as a read-only span, at a given index in the array. public ReadOnlySpan<byte> GetBytes(int index) Parameters index int Index at which to get bytes. Returns ReadOnlySpan<byte> Returns a ReadOnlySpan<T> object. Remarks Note that this method cannot reliably identify null values, which are indistinguishable from empty byte collection values when seen in the context of this method's return type of ReadOnlySpan<T>. Use the IsNull(int) method or the GetBytes(int, out bool) overload instead to reliably determine null values. Exceptions ArgumentOutOfRangeException If the index is negative or beyond the length of the array. GetBytes(int, out bool) Get the collection of bytes, as a read-only span, at a given index in the array. public ReadOnlySpan<byte> GetBytes(int index, out bool isNull) Parameters index int Index at which to get bytes. isNull bool Set to true if the value at the given index is null. Returns ReadOnlySpan<byte> Returns a ReadOnlySpan<T> object. Exceptions ArgumentOutOfRangeException If the index is negative or beyond the length of the array. GetValueLength(int) public int GetValueLength(int index) Parameters index int Returns int"
  },
  "api/Apache.Arrow.BitUtility.html": {
    "href": "api/Apache.Arrow.BitUtility.html",
    "title": "Class BitUtility | Apache Arrow .NET",
    "summary": "Class BitUtility Namespace Apache.Arrow Assembly Apache.Arrow.dll public static class BitUtility Inheritance object BitUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ByteCount(int) Calculates the number of bytes required to store n bits. public static int ByteCount(int n) Parameters n int Number of bits Returns int Number of bytes ClearBit(Span<byte>, int) public static void ClearBit(Span<byte> data, int index) Parameters data Span<byte> index int CountBits(ReadOnlySpan<byte>) Counts the number of set bits in a span of bytes. public static int CountBits(ReadOnlySpan<byte> data) Parameters data ReadOnlySpan<byte> Span to count bits. Returns int Count of set (one) bits. CountBits(ReadOnlySpan<byte>, int) Counts the number of set bits in a span of bytes starting at a specific bit index. public static int CountBits(ReadOnlySpan<byte> data, int index) Parameters data ReadOnlySpan<byte> Span to count bits. index int Bit index to start counting from. Returns int Count of set (one) bits. CountBits(ReadOnlySpan<byte>, int, int) Counts the number of set bits in a span of bytes starting at a specific bit index, and limiting to a certain number of bits in the span. public static int CountBits(ReadOnlySpan<byte> data, int index, int length) Parameters data ReadOnlySpan<byte> Span to count bits. index int Bit index to start counting from. length int Maximum of bits in the span to consider. Returns int Count of set (one) bits. GetBit(byte, int) public static bool GetBit(byte data, int index) Parameters data byte index int Returns bool GetBit(ReadOnlySpan<byte>, int) public static bool GetBit(ReadOnlySpan<byte> data, int index) Parameters data ReadOnlySpan<byte> index int Returns bool RoundUpToMultipleOf64(long) Rounds an integer to the nearest multiple of 64. public static long RoundUpToMultipleOf64(long n) Parameters n long Integer to round. Returns long Integer rounded to the nearest multiple of 64. RoundUpToMultipleOf8(long) Rounds an integer to the nearest multiple of 8. public static long RoundUpToMultipleOf8(long n) Parameters n long Integer to round. Returns long Integer rounded to the nearest multiple of 8. RoundUpToMultiplePowerOfTwo(long, int) Rounds an integer up to the nearest multiple of factor, where factor must be a power of two. This function does not throw when the factor is not a power of two. public static long RoundUpToMultiplePowerOfTwo(long n, int factor) Parameters n long Integer to round up. factor int Power of two factor to round up to. Returns long Integer rounded up to the nearest power of two. SetBit(Span<byte>, int) public static void SetBit(Span<byte> data, int index) Parameters data Span<byte> index int SetBit(Span<byte>, int, bool) public static void SetBit(Span<byte> data, int index, bool value) Parameters data Span<byte> index int value bool ToggleBit(Span<byte>, int) public static void ToggleBit(Span<byte> data, int index) Parameters data Span<byte> index int"
  },
  "api/Apache.Arrow.BooleanArray.Builder.html": {
    "href": "api/Apache.Arrow.BooleanArray.Builder.html",
    "title": "Class BooleanArray.Builder | Apache Arrow .NET",
    "summary": "Class BooleanArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class BooleanArray.Builder : IArrowArrayBuilder<bool, BooleanArray, BooleanArray.Builder>, IArrowArrayBuilder<BooleanArray, BooleanArray.Builder>, IArrowArrayBuilder<BooleanArray>, IArrowArrayBuilder Inheritance object BooleanArray.Builder Implements IArrowArrayBuilder<bool, BooleanArray, BooleanArray.Builder> IArrowArrayBuilder<BooleanArray, BooleanArray.Builder> IArrowArrayBuilder<BooleanArray> IArrowArrayBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Properties Capacity public int Capacity { get; } Property Value int Length public int Length { get; } Property Value int NullCount public int NullCount { get; } Property Value int Methods Append(bool) public BooleanArray.Builder Append(bool value) Parameters value bool Returns BooleanArray.Builder Append(ReadOnlySpan<bool>) public BooleanArray.Builder Append(ReadOnlySpan<bool> span) Parameters span ReadOnlySpan<bool> Returns BooleanArray.Builder AppendNull() public BooleanArray.Builder AppendNull() Returns BooleanArray.Builder AppendRange(IEnumerable<bool>) public BooleanArray.Builder AppendRange(IEnumerable<bool> values) Parameters values IEnumerable<bool> Returns BooleanArray.Builder Build(MemoryAllocator) public BooleanArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns BooleanArray Clear() public BooleanArray.Builder Clear() Returns BooleanArray.Builder NullableAppend(bool?) public BooleanArray.Builder NullableAppend(bool? value) Parameters value bool? Returns BooleanArray.Builder Reserve(int) public BooleanArray.Builder Reserve(int capacity) Parameters capacity int Returns BooleanArray.Builder Resize(int) public BooleanArray.Builder Resize(int length) Parameters length int Returns BooleanArray.Builder Set(int) public BooleanArray.Builder Set(int index) Parameters index int Returns BooleanArray.Builder Set(int, bool) public BooleanArray.Builder Set(int index, bool value) Parameters index int value bool Returns BooleanArray.Builder Swap(int, int) public BooleanArray.Builder Swap(int i, int j) Parameters i int j int Returns BooleanArray.Builder Toggle(int) public BooleanArray.Builder Toggle(int index) Parameters index int Returns BooleanArray.Builder"
  },
  "api/Apache.Arrow.BooleanArray.html": {
    "href": "api/Apache.Arrow.BooleanArray.html",
    "title": "Class BooleanArray | Apache Arrow .NET",
    "summary": "Class BooleanArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class BooleanArray : Array, IArrowArray, IDisposable, IReadOnlyList<bool?>, IReadOnlyCollection<bool?>, ICollection<bool?>, IEnumerable<bool?>, IEnumerable Inheritance object Array BooleanArray Implements IArrowArray IDisposable IReadOnlyList<bool?> IReadOnlyCollection<bool?> ICollection<bool?> IEnumerable<bool?> IEnumerable Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BooleanArray(ArrayData) public BooleanArray(ArrayData data) Parameters data ArrayData BooleanArray(ArrowBuffer, ArrowBuffer, int, int, int) public BooleanArray(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Properties ValueBuffer public ArrowBuffer ValueBuffer { get; } Property Value ArrowBuffer Values public ReadOnlySpan<byte> Values { get; } Property Value ReadOnlySpan<byte> Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetBoolean(int) [Obsolete(\"GetBoolean does not support null values. Use GetValue instead (which this method invokes internally).\")] public bool GetBoolean(int index) Parameters index int Returns bool GetValue(int) public bool? GetValue(int index) Parameters index int Returns bool?"
  },
  "api/Apache.Arrow.C.CArrowArray.html": {
    "href": "api/Apache.Arrow.C.CArrowArray.html",
    "title": "Struct CArrowArray | Apache Arrow .NET",
    "summary": "Struct CArrowArray Namespace Apache.Arrow.C Assembly Apache.Arrow.dll An Arrow C Data Interface Schema, which represents the data in an exported array or record batch. public struct CArrowArray Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Remarks This is used to export RecordBatch or IArrowArray to other languages. It matches the layout of the ArrowArray struct described in https://github.com/apache/arrow/blob/main/cpp/src/arrow/c/abi.h. Fields buffers public byte** buffers Field Value byte** children public CArrowArray** children Field Value CArrowArray** dictionary public CArrowArray* dictionary Field Value CArrowArray* length public long length Field Value long n_buffers public long n_buffers Field Value long n_children public long n_children Field Value long null_count public long null_count Field Value long offset public long offset Field Value long private_data public void* private_data Field Value void* Methods CallReleaseFunc(CArrowArray*) Call the array's release func, if set. public static void CallReleaseFunc(CArrowArray* array) Parameters array CArrowArray* Create() Allocate and zero-initialize an unmanaged pointer of this type. public static CArrowArray* Create() Returns CArrowArray* Remarks This pointer must later be freed by Free(CArrowArray*). Free(CArrowArray*) Free a pointer that was allocated in Create(). public static void Free(CArrowArray* array) Parameters array CArrowArray* Remarks Do not call this on a pointer that was allocated elsewhere."
  },
  "api/Apache.Arrow.C.CArrowArrayExporter.html": {
    "href": "api/Apache.Arrow.C.CArrowArrayExporter.html",
    "title": "Class CArrowArrayExporter | Apache Arrow .NET",
    "summary": "Class CArrowArrayExporter Namespace Apache.Arrow.C Assembly Apache.Arrow.dll public static class CArrowArrayExporter Inheritance object CArrowArrayExporter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExportArray(IArrowArray, CArrowArray*) Export an IArrowArray to a CArrowArray. Whether or not the export succeeds, the original array becomes invalid. Clone an array to continue using it after a copy has been exported. public static void ExportArray(IArrowArray array, CArrowArray* cArray) Parameters array IArrowArray The array to export cArray CArrowArray* An allocated but uninitialized CArrowArray pointer. Examples CArrowArray* exportPtr = CArrowArray.Create(); CArrowArrayExporter.ExportArray(array, exportPtr); foreign_import_function(exportPtr); ExportRecordBatch(RecordBatch, CArrowArray*) Export a RecordBatch to a CArrowArray. Whether or not the export succeeds, the original record batch becomes invalid. Clone the batch to continue using it after a copy has been exported. public static void ExportRecordBatch(RecordBatch batch, CArrowArray* cArray) Parameters batch RecordBatch The record batch to export cArray CArrowArray* An allocated but uninitialized CArrowArray pointer. Examples CArrowArray* exportPtr = CArrowArray.Create(); CArrowArrayExporter.ExportRecordBatch(batch, exportPtr); foreign_import_function(exportPtr);"
  },
  "api/Apache.Arrow.C.CArrowArrayImporter.html": {
    "href": "api/Apache.Arrow.C.CArrowArrayImporter.html",
    "title": "Class CArrowArrayImporter | Apache Arrow .NET",
    "summary": "Class CArrowArrayImporter Namespace Apache.Arrow.C Assembly Apache.Arrow.dll public static class CArrowArrayImporter Inheritance object CArrowArrayImporter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ImportArray(CArrowArray*, IArrowType) Import C pointer as an IArrowArray. public static IArrowArray ImportArray(CArrowArray* ptr, IArrowType type) Parameters ptr CArrowArray* The pointer to the array being imported type IArrowType The type of the array being imported Returns IArrowArray The imported C# array Remarks This will call the release callback once all of the buffers in the returned IArrowArray are disposed. ImportRecordBatch(CArrowArray*, Schema) Import C pointer as a RecordBatch. public static RecordBatch ImportRecordBatch(CArrowArray* ptr, Schema schema) Parameters ptr CArrowArray* The pointer to the record batch being imported schema Schema The schema type of the record batch being imported Returns RecordBatch The imported C# record batch Remarks This will call the release callback once all of the buffers in the returned RecordBatch are disposed."
  },
  "api/Apache.Arrow.C.CArrowArrayStream.html": {
    "href": "api/Apache.Arrow.C.CArrowArrayStream.html",
    "title": "Struct CArrowArrayStream | Apache Arrow .NET",
    "summary": "Struct CArrowArrayStream Namespace Apache.Arrow.C Assembly Apache.Arrow.dll An Arrow C Data Interface ArrowArrayStream, which represents a stream of record batches. public struct CArrowArrayStream Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Remarks This is used to export IArrowArrayStream to other languages. It matches the layout of the ArrowArrayStream struct described in https://github.com/apache/arrow/blob/main/cpp/src/arrow/c/abi.h. Fields private_data public void* private_data Field Value void* Methods Create() Allocate and zero-initialize an unmanaged pointer of this type. public static CArrowArrayStream* Create() Returns CArrowArrayStream* Remarks This pointer must later be freed by Free(CArrowArrayStream*). Free(CArrowArrayStream*) Free a pointer that was allocated in Create(). public static void Free(CArrowArrayStream* arrayStream) Parameters arrayStream CArrowArrayStream* Remarks Do not call this on a pointer that was allocated elsewhere."
  },
  "api/Apache.Arrow.C.CArrowArrayStreamExporter.html": {
    "href": "api/Apache.Arrow.C.CArrowArrayStreamExporter.html",
    "title": "Class CArrowArrayStreamExporter | Apache Arrow .NET",
    "summary": "Class CArrowArrayStreamExporter Namespace Apache.Arrow.C Assembly Apache.Arrow.dll public static class CArrowArrayStreamExporter Inheritance object CArrowArrayStreamExporter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExportArrayStream(IArrowArrayStream, CArrowArrayStream*) Export an IArrowArrayStream to a CArrowArrayStream. public static void ExportArrayStream(IArrowArrayStream arrayStream, CArrowArrayStream* cArrayStream) Parameters arrayStream IArrowArrayStream The array stream to export cArrayStream CArrowArrayStream* An allocated but uninitialized CArrowArrayStream pointer. Examples CArrowArrayStream* exportPtr = CArrowArrayStream.Create(); CArrowArrayStreamExporter.ExportArray(arrayStream, exportPtr); foreign_import_function(exportPtr);"
  },
  "api/Apache.Arrow.C.CArrowArrayStreamImporter.html": {
    "href": "api/Apache.Arrow.C.CArrowArrayStreamImporter.html",
    "title": "Class CArrowArrayStreamImporter | Apache Arrow .NET",
    "summary": "Class CArrowArrayStreamImporter Namespace Apache.Arrow.C Assembly Apache.Arrow.dll public static class CArrowArrayStreamImporter Inheritance object CArrowArrayStreamImporter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ImportArrayStream(CArrowArrayStream*) Import C pointer as an IArrowArrayStream. public static IArrowArrayStream ImportArrayStream(CArrowArrayStream* ptr) Parameters ptr CArrowArrayStream* The pointer to the stream being imported Returns IArrowArrayStream The imported C# array stream Remarks This will call the release callback on the passed struct if the function fails. Otherwise, the release callback is called when the IArrowArrayStream is disposed."
  },
  "api/Apache.Arrow.C.CArrowSchema.html": {
    "href": "api/Apache.Arrow.C.CArrowSchema.html",
    "title": "Struct CArrowSchema | Apache Arrow .NET",
    "summary": "Struct CArrowSchema Namespace Apache.Arrow.C Assembly Apache.Arrow.dll An Arrow C Data Interface Schema, which represents a type, field, or schema. public struct CArrowSchema Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Remarks This is used to export ArrowType, Field, or Schema to other languages. It matches the layout of the ArrowSchema struct described in https://github.com/apache/arrow/blob/main/cpp/src/arrow/c/abi.h. Fields ArrowFlagDictionaryOrdered For dictionary-encoded types, whether the ordering of dictionary indices is semantically meaningful. public const long ArrowFlagDictionaryOrdered = 1 Field Value long ArrowFlagMapKeysSorted For map types, whether the keys within each map value are sorted. public const long ArrowFlagMapKeysSorted = 4 Field Value long ArrowFlagNullable Whether this field is semantically nullable (regardless of whether it actually has null values) public const long ArrowFlagNullable = 2 Field Value long children public CArrowSchema** children Field Value CArrowSchema** dictionary public CArrowSchema* dictionary Field Value CArrowSchema* flags public long flags Field Value long format public byte* format Field Value byte* metadata public byte* metadata Field Value byte* n_children public long n_children Field Value long name public byte* name Field Value byte* private_data public void* private_data Field Value void* Methods Create() Allocate and zero-initialize an unmanaged pointer of this type. public static CArrowSchema* Create() Returns CArrowSchema* Remarks This pointer must later be freed by Free(CArrowSchema*). Free(CArrowSchema*) Free a pointer that was allocated in Create(). public static void Free(CArrowSchema* schema) Parameters schema CArrowSchema* Remarks Do not call this on a pointer that was allocated elsewhere. GetFlag(long) Get the value of a particular flag. public readonly bool GetFlag(long flag) Parameters flag long Returns bool Remarks Known valid flags are ArrowFlagDictionaryOrdered, ArrowFlagNullable, and ArrowFlagMapKeysSorted."
  },
  "api/Apache.Arrow.C.CArrowSchemaExporter.html": {
    "href": "api/Apache.Arrow.C.CArrowSchemaExporter.html",
    "title": "Class CArrowSchemaExporter | Apache Arrow .NET",
    "summary": "Class CArrowSchemaExporter Namespace Apache.Arrow.C Assembly Apache.Arrow.dll public static class CArrowSchemaExporter Inheritance object CArrowSchemaExporter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExportField(Field, CArrowSchema*) Export a field to a CArrowSchema. public static void ExportField(Field field, CArrowSchema* schema) Parameters field Field The field to export schema CArrowSchema* An allocated but uninitialized CArrowSchema pointer. Examples CArrowSchema* exportPtr = CArrowSchema.Create(); CArrowSchemaExporter.ExportType(field, exportPtr); foreign_import_function(exportPtr); CArrowSchema.Free(exportPtr); ExportSchema(Schema, CArrowSchema*) Export a schema to a CArrowSchema. public static void ExportSchema(Schema schema, CArrowSchema* out_schema) Parameters schema Schema The schema to export out_schema CArrowSchema* An allocated but uninitialized CArrowSchema pointer. Examples CArrowSchema* exportPtr = CArrowSchema.Create(); CArrowSchemaExporter.ExportType(schema, exportPtr); foreign_import_function(exportPtr); CArrowSchema.Free(exportPtr); ExportType(IArrowType, CArrowSchema*) Export a type to a CArrowSchema. public static void ExportType(IArrowType datatype, CArrowSchema* schema) Parameters datatype IArrowType The datatype to export schema CArrowSchema* An allocated but uninitialized CArrowSchema pointer. Examples CArrowSchema* exportPtr = CArrowSchema.Create(); CArrowSchemaExporter.ExportType(dataType, exportPtr); foreign_import_function(exportPtr); CArrowSchema.Free(exportPtr);"
  },
  "api/Apache.Arrow.C.CArrowSchemaImporter.html": {
    "href": "api/Apache.Arrow.C.CArrowSchemaImporter.html",
    "title": "Class CArrowSchemaImporter | Apache Arrow .NET",
    "summary": "Class CArrowSchemaImporter Namespace Apache.Arrow.C Assembly Apache.Arrow.dll public static class CArrowSchemaImporter Inheritance object CArrowSchemaImporter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ImportField(CArrowSchema*) Import C pointer as a Field. public static Field ImportField(CArrowSchema* ptr) Parameters ptr CArrowSchema* Returns Field Remarks This will call the release callback on the passed struct, even if this function fails. ImportSchema(CArrowSchema*) Import C pointer as a Schema. public static Schema ImportSchema(CArrowSchema* ptr) Parameters ptr CArrowSchema* Returns Schema Remarks This will call the release callback on the passed struct, even if this function fails. ImportType(CArrowSchema*) Import C pointer as an ArrowType. public static ArrowType ImportType(CArrowSchema* ptr) Parameters ptr CArrowSchema* Returns ArrowType Remarks This will call the release callback on the passed struct, even if this function fails."
  },
  "api/Apache.Arrow.C.html": {
    "href": "api/Apache.Arrow.C.html",
    "title": "Namespace Apache.Arrow.C | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.C Classes CArrowArrayExporter CArrowArrayImporter CArrowArrayStreamExporter CArrowArrayStreamImporter CArrowSchemaExporter CArrowSchemaImporter Structs CArrowArray An Arrow C Data Interface Schema, which represents the data in an exported array or record batch. CArrowArrayStream An Arrow C Data Interface ArrowArrayStream, which represents a stream of record batches. CArrowSchema An Arrow C Data Interface Schema, which represents a type, field, or schema."
  },
  "api/Apache.Arrow.ChunkedArray.html": {
    "href": "api/Apache.Arrow.ChunkedArray.html",
    "title": "Class ChunkedArray | Apache Arrow .NET",
    "summary": "Class ChunkedArray Namespace Apache.Arrow Assembly Apache.Arrow.dll A data structure to manage a list of primitive Array arrays logically as one large array public class ChunkedArray Inheritance object ChunkedArray Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChunkedArray(Array) public ChunkedArray(Array array) Parameters array Array ChunkedArray(IList<Array>) public ChunkedArray(IList<Array> arrays) Parameters arrays IList<Array> ChunkedArray(IList<IArrowArray>) public ChunkedArray(IList<IArrowArray> arrays) Parameters arrays IList<IArrowArray> Properties ArrayCount public int ArrayCount { get; } Property Value int DataType public IArrowType DataType { get; } Property Value IArrowType Length public long Length { get; } Property Value long NullCount public long NullCount { get; } Property Value long Methods Array(int) public Array Array(int index) Parameters index int Returns Array ArrowArray(int) public IArrowArray ArrowArray(int index) Parameters index int Returns IArrowArray Slice(long) public ChunkedArray Slice(long offset) Parameters offset long Returns ChunkedArray Slice(long, long) public ChunkedArray Slice(long offset, long length) Parameters offset long length long Returns ChunkedArray ToString() public override string ToString() Returns string"
  },
  "api/Apache.Arrow.Column.html": {
    "href": "api/Apache.Arrow.Column.html",
    "title": "Class Column | Apache Arrow .NET",
    "summary": "Class Column Namespace Apache.Arrow Assembly Apache.Arrow.dll A Column data structure that logically represents a column in a dataset public class Column Inheritance object Column Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Column(Field, IList<Array>) public Column(Field field, IList<Array> arrays) Parameters field Field arrays IList<Array> Column(Field, IList<IArrowArray>) public Column(Field field, IList<IArrowArray> arrays) Parameters field Field arrays IList<IArrowArray> Properties Data public ChunkedArray Data { get; } Property Value ChunkedArray Field public Field Field { get; } Property Value Field Length public long Length { get; } Property Value long Name public string Name { get; } Property Value string NullCount public long NullCount { get; } Property Value long Type public IArrowType Type { get; } Property Value IArrowType Methods Slice(int) public Column Slice(int offset) Parameters offset int Returns Column Slice(int, int) public Column Slice(int offset, int length) Parameters offset int length int Returns Column"
  },
  "api/Apache.Arrow.Compression.CompressionCodecFactory.html": {
    "href": "api/Apache.Arrow.Compression.CompressionCodecFactory.html",
    "title": "Class CompressionCodecFactory | Apache Arrow .NET",
    "summary": "Class CompressionCodecFactory Namespace Apache.Arrow.Compression Assembly Apache.Arrow.Compression.dll Creates compression codec implementations for decompressing Arrow IPC data public sealed class CompressionCodecFactory : ICompressionCodecFactory Inheritance object CompressionCodecFactory Implements ICompressionCodecFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods CreateCodec(CompressionCodecType) Create a new compression codec public ICompressionCodec CreateCodec(CompressionCodecType compressionCodecType) Parameters compressionCodecType CompressionCodecType The type of codec to create Returns ICompressionCodec The created codec CreateCodec(CompressionCodecType, int?) Create a new compression codec with a specified compression level public ICompressionCodec CreateCodec(CompressionCodecType compressionCodecType, int? compressionLevel) Parameters compressionCodecType CompressionCodecType The type of codec to create compressionLevel int? The compression level to use when compressing data Returns ICompressionCodec The created codec"
  },
  "api/Apache.Arrow.Compression.html": {
    "href": "api/Apache.Arrow.Compression.html",
    "title": "Namespace Apache.Arrow.Compression | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Compression Classes CompressionCodecFactory Creates compression codec implementations for decompressing Arrow IPC data"
  },
  "api/Apache.Arrow.Date32Array.Builder.html": {
    "href": "api/Apache.Arrow.Date32Array.Builder.html",
    "title": "Class Date32Array.Builder | Apache Arrow .NET",
    "summary": "Class Date32Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll The Date32Array.Builder class can be used to fluently build Date32Array objects. public class Date32Array.Builder : DateArrayBuilder<int, Date32Array, Date32Array.Builder>, IArrowArrayBuilder<DateTime, Date32Array, Date32Array.Builder>, IArrowArrayBuilder<DateTimeOffset, Date32Array, Date32Array.Builder>, IArrowArrayBuilder<Date32Array, Date32Array.Builder>, IArrowArrayBuilder<Date32Array>, IArrowArrayBuilder Inheritance object DelegatingArrayBuilder<int, Date32Array, Date32Array.Builder> DateArrayBuilder<int, Date32Array, Date32Array.Builder> Date32Array.Builder Implements IArrowArrayBuilder<DateTime, Date32Array, Date32Array.Builder> IArrowArrayBuilder<DateTimeOffset, Date32Array, Date32Array.Builder> IArrowArrayBuilder<Date32Array, Date32Array.Builder> IArrowArrayBuilder<Date32Array> IArrowArrayBuilder Inherited Members DateArrayBuilder<int, Date32Array, Date32Array.Builder>.Append(DateTime) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.Append(DateTimeOffset) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.Append(ReadOnlySpan<DateTime>) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.Append(ReadOnlySpan<DateTimeOffset>) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.AppendNull() DateArrayBuilder<int, Date32Array, Date32Array.Builder>.AppendRange(IEnumerable<DateTime>) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.AppendRange(IEnumerable<DateTimeOffset>) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.Set(int, DateTime) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.Set(int, DateTimeOffset) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.Swap(int, int) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.Convert(DateTime) DateArrayBuilder<int, Date32Array, Date32Array.Builder>.Convert(DateTimeOffset) DelegatingArrayBuilder<int, Date32Array, Date32Array.Builder>.InnerBuilder DelegatingArrayBuilder<int, Date32Array, Date32Array.Builder>.Length DelegatingArrayBuilder<int, Date32Array, Date32Array.Builder>.Build(MemoryAllocator) DelegatingArrayBuilder<int, Date32Array, Date32Array.Builder>.Reserve(int) DelegatingArrayBuilder<int, Date32Array, Date32Array.Builder>.Resize(int) DelegatingArrayBuilder<int, Date32Array, Date32Array.Builder>.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() Construct a new instance of the Date32Array.Builder class. public Builder() Methods Convert(DateTime) protected override int Convert(DateTime dateTime) Parameters dateTime DateTime Returns int Convert(DateTimeOffset) protected override int Convert(DateTimeOffset dateTimeOffset) Parameters dateTimeOffset DateTimeOffset Returns int"
  },
  "api/Apache.Arrow.Date32Array.html": {
    "href": "api/Apache.Arrow.Date32Array.html",
    "title": "Class Date32Array | Apache Arrow .NET",
    "summary": "Class Date32Array Namespace Apache.Arrow Assembly Apache.Arrow.dll The Date32Array class holds an array of dates in the Date32 format, where each date is stored as the number of days since the dawn of (UNIX) time. public class Date32Array : PrimitiveArray<int>, IArrowArray, IDisposable, IReadOnlyList<int?>, IReadOnlyCollection<int?>, ICollection<int?>, IEnumerable<int?>, IReadOnlyList<DateTime?>, IReadOnlyCollection<DateTime?>, ICollection<DateTime?>, IEnumerable<DateTime?>, IEnumerable Inheritance object Array PrimitiveArray<int> Date32Array Implements IArrowArray IDisposable IReadOnlyList<int?> IReadOnlyCollection<int?> ICollection<int?> IEnumerable<int?> IReadOnlyList<DateTime?> IReadOnlyCollection<DateTime?> ICollection<DateTime?> IEnumerable<DateTime?> IEnumerable Inherited Members PrimitiveArray<int>.ValueBuffer PrimitiveArray<int>.Values PrimitiveArray<int>.GetValue(int) PrimitiveArray<int>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Date32Array(ArrayData) public Date32Array(ArrayData data) Parameters data ArrayData Date32Array(ArrowBuffer, ArrowBuffer, int, int, int) public Date32Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetDate(int) [Obsolete(\"Use `GetDateTimeOffset()` instead\")] public DateTimeOffset? GetDate(int index) Parameters index int Returns DateTimeOffset? GetDateTime(int) Get the date at the specified index in the form of a DateTime object. public DateTime? GetDateTime(int index) Parameters index int Index at which to get the date. Returns DateTime? Returns a DateTime object, or null if there is no object at that index. Remarks The Kind property of the returned object is set to Unspecified. GetDateTimeOffset(int) Get the date at the specified index in the form of a DateTimeOffset object. public DateTimeOffset? GetDateTimeOffset(int index) Parameters index int Index at which to get the date. Returns DateTimeOffset? Returns a DateTimeOffset object, or null if there is no object at that index."
  },
  "api/Apache.Arrow.Date64Array.Builder.html": {
    "href": "api/Apache.Arrow.Date64Array.Builder.html",
    "title": "Class Date64Array.Builder | Apache Arrow .NET",
    "summary": "Class Date64Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll The Date64Array.Builder class can be used to fluently build Date64Array objects. public class Date64Array.Builder : DateArrayBuilder<long, Date64Array, Date64Array.Builder>, IArrowArrayBuilder<DateTime, Date64Array, Date64Array.Builder>, IArrowArrayBuilder<DateTimeOffset, Date64Array, Date64Array.Builder>, IArrowArrayBuilder<Date64Array, Date64Array.Builder>, IArrowArrayBuilder<Date64Array>, IArrowArrayBuilder Inheritance object DelegatingArrayBuilder<long, Date64Array, Date64Array.Builder> DateArrayBuilder<long, Date64Array, Date64Array.Builder> Date64Array.Builder Implements IArrowArrayBuilder<DateTime, Date64Array, Date64Array.Builder> IArrowArrayBuilder<DateTimeOffset, Date64Array, Date64Array.Builder> IArrowArrayBuilder<Date64Array, Date64Array.Builder> IArrowArrayBuilder<Date64Array> IArrowArrayBuilder Inherited Members DateArrayBuilder<long, Date64Array, Date64Array.Builder>.Append(DateTime) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.Append(DateTimeOffset) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.Append(ReadOnlySpan<DateTime>) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.Append(ReadOnlySpan<DateTimeOffset>) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.AppendNull() DateArrayBuilder<long, Date64Array, Date64Array.Builder>.AppendRange(IEnumerable<DateTime>) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.AppendRange(IEnumerable<DateTimeOffset>) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.Set(int, DateTime) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.Set(int, DateTimeOffset) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.Swap(int, int) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.Convert(DateTime) DateArrayBuilder<long, Date64Array, Date64Array.Builder>.Convert(DateTimeOffset) DelegatingArrayBuilder<long, Date64Array, Date64Array.Builder>.InnerBuilder DelegatingArrayBuilder<long, Date64Array, Date64Array.Builder>.Length DelegatingArrayBuilder<long, Date64Array, Date64Array.Builder>.Build(MemoryAllocator) DelegatingArrayBuilder<long, Date64Array, Date64Array.Builder>.Reserve(int) DelegatingArrayBuilder<long, Date64Array, Date64Array.Builder>.Resize(int) DelegatingArrayBuilder<long, Date64Array, Date64Array.Builder>.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() Construct a new instance of the Date64Array.Builder class. public Builder() Methods Convert(DateTime) protected override long Convert(DateTime dateTime) Parameters dateTime DateTime Returns long Convert(DateTimeOffset) protected override long Convert(DateTimeOffset dateTimeOffset) Parameters dateTimeOffset DateTimeOffset Returns long"
  },
  "api/Apache.Arrow.Date64Array.html": {
    "href": "api/Apache.Arrow.Date64Array.html",
    "title": "Class Date64Array | Apache Arrow .NET",
    "summary": "Class Date64Array Namespace Apache.Arrow Assembly Apache.Arrow.dll The Date64Array class holds an array of dates in the Date64 format, where each date is stored as the number of milliseconds since the dawn of (UNIX) time, excluding leap seconds, in multiples of 86400000. public class Date64Array : PrimitiveArray<long>, IArrowArray, IDisposable, IReadOnlyList<long?>, IReadOnlyCollection<long?>, ICollection<long?>, IEnumerable<long?>, IReadOnlyList<DateTime?>, IReadOnlyCollection<DateTime?>, ICollection<DateTime?>, IEnumerable<DateTime?>, IEnumerable Inheritance object Array PrimitiveArray<long> Date64Array Implements IArrowArray IDisposable IReadOnlyList<long?> IReadOnlyCollection<long?> ICollection<long?> IEnumerable<long?> IReadOnlyList<DateTime?> IReadOnlyCollection<DateTime?> ICollection<DateTime?> IEnumerable<DateTime?> IEnumerable Inherited Members PrimitiveArray<long>.ValueBuffer PrimitiveArray<long>.Values PrimitiveArray<long>.GetValue(int) PrimitiveArray<long>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Date64Array(ArrayData) public Date64Array(ArrayData data) Parameters data ArrayData Date64Array(ArrowBuffer, ArrowBuffer, int, int, int) public Date64Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetDate(int) [Obsolete(\"Use `GetDateTimeOffset()` instead\")] public DateTimeOffset? GetDate(int index) Parameters index int Returns DateTimeOffset? GetDateTime(int) Get the date at the specified index in the form of a DateTime object. public DateTime? GetDateTime(int index) Parameters index int Index at which to get the date. Returns DateTime? Returns a DateTime object, or null if there is no object at that index. Remarks The Kind property of the returned object is set to Unspecified. GetDateTimeOffset(int) Get the date at the specified index in the form of a DateTimeOffset object. public DateTimeOffset? GetDateTimeOffset(int index) Parameters index int Index at which to get the date. Returns DateTimeOffset? Returns a DateTimeOffset object, or null if there is no object at that index."
  },
  "api/Apache.Arrow.DateArrayBuilder-3.html": {
    "href": "api/Apache.Arrow.DateArrayBuilder-3.html",
    "title": "Class DateArrayBuilder<TUnderlying, TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Class DateArrayBuilder<TUnderlying, TArray, TBuilder> Namespace Apache.Arrow Assembly Apache.Arrow.dll The DateArrayBuilder<TUnderlying, TArray, TBuilder> class is an abstract array builder that can accept dates in the form of DateTime or DateTimeOffset and convert to some underlying date representation. public abstract class DateArrayBuilder<TUnderlying, TArray, TBuilder> : DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>, IArrowArrayBuilder<DateTime, TArray, TBuilder>, IArrowArrayBuilder<DateTimeOffset, TArray, TBuilder>, IArrowArrayBuilder<TArray, TBuilder>, IArrowArrayBuilder<TArray>, IArrowArrayBuilder where TArray : IArrowArray where TBuilder : class, IArrowArrayBuilder<TArray> Type Parameters TUnderlying TArray TBuilder Inheritance object DelegatingArrayBuilder<TUnderlying, TArray, TBuilder> DateArrayBuilder<TUnderlying, TArray, TBuilder> Implements IArrowArrayBuilder<DateTime, TArray, TBuilder> IArrowArrayBuilder<DateTimeOffset, TArray, TBuilder> IArrowArrayBuilder<TArray, TBuilder> IArrowArrayBuilder<TArray> IArrowArrayBuilder Derived Date32Array.Builder Date64Array.Builder Inherited Members DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.InnerBuilder DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Length DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Build(MemoryAllocator) DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Reserve(int) DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Resize(int) DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Clear() DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.AppendNull() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DateArrayBuilder(IArrowArrayBuilder<TUnderlying, TArray, IArrowArrayBuilder<TArray>>) Construct a new instance of the DateArrayBuilder<TUnderlying, TArray, TBuilder> class. protected DateArrayBuilder(IArrowArrayBuilder<TUnderlying, TArray, IArrowArrayBuilder<TArray>> innerBuilder) Parameters innerBuilder IArrowArrayBuilder<TUnderlying, TArray, IArrowArrayBuilder<TArray>> Inner builder that will produce arrays of type TArray. Methods Append(DateTime) Append a date in the form of a DateTime object to the array. public TBuilder Append(DateTime value) Parameters value DateTime Date to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks The value of Kind on the input does not have any effect on the behaviour of this method. Append(DateTimeOffset) Append a date from a DateTimeOffset object to the array. public TBuilder Append(DateTimeOffset value) Parameters value DateTimeOffset Date to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that to convert the supplied value parameter to a date, it is first converted to UTC and the date then taken from the UTC date/time. Depending on the value of its Offset property, this may not necessarily be the same as the date obtained by calling its Date property. Append(ReadOnlySpan<DateTimeOffset>) Append a span of dates in the form of DateTimeOffset objects to the array. public TBuilder Append(ReadOnlySpan<DateTimeOffset> span) Parameters span ReadOnlySpan<DateTimeOffset> Span of dates to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that to convert the DateTimeOffset objects in the span parameter to dates, they are first converted to UTC and the date then taken from the UTC date/times. Depending on the value of each Offset property, this may not necessarily be the same as the date obtained by calling the Date property. Append(ReadOnlySpan<DateTime>) Append a span of dates in the form of DateTime objects to the array. public TBuilder Append(ReadOnlySpan<DateTime> span) Parameters span ReadOnlySpan<DateTime> Span of dates to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks The value of Kind on any of the inputs does not have any effect on the behaviour of this method. AppendNull() Append a null date to the array. public override TBuilder AppendNull() Returns TBuilder Returns the builder (for fluent-style composition). AppendRange(IEnumerable<DateTimeOffset>) Append a collection of dates in the form of DateTimeOffset objects to the array. public TBuilder AppendRange(IEnumerable<DateTimeOffset> values) Parameters values IEnumerable<DateTimeOffset> Collection of dates to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that to convert the DateTimeOffset objects in the values parameter to dates, they are first converted to UTC and the date then taken from the UTC date/times. Depending on the value of each Offset property, this may not necessarily be the same as the date obtained by calling the Date property. AppendRange(IEnumerable<DateTime>) Append a collection of dates in the form of DateTime objects to the array. public TBuilder AppendRange(IEnumerable<DateTime> values) Parameters values IEnumerable<DateTime> Collection of dates to add. Returns TBuilder Returns the builder (for fluent-style composition). Remarks The value of Kind on any of the inputs does not have any effect on the behaviour of this method. Convert(DateTime) protected abstract TUnderlying Convert(DateTime dateTime) Parameters dateTime DateTime Returns TUnderlying Convert(DateTimeOffset) protected abstract TUnderlying Convert(DateTimeOffset dateTimeOffset) Parameters dateTimeOffset DateTimeOffset Returns TUnderlying Set(int, DateTime) Set the value of a date in the form of a DateTime object at the specified index. public TBuilder Set(int index, DateTime value) Parameters index int Index at which to set value. value DateTime Date to set. Returns TBuilder Returns the builder (for fluent-style composition). Remarks The value of Kind on the input does not have any effect on the behaviour of this method. Set(int, DateTimeOffset) Set the value of a date in the form of a DateTimeOffset object at the specified index. public TBuilder Set(int index, DateTimeOffset value) Parameters index int Index at which to set value. value DateTimeOffset Date to set. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that to convert the supplied value parameter to a date, it is first converted to UTC and the date then taken from the UTC date/time. Depending on the value of its Offset property, this may not necessarily be the same as the date obtained by calling its Date property. Swap(int, int) Swap the values of the dates at the specified indices. public TBuilder Swap(int i, int j) Parameters i int First index. j int Second index. Returns TBuilder Returns the builder (for fluent-style composition)."
  },
  "api/Apache.Arrow.DayTimeIntervalArray.Builder.html": {
    "href": "api/Apache.Arrow.DayTimeIntervalArray.Builder.html",
    "title": "Class DayTimeIntervalArray.Builder | Apache Arrow .NET",
    "summary": "Class DayTimeIntervalArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class DayTimeIntervalArray.Builder : PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>, IArrowArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>, IArrowArrayBuilder<DayTimeIntervalArray, DayTimeIntervalArray.Builder>, IArrowArrayBuilder<DayTimeIntervalArray>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder> DayTimeIntervalArray.Builder Implements IArrowArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder> IArrowArrayBuilder<DayTimeIntervalArray, DayTimeIntervalArray.Builder> IArrowArrayBuilder<DayTimeIntervalArray> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Instance PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.ValueBuffer PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.ValidityBuffer PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Length PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.NullCount PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Resize(int) PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Reserve(int) PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Append(DayTimeInterval) PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Append(DayTimeInterval?) PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Append(ReadOnlySpan<DayTimeInterval>) PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.AppendRange(IEnumerable<DayTimeInterval>) PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.AppendNull() PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Clear() PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Set(int, DayTimeInterval) PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Swap(int, int) PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<DayTimeInterval, DayTimeIntervalArray, DayTimeIntervalArray.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override DayTimeIntervalArray Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns DayTimeIntervalArray"
  },
  "api/Apache.Arrow.DayTimeIntervalArray.html": {
    "href": "api/Apache.Arrow.DayTimeIntervalArray.html",
    "title": "Class DayTimeIntervalArray | Apache Arrow .NET",
    "summary": "Class DayTimeIntervalArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public sealed class DayTimeIntervalArray : IntervalArray<DayTimeInterval>, IArrowArray, IDisposable, IReadOnlyList<DayTimeInterval?>, IReadOnlyCollection<DayTimeInterval?>, ICollection<DayTimeInterval?>, IEnumerable<DayTimeInterval?>, IEnumerable Inheritance object Array PrimitiveArray<DayTimeInterval> IntervalArray<DayTimeInterval> DayTimeIntervalArray Implements IArrowArray IDisposable IReadOnlyList<DayTimeInterval?> IReadOnlyCollection<DayTimeInterval?> ICollection<DayTimeInterval?> IEnumerable<DayTimeInterval?> IEnumerable Inherited Members IntervalArray<DayTimeInterval>.Type IntervalArray<DayTimeInterval>.Unit PrimitiveArray<DayTimeInterval>.ValueBuffer PrimitiveArray<DayTimeInterval>.Values PrimitiveArray<DayTimeInterval>.GetValue(int) PrimitiveArray<DayTimeInterval>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors DayTimeIntervalArray(ArrayData) public DayTimeIntervalArray(ArrayData data) Parameters data ArrayData DayTimeIntervalArray(ArrowBuffer, ArrowBuffer, int, int, int) public DayTimeIntervalArray(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.Decimal128Array.Builder.html": {
    "href": "api/Apache.Arrow.Decimal128Array.Builder.html",
    "title": "Class Decimal128Array.Builder | Apache Arrow .NET",
    "summary": "Class Decimal128Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Decimal128Array.Builder : FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>, IArrowArrayBuilder<byte[], Decimal128Array, Decimal128Array.Builder>, IArrowArrayBuilder<Decimal128Array, Decimal128Array.Builder>, IArrowArrayBuilder<Decimal128Array>, IArrowArrayBuilder Inheritance object FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder> Decimal128Array.Builder Implements IArrowArrayBuilder<byte[], Decimal128Array, Decimal128Array.Builder> IArrowArrayBuilder<Decimal128Array, Decimal128Array.Builder> IArrowArrayBuilder<Decimal128Array> IArrowArrayBuilder Inherited Members FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.DataType FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Instance FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.ByteWidth FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.ValueBuffer FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.ValidityBuffer FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Length FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.NullCount FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Build(ArrayData) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Build(MemoryAllocator) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Reserve(int) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Resize(int) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Clear() FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Append(byte[]) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Append(ReadOnlySpan<byte[]>) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.AppendRange(IEnumerable<byte[]>) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Append(ReadOnlySpan<byte>) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.AppendNull() FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Swap(int, int) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Set(int, byte[]) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.Set(int, ReadOnlySpan<byte>) FixedSizeBinaryArray.BuilderBase<Decimal128Array, Decimal128Array.Builder>.SetNull(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(Decimal128Type) public Builder(Decimal128Type type) Parameters type Decimal128Type Properties DataType protected Decimal128Type DataType { get; } Property Value Decimal128Type Methods Append(SqlDecimal) public Decimal128Array.Builder Append(SqlDecimal value) Parameters value SqlDecimal Returns Decimal128Array.Builder Append(decimal) public Decimal128Array.Builder Append(decimal value) Parameters value decimal Returns Decimal128Array.Builder Append(string) public Decimal128Array.Builder Append(string value) Parameters value string Returns Decimal128Array.Builder AppendRange(IEnumerable<SqlDecimal>) public Decimal128Array.Builder AppendRange(IEnumerable<SqlDecimal> values) Parameters values IEnumerable<SqlDecimal> Returns Decimal128Array.Builder AppendRange(IEnumerable<decimal>) public Decimal128Array.Builder AppendRange(IEnumerable<decimal> values) Parameters values IEnumerable<decimal> Returns Decimal128Array.Builder AppendRange(IEnumerable<string>) public Decimal128Array.Builder AppendRange(IEnumerable<string> values) Parameters values IEnumerable<string> Returns Decimal128Array.Builder Build(ArrayData) protected override Decimal128Array Build(ArrayData data) Parameters data ArrayData Returns Decimal128Array Set(int, decimal) public Decimal128Array.Builder Set(int index, decimal value) Parameters index int value decimal Returns Decimal128Array.Builder"
  },
  "api/Apache.Arrow.Decimal128Array.html": {
    "href": "api/Apache.Arrow.Decimal128Array.html",
    "title": "Class Decimal128Array | Apache Arrow .NET",
    "summary": "Class Decimal128Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Decimal128Array : FixedSizeBinaryArray, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, IEnumerable<byte[]>, IReadOnlyList<SqlDecimal?>, IReadOnlyCollection<SqlDecimal?>, IEnumerable<SqlDecimal?>, IEnumerable Inheritance object Array FixedSizeBinaryArray Decimal128Array Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> IEnumerable<byte[]> IReadOnlyList<SqlDecimal?> IReadOnlyCollection<SqlDecimal?> IEnumerable<SqlDecimal?> IEnumerable Inherited Members FixedSizeBinaryArray.ValueBuffer FixedSizeBinaryArray.GetBytes(int) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Decimal128Array(ArrayData) public Decimal128Array(ArrayData data) Parameters data ArrayData Properties ByteWidth public int ByteWidth { get; } Property Value int Precision public int Precision { get; } Property Value int Scale public int Scale { get; } Property Value int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetSqlDecimal(int) public SqlDecimal? GetSqlDecimal(int index) Parameters index int Returns SqlDecimal? GetString(int) public string GetString(int index) Parameters index int Returns string GetValue(int) public decimal? GetValue(int index) Parameters index int Returns decimal? ToList(bool) public IList<decimal?> ToList(bool includeNulls = false) Parameters includeNulls bool Returns IList<decimal?>"
  },
  "api/Apache.Arrow.Decimal256Array.Builder.html": {
    "href": "api/Apache.Arrow.Decimal256Array.Builder.html",
    "title": "Class Decimal256Array.Builder | Apache Arrow .NET",
    "summary": "Class Decimal256Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Decimal256Array.Builder : FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>, IArrowArrayBuilder<byte[], Decimal256Array, Decimal256Array.Builder>, IArrowArrayBuilder<Decimal256Array, Decimal256Array.Builder>, IArrowArrayBuilder<Decimal256Array>, IArrowArrayBuilder Inheritance object FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder> Decimal256Array.Builder Implements IArrowArrayBuilder<byte[], Decimal256Array, Decimal256Array.Builder> IArrowArrayBuilder<Decimal256Array, Decimal256Array.Builder> IArrowArrayBuilder<Decimal256Array> IArrowArrayBuilder Inherited Members FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.DataType FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Instance FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.ByteWidth FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.ValueBuffer FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.ValidityBuffer FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Length FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.NullCount FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Build(ArrayData) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Build(MemoryAllocator) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Reserve(int) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Resize(int) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Clear() FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Append(byte[]) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Append(ReadOnlySpan<byte[]>) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.AppendRange(IEnumerable<byte[]>) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Append(ReadOnlySpan<byte>) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.AppendNull() FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Swap(int, int) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Set(int, byte[]) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.Set(int, ReadOnlySpan<byte>) FixedSizeBinaryArray.BuilderBase<Decimal256Array, Decimal256Array.Builder>.SetNull(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(Decimal256Type) public Builder(Decimal256Type type) Parameters type Decimal256Type Properties DataType protected Decimal256Type DataType { get; } Property Value Decimal256Type Methods Append(SqlDecimal) public Decimal256Array.Builder Append(SqlDecimal value) Parameters value SqlDecimal Returns Decimal256Array.Builder Append(decimal) public Decimal256Array.Builder Append(decimal value) Parameters value decimal Returns Decimal256Array.Builder Append(string) public Decimal256Array.Builder Append(string value) Parameters value string Returns Decimal256Array.Builder AppendRange(IEnumerable<SqlDecimal>) public Decimal256Array.Builder AppendRange(IEnumerable<SqlDecimal> values) Parameters values IEnumerable<SqlDecimal> Returns Decimal256Array.Builder AppendRange(IEnumerable<decimal>) public Decimal256Array.Builder AppendRange(IEnumerable<decimal> values) Parameters values IEnumerable<decimal> Returns Decimal256Array.Builder AppendRange(IEnumerable<string>) public Decimal256Array.Builder AppendRange(IEnumerable<string> values) Parameters values IEnumerable<string> Returns Decimal256Array.Builder Build(ArrayData) protected override Decimal256Array Build(ArrayData data) Parameters data ArrayData Returns Decimal256Array Set(int, decimal) public Decimal256Array.Builder Set(int index, decimal value) Parameters index int value decimal Returns Decimal256Array.Builder"
  },
  "api/Apache.Arrow.Decimal256Array.html": {
    "href": "api/Apache.Arrow.Decimal256Array.html",
    "title": "Class Decimal256Array | Apache Arrow .NET",
    "summary": "Class Decimal256Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Decimal256Array : FixedSizeBinaryArray, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, IEnumerable<byte[]>, IReadOnlyList<SqlDecimal?>, IReadOnlyCollection<SqlDecimal?>, IEnumerable<SqlDecimal?>, IReadOnlyList<string?>, IReadOnlyCollection<string?>, IEnumerable<string?>, IEnumerable Inheritance object Array FixedSizeBinaryArray Decimal256Array Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> IEnumerable<byte[]> IReadOnlyList<SqlDecimal?> IReadOnlyCollection<SqlDecimal?> IEnumerable<SqlDecimal?> IReadOnlyList<string> IReadOnlyCollection<string> IEnumerable<string> IEnumerable Inherited Members FixedSizeBinaryArray.ValueBuffer FixedSizeBinaryArray.GetBytes(int) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Decimal256Array(ArrayData) public Decimal256Array(ArrayData data) Parameters data ArrayData Properties ByteWidth public int ByteWidth { get; } Property Value int Precision public int Precision { get; } Property Value int Scale public int Scale { get; } Property Value int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetString(int) public string? GetString(int index) Parameters index int Returns string GetValue(int) public decimal? GetValue(int index) Parameters index int Returns decimal? ToList(bool) public IList<decimal?> ToList(bool includeNulls = false) Parameters includeNulls bool Returns IList<decimal?> TryGetSqlDecimal(int, out SqlDecimal?) public bool TryGetSqlDecimal(int index, out SqlDecimal? value) Parameters index int value SqlDecimal? Returns bool"
  },
  "api/Apache.Arrow.Decimal32Array.Builder.html": {
    "href": "api/Apache.Arrow.Decimal32Array.Builder.html",
    "title": "Class Decimal32Array.Builder | Apache Arrow .NET",
    "summary": "Class Decimal32Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Decimal32Array.Builder : FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>, IArrowArrayBuilder<byte[], Decimal32Array, Decimal32Array.Builder>, IArrowArrayBuilder<Decimal32Array, Decimal32Array.Builder>, IArrowArrayBuilder<Decimal32Array>, IArrowArrayBuilder Inheritance object FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder> Decimal32Array.Builder Implements IArrowArrayBuilder<byte[], Decimal32Array, Decimal32Array.Builder> IArrowArrayBuilder<Decimal32Array, Decimal32Array.Builder> IArrowArrayBuilder<Decimal32Array> IArrowArrayBuilder Inherited Members FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.DataType FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Instance FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.ByteWidth FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.ValueBuffer FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.ValidityBuffer FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Length FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.NullCount FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Build(ArrayData) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Build(MemoryAllocator) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Reserve(int) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Resize(int) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Clear() FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Append(byte[]) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Append(ReadOnlySpan<byte[]>) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.AppendRange(IEnumerable<byte[]>) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Append(ReadOnlySpan<byte>) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.AppendNull() FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Swap(int, int) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Set(int, byte[]) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.Set(int, ReadOnlySpan<byte>) FixedSizeBinaryArray.BuilderBase<Decimal32Array, Decimal32Array.Builder>.SetNull(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(Decimal32Type) public Builder(Decimal32Type type) Parameters type Decimal32Type Properties DataType protected Decimal32Type DataType { get; } Property Value Decimal32Type Methods Append(decimal) public Decimal32Array.Builder Append(decimal value) Parameters value decimal Returns Decimal32Array.Builder Append(string) public Decimal32Array.Builder Append(string value) Parameters value string Returns Decimal32Array.Builder AppendRange(IEnumerable<decimal>) public Decimal32Array.Builder AppendRange(IEnumerable<decimal> values) Parameters values IEnumerable<decimal> Returns Decimal32Array.Builder AppendRange(IEnumerable<string>) public Decimal32Array.Builder AppendRange(IEnumerable<string> values) Parameters values IEnumerable<string> Returns Decimal32Array.Builder Build(ArrayData) protected override Decimal32Array Build(ArrayData data) Parameters data ArrayData Returns Decimal32Array Set(int, decimal) public Decimal32Array.Builder Set(int index, decimal value) Parameters index int value decimal Returns Decimal32Array.Builder"
  },
  "api/Apache.Arrow.Decimal32Array.html": {
    "href": "api/Apache.Arrow.Decimal32Array.html",
    "title": "Class Decimal32Array | Apache Arrow .NET",
    "summary": "Class Decimal32Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Decimal32Array : FixedSizeBinaryArray, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, IEnumerable<byte[]>, IReadOnlyList<decimal?>, IReadOnlyCollection<decimal?>, IEnumerable<decimal?>, IEnumerable Inheritance object Array FixedSizeBinaryArray Decimal32Array Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> IEnumerable<byte[]> IReadOnlyList<decimal?> IReadOnlyCollection<decimal?> IEnumerable<decimal?> IEnumerable Inherited Members FixedSizeBinaryArray.ValueBuffer FixedSizeBinaryArray.GetBytes(int) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Decimal32Array(ArrayData) public Decimal32Array(ArrayData data) Parameters data ArrayData Properties ByteWidth public int ByteWidth { get; } Property Value int Precision public int Precision { get; } Property Value int Scale public int Scale { get; } Property Value int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetDecimal(int) public decimal? GetDecimal(int index) Parameters index int Returns decimal? GetString(int) public string GetString(int index) Parameters index int Returns string GetValue(int) public decimal? GetValue(int index) Parameters index int Returns decimal? ToList(bool) public IList<decimal?> ToList(bool includeNulls = false) Parameters includeNulls bool Returns IList<decimal?>"
  },
  "api/Apache.Arrow.Decimal64Array.Builder.html": {
    "href": "api/Apache.Arrow.Decimal64Array.Builder.html",
    "title": "Class Decimal64Array.Builder | Apache Arrow .NET",
    "summary": "Class Decimal64Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Decimal64Array.Builder : FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>, IArrowArrayBuilder<byte[], Decimal64Array, Decimal64Array.Builder>, IArrowArrayBuilder<Decimal64Array, Decimal64Array.Builder>, IArrowArrayBuilder<Decimal64Array>, IArrowArrayBuilder Inheritance object FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder> Decimal64Array.Builder Implements IArrowArrayBuilder<byte[], Decimal64Array, Decimal64Array.Builder> IArrowArrayBuilder<Decimal64Array, Decimal64Array.Builder> IArrowArrayBuilder<Decimal64Array> IArrowArrayBuilder Inherited Members FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.DataType FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Instance FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.ByteWidth FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.ValueBuffer FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.ValidityBuffer FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Length FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.NullCount FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Build(ArrayData) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Build(MemoryAllocator) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Reserve(int) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Resize(int) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Clear() FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Append(byte[]) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Append(ReadOnlySpan<byte[]>) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.AppendRange(IEnumerable<byte[]>) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Append(ReadOnlySpan<byte>) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.AppendNull() FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Swap(int, int) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Set(int, byte[]) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.Set(int, ReadOnlySpan<byte>) FixedSizeBinaryArray.BuilderBase<Decimal64Array, Decimal64Array.Builder>.SetNull(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(Decimal64Type) public Builder(Decimal64Type type) Parameters type Decimal64Type Properties DataType protected Decimal64Type DataType { get; } Property Value Decimal64Type Methods Append(decimal) public Decimal64Array.Builder Append(decimal value) Parameters value decimal Returns Decimal64Array.Builder Append(string) public Decimal64Array.Builder Append(string value) Parameters value string Returns Decimal64Array.Builder AppendRange(IEnumerable<decimal>) public Decimal64Array.Builder AppendRange(IEnumerable<decimal> values) Parameters values IEnumerable<decimal> Returns Decimal64Array.Builder AppendRange(IEnumerable<string>) public Decimal64Array.Builder AppendRange(IEnumerable<string> values) Parameters values IEnumerable<string> Returns Decimal64Array.Builder Build(ArrayData) protected override Decimal64Array Build(ArrayData data) Parameters data ArrayData Returns Decimal64Array Set(int, decimal) public Decimal64Array.Builder Set(int index, decimal value) Parameters index int value decimal Returns Decimal64Array.Builder"
  },
  "api/Apache.Arrow.Decimal64Array.html": {
    "href": "api/Apache.Arrow.Decimal64Array.html",
    "title": "Class Decimal64Array | Apache Arrow .NET",
    "summary": "Class Decimal64Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Decimal64Array : FixedSizeBinaryArray, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, IEnumerable<byte[]>, IReadOnlyList<decimal?>, IReadOnlyCollection<decimal?>, IEnumerable<decimal?>, IEnumerable Inheritance object Array FixedSizeBinaryArray Decimal64Array Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> IEnumerable<byte[]> IReadOnlyList<decimal?> IReadOnlyCollection<decimal?> IEnumerable<decimal?> IEnumerable Inherited Members FixedSizeBinaryArray.ValueBuffer FixedSizeBinaryArray.GetBytes(int) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Decimal64Array(ArrayData) public Decimal64Array(ArrayData data) Parameters data ArrayData Properties ByteWidth public int ByteWidth { get; } Property Value int Precision public int Precision { get; } Property Value int Scale public int Scale { get; } Property Value int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetDecimal(int) public decimal? GetDecimal(int index) Parameters index int Returns decimal? GetString(int) public string GetString(int index) Parameters index int Returns string GetValue(int) public decimal? GetValue(int index) Parameters index int Returns decimal? ToList(bool) public IList<decimal?> ToList(bool includeNulls = false) Parameters includeNulls bool Returns IList<decimal?>"
  },
  "api/Apache.Arrow.DelegatingArrayBuilder-3.html": {
    "href": "api/Apache.Arrow.DelegatingArrayBuilder-3.html",
    "title": "Class DelegatingArrayBuilder<T, TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Class DelegatingArrayBuilder<T, TArray, TBuilder> Namespace Apache.Arrow Assembly Apache.Arrow.dll The DelegatingArrayBuilder<T, TArray, TBuilder> class can be used as the base for any array builder that needs to delegate most of its functionality to an inner array builder. public abstract class DelegatingArrayBuilder<T, TArray, TBuilder> : IArrowArrayBuilder<TArray, TBuilder>, IArrowArrayBuilder<TArray>, IArrowArrayBuilder where TArray : IArrowArray where TBuilder : class, IArrowArrayBuilder<TArray> Type Parameters T Type of item accepted by inner array builder. TArray Type of array produced by this (and the inner) builder. TBuilder Type of builder (see Curiously-Recurring Template Pattern). Inheritance object DelegatingArrayBuilder<T, TArray, TBuilder> Implements IArrowArrayBuilder<TArray, TBuilder> IArrowArrayBuilder<TArray> IArrowArrayBuilder Derived DateArrayBuilder<TUnderlying, TArray, TBuilder> TimeArrayBuilder<TUnderlying, TArray, TBuilder> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The typical use case is when an array builder may accept a number of different types as input, but which are all internally converted to a single type for assembly into an array. Constructors DelegatingArrayBuilder(IArrowArrayBuilder<T, TArray, IArrowArrayBuilder<TArray>>) Construct a new instance of the DelegatingArrayBuilder<T, TArray, TBuilder> class. protected DelegatingArrayBuilder(IArrowArrayBuilder<T, TArray, IArrowArrayBuilder<TArray>> innerBuilder) Parameters innerBuilder IArrowArrayBuilder<T, TArray, IArrowArrayBuilder<TArray>> Inner array builder. Properties InnerBuilder Gets the inner array builder. protected IArrowArrayBuilder<T, TArray, IArrowArrayBuilder<TArray>> InnerBuilder { get; } Property Value IArrowArrayBuilder<T, TArray, IArrowArrayBuilder<TArray>> Length Gets the number of items added to the array so far. public int Length { get; } Property Value int Methods AppendNull() Appends a null value public abstract TBuilder AppendNull() Returns TBuilder Returns the builder (for fluent-style composition). Build(MemoryAllocator) Build an Arrow Array from the appended contents so far. public TArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Optional memory allocator. Returns TArray Returns the built array. Clear() Clear all contents appended so far. public TBuilder Clear() Returns TBuilder Returns the builder (for fluent-style composition). Reserve(int) Reserve a given number of items' additional capacity. public TBuilder Reserve(int additionalCapacity) Parameters additionalCapacity int Number of items of required additional capacity. Returns TBuilder Returns the builder (for fluent-style composition). Resize(int) Resize the array to a given size. public TBuilder Resize(int capacity) Parameters capacity int Number of items of required capacity. Returns TBuilder Returns the builder (for fluent-style composition). Remarks Note that if the required capacity is larger than the current length of the populated array so far, the array's contents in the new, expanded region are undefined."
  },
  "api/Apache.Arrow.DenseUnionArray.html": {
    "href": "api/Apache.Arrow.DenseUnionArray.html",
    "title": "Class DenseUnionArray | Apache Arrow .NET",
    "summary": "Class DenseUnionArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class DenseUnionArray : UnionArray, IArrowArray, IDisposable Inheritance object UnionArray DenseUnionArray Implements IArrowArray IDisposable Inherited Members UnionArray._fields UnionArray.Fields UnionArray.Data UnionArray.Type UnionArray.Mode UnionArray.TypeBuffer UnionArray.TypeIds UnionArray.Length UnionArray.Offset UnionArray.NullCount UnionArray.IsValid(int) UnionArray.IsNull(int) UnionArray.Create(ArrayData) UnionArray.Accept(IArrowArrayVisitor) UnionArray.Dispose() UnionArray.Dispose(bool) UnionArray.ValidateMode(UnionMode, UnionMode) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DenseUnionArray(ArrayData) public DenseUnionArray(ArrayData data) Parameters data ArrayData DenseUnionArray(IArrowType, int, IEnumerable<IArrowArray>, ArrowBuffer, ArrowBuffer, int, int) public DenseUnionArray(IArrowType dataType, int length, IEnumerable<IArrowArray> children, ArrowBuffer typeIds, ArrowBuffer valuesOffsetBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int children IEnumerable<IArrowArray> typeIds ArrowBuffer valuesOffsetBuffer ArrowBuffer nullCount int offset int Properties ValueOffsetBuffer public ArrowBuffer ValueOffsetBuffer { get; } Property Value ArrowBuffer ValueOffsets public ReadOnlySpan<int> ValueOffsets { get; } Property Value ReadOnlySpan<int> Methods FieldIsValid(IArrowArray, int) protected override bool FieldIsValid(IArrowArray fieldArray, int index) Parameters fieldArray IArrowArray index int Returns bool"
  },
  "api/Apache.Arrow.DictionaryArray.html": {
    "href": "api/Apache.Arrow.DictionaryArray.html",
    "title": "Class DictionaryArray | Apache Arrow .NET",
    "summary": "Class DictionaryArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class DictionaryArray : Array, IArrowArray, IDisposable Inheritance object Array DictionaryArray Implements IArrowArray IDisposable Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DictionaryArray(ArrayData) public DictionaryArray(ArrayData data) Parameters data ArrayData DictionaryArray(DictionaryType, IArrowArray, IArrowArray) public DictionaryArray(DictionaryType dataType, IArrowArray indicesArray, IArrowArray dictionary) Parameters dataType DictionaryType indicesArray IArrowArray dictionary IArrowArray Properties Dictionary public IArrowArray Dictionary { get; } Property Value IArrowArray Indices public IArrowArray Indices { get; } Property Value IArrowArray IndicesBuffer public ArrowBuffer IndicesBuffer { get; } Property Value ArrowBuffer Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.DoubleArray.Builder.html": {
    "href": "api/Apache.Arrow.DoubleArray.Builder.html",
    "title": "Class DoubleArray.Builder | Apache Arrow .NET",
    "summary": "Class DoubleArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class DoubleArray.Builder : PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>, IArrowArrayBuilder<double, DoubleArray, DoubleArray.Builder>, IArrowArrayBuilder<DoubleArray, DoubleArray.Builder>, IArrowArrayBuilder<DoubleArray>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder> DoubleArray.Builder Implements IArrowArrayBuilder<double, DoubleArray, DoubleArray.Builder> IArrowArrayBuilder<DoubleArray, DoubleArray.Builder> IArrowArrayBuilder<DoubleArray> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Instance PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.ValueBuffer PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.ValidityBuffer PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Length PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.NullCount PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Resize(int) PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Reserve(int) PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Append(double) PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Append(double?) PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Append(ReadOnlySpan<double>) PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.AppendRange(IEnumerable<double>) PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.AppendNull() PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Clear() PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Set(int, double) PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Swap(int, int) PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<double, DoubleArray, DoubleArray.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override DoubleArray Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns DoubleArray"
  },
  "api/Apache.Arrow.DoubleArray.html": {
    "href": "api/Apache.Arrow.DoubleArray.html",
    "title": "Class DoubleArray | Apache Arrow .NET",
    "summary": "Class DoubleArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class DoubleArray : PrimitiveArray<double>, IArrowArray, IDisposable, IReadOnlyList<double?>, IReadOnlyCollection<double?>, ICollection<double?>, IEnumerable<double?>, IEnumerable Inheritance object Array PrimitiveArray<double> DoubleArray Implements IArrowArray IDisposable IReadOnlyList<double?> IReadOnlyCollection<double?> ICollection<double?> IEnumerable<double?> IEnumerable Inherited Members PrimitiveArray<double>.ValueBuffer PrimitiveArray<double>.Values PrimitiveArray<double>.GetValue(int) PrimitiveArray<double>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DoubleArray(ArrayData) public DoubleArray(ArrayData data) Parameters data ArrayData DoubleArray(ArrowBuffer, ArrowBuffer, int, int, int) public DoubleArray(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.DurationArray.Builder.html": {
    "href": "api/Apache.Arrow.DurationArray.Builder.html",
    "title": "Class DurationArray.Builder | Apache Arrow .NET",
    "summary": "Class DurationArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class DurationArray.Builder : PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>, IArrowArrayBuilder<long, DurationArray, DurationArray.Builder>, IArrowArrayBuilder<DurationArray, DurationArray.Builder>, IArrowArrayBuilder<DurationArray>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder> DurationArray.Builder Implements IArrowArrayBuilder<long, DurationArray, DurationArray.Builder> IArrowArrayBuilder<DurationArray, DurationArray.Builder> IArrowArrayBuilder<DurationArray> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Instance PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.ValueBuffer PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.ValidityBuffer PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Length PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.NullCount PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Resize(int) PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Reserve(int) PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Append(long) PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Append(long?) PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Append(ReadOnlySpan<long>) PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.AppendRange(IEnumerable<long>) PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.AppendNull() PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Clear() PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Set(int, long) PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Swap(int, int) PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<long, DurationArray, DurationArray.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(DurationType) public Builder(DurationType dataType) Parameters dataType DurationType Properties DataType public DurationType DataType { get; } Property Value DurationType Methods Append(TimeSpan?) Append a duration in the form of a TimeSpan object to the array. public DurationArray.Builder Append(TimeSpan? value) Parameters value TimeSpan? TimeSpan to add. Returns DurationArray.Builder Returns the builder (for fluent-style composition). Append(TimeSpan) Append a duration in the form of a TimeSpan object to the array. public DurationArray.Builder Append(TimeSpan value) Parameters value TimeSpan TimeSpan to add. Returns DurationArray.Builder Returns the builder (for fluent-style composition). Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override DurationArray Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns DurationArray"
  },
  "api/Apache.Arrow.DurationArray.html": {
    "href": "api/Apache.Arrow.DurationArray.html",
    "title": "Class DurationArray | Apache Arrow .NET",
    "summary": "Class DurationArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class DurationArray : PrimitiveArray<long>, IArrowArray, IDisposable, IReadOnlyList<long?>, IReadOnlyCollection<long?>, ICollection<long?>, IEnumerable<long?>, IReadOnlyList<TimeSpan?>, IReadOnlyCollection<TimeSpan?>, IEnumerable<TimeSpan?>, IEnumerable Inheritance object Array PrimitiveArray<long> DurationArray Implements IArrowArray IDisposable IReadOnlyList<long?> IReadOnlyCollection<long?> ICollection<long?> IEnumerable<long?> IReadOnlyList<TimeSpan?> IReadOnlyCollection<TimeSpan?> IEnumerable<TimeSpan?> IEnumerable Inherited Members PrimitiveArray<long>.ValueBuffer PrimitiveArray<long>.Values PrimitiveArray<long>.GetValue(int) PrimitiveArray<long>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DurationArray(ArrayData) public DurationArray(ArrayData data) Parameters data ArrayData DurationArray(DurationType, ArrowBuffer, ArrowBuffer, int, int, int) public DurationArray(DurationType type, ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters type DurationType valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Properties DataType public DurationType DataType { get; } Property Value DurationType Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetTimeSpan(int) public TimeSpan? GetTimeSpan(int index) Parameters index int Returns TimeSpan?"
  },
  "api/Apache.Arrow.Field.Builder.html": {
    "href": "api/Apache.Arrow.Field.Builder.html",
    "title": "Class Field.Builder | Apache Arrow .NET",
    "summary": "Class Field.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Field.Builder Inheritance object Field.Builder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Methods Build() public Field Build() Returns Field DataType(IArrowType) public Field.Builder DataType(IArrowType type) Parameters type IArrowType Returns Field.Builder Metadata(IEnumerable<KeyValuePair<string, string>>) public Field.Builder Metadata(IEnumerable<KeyValuePair<string, string>> dictionary) Parameters dictionary IEnumerable<KeyValuePair<string, string>> Returns Field.Builder Metadata(string, string) public Field.Builder Metadata(string key, string value) Parameters key string value string Returns Field.Builder Name(string) public Field.Builder Name(string value) Parameters value string Returns Field.Builder Nullable(bool) public Field.Builder Nullable(bool value) Parameters value bool Returns Field.Builder"
  },
  "api/Apache.Arrow.Field.html": {
    "href": "api/Apache.Arrow.Field.html",
    "title": "Class Field | Apache Arrow .NET",
    "summary": "Class Field Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Field Inheritance object Field Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Field(string, IArrowType, bool, IEnumerable<KeyValuePair<string, string>>) public Field(string name, IArrowType dataType, bool nullable, IEnumerable<KeyValuePair<string, string>> metadata = null) Parameters name string dataType IArrowType nullable bool metadata IEnumerable<KeyValuePair<string, string>> Properties DataType public IArrowType DataType { get; } Property Value IArrowType HasMetadata public bool HasMetadata { get; } Property Value bool IsNullable public bool IsNullable { get; } Property Value bool Metadata public IReadOnlyDictionary<string, string> Metadata { get; } Property Value IReadOnlyDictionary<string, string> Name public string Name { get; } Property Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/Apache.Arrow.FixedSizeListArray.Builder.html": {
    "href": "api/Apache.Arrow.FixedSizeListArray.Builder.html",
    "title": "Class FixedSizeListArray.Builder | Apache Arrow .NET",
    "summary": "Class FixedSizeListArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class FixedSizeListArray.Builder : IArrowArrayBuilder<FixedSizeListArray, FixedSizeListArray.Builder>, IArrowArrayBuilder<FixedSizeListArray>, IArrowArrayBuilder Inheritance object FixedSizeListArray.Builder Implements IArrowArrayBuilder<FixedSizeListArray, FixedSizeListArray.Builder> IArrowArrayBuilder<FixedSizeListArray> IArrowArrayBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(Field, int) public Builder(Field valueField, int listSize) Parameters valueField Field listSize int Builder(IArrowType, int) public Builder(IArrowType valueDataType, int listSize) Parameters valueDataType IArrowType listSize int Properties Length public int Length { get; protected set; } Property Value int NullCount public int NullCount { get; } Property Value int ValueBuilder public IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> ValueBuilder { get; } Property Value IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> Methods Append() Start a new fixed-length list slot This function should be called before beginning to append elements to the value builder public FixedSizeListArray.Builder Append() Returns FixedSizeListArray.Builder AppendNull() public FixedSizeListArray.Builder AppendNull() Returns FixedSizeListArray.Builder Build(MemoryAllocator) public FixedSizeListArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns FixedSizeListArray Clear() public FixedSizeListArray.Builder Clear() Returns FixedSizeListArray.Builder Reserve(int) public FixedSizeListArray.Builder Reserve(int capacity) Parameters capacity int Returns FixedSizeListArray.Builder Resize(int) public FixedSizeListArray.Builder Resize(int length) Parameters length int Returns FixedSizeListArray.Builder"
  },
  "api/Apache.Arrow.FixedSizeListArray.html": {
    "href": "api/Apache.Arrow.FixedSizeListArray.html",
    "title": "Class FixedSizeListArray | Apache Arrow .NET",
    "summary": "Class FixedSizeListArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class FixedSizeListArray : Array, IArrowArray, IDisposable Inheritance object Array FixedSizeListArray Implements IArrowArray IDisposable Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FixedSizeListArray(ArrayData) public FixedSizeListArray(ArrayData data) Parameters data ArrayData FixedSizeListArray(IArrowType, int, IArrowArray, ArrowBuffer, int, int) public FixedSizeListArray(IArrowType dataType, int length, IArrowArray values, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int values IArrowArray nullBitmapBuffer ArrowBuffer nullCount int offset int Properties Values public IArrowArray Values { get; } Property Value IArrowArray Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetSlicedValues(int) public IArrowArray GetSlicedValues(int index) Parameters index int Returns IArrowArray"
  },
  "api/Apache.Arrow.Flight.Client.FlightClient.html": {
    "href": "api/Apache.Arrow.Flight.Client.FlightClient.html",
    "title": "Class FlightClient | Apache Arrow .NET",
    "summary": "Class FlightClient Namespace Apache.Arrow.Flight.Client Assembly Apache.Arrow.Flight.dll public class FlightClient Inheritance object FlightClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightClient(CallInvoker) public FlightClient(CallInvoker callInvoker) Parameters callInvoker CallInvoker FlightClient(ChannelBase) public FlightClient(ChannelBase grpcChannel) Parameters grpcChannel ChannelBase Methods DoAction(FlightAction, Metadata) public AsyncServerStreamingCall<FlightResult> DoAction(FlightAction action, Metadata headers = null) Parameters action FlightAction headers Metadata Returns AsyncServerStreamingCall<FlightResult> DoAction(FlightAction, Metadata, DateTime?, CancellationToken) public AsyncServerStreamingCall<FlightResult> DoAction(FlightAction action, Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters action FlightAction headers Metadata deadline DateTime? cancellationToken CancellationToken Returns AsyncServerStreamingCall<FlightResult> DoExchange(FlightDescriptor, Metadata) public FlightRecordBatchExchangeCall DoExchange(FlightDescriptor flightDescriptor, Metadata headers = null) Parameters flightDescriptor FlightDescriptor headers Metadata Returns FlightRecordBatchExchangeCall DoExchange(FlightDescriptor, Metadata, DateTime?, CancellationToken) public FlightRecordBatchExchangeCall DoExchange(FlightDescriptor flightDescriptor, Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters flightDescriptor FlightDescriptor headers Metadata deadline DateTime? cancellationToken CancellationToken Returns FlightRecordBatchExchangeCall GetInfo(FlightDescriptor, Metadata) public AsyncUnaryCall<FlightInfo> GetInfo(FlightDescriptor flightDescriptor, Metadata headers = null) Parameters flightDescriptor FlightDescriptor headers Metadata Returns AsyncUnaryCall<FlightInfo> GetInfo(FlightDescriptor, Metadata, DateTime?, CancellationToken) public AsyncUnaryCall<FlightInfo> GetInfo(FlightDescriptor flightDescriptor, Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters flightDescriptor FlightDescriptor headers Metadata deadline DateTime? cancellationToken CancellationToken Returns AsyncUnaryCall<FlightInfo> GetSchema(FlightDescriptor, Metadata) public AsyncUnaryCall<Schema> GetSchema(FlightDescriptor flightDescriptor, Metadata headers = null) Parameters flightDescriptor FlightDescriptor headers Metadata Returns AsyncUnaryCall<Schema> GetSchema(FlightDescriptor, Metadata, DateTime?, CancellationToken) public AsyncUnaryCall<Schema> GetSchema(FlightDescriptor flightDescriptor, Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters flightDescriptor FlightDescriptor headers Metadata deadline DateTime? cancellationToken CancellationToken Returns AsyncUnaryCall<Schema> GetStream(FlightTicket, Metadata) public FlightRecordBatchStreamingCall GetStream(FlightTicket ticket, Metadata headers = null) Parameters ticket FlightTicket headers Metadata Returns FlightRecordBatchStreamingCall GetStream(FlightTicket, Metadata, DateTime?, CancellationToken) public FlightRecordBatchStreamingCall GetStream(FlightTicket ticket, Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters ticket FlightTicket headers Metadata deadline DateTime? cancellationToken CancellationToken Returns FlightRecordBatchStreamingCall Handshake(Metadata) public AsyncDuplexStreamingCall<FlightHandshakeRequest, FlightHandshakeResponse> Handshake(Metadata headers = null) Parameters headers Metadata Returns AsyncDuplexStreamingCall<FlightHandshakeRequest, FlightHandshakeResponse> Handshake(Metadata, DateTime?, CancellationToken) public AsyncDuplexStreamingCall<FlightHandshakeRequest, FlightHandshakeResponse> Handshake(Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters headers Metadata deadline DateTime? cancellationToken CancellationToken Returns AsyncDuplexStreamingCall<FlightHandshakeRequest, FlightHandshakeResponse> ListActions(Metadata) public AsyncServerStreamingCall<FlightActionType> ListActions(Metadata headers = null) Parameters headers Metadata Returns AsyncServerStreamingCall<FlightActionType> ListActions(Metadata, DateTime?, CancellationToken) public AsyncServerStreamingCall<FlightActionType> ListActions(Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters headers Metadata deadline DateTime? cancellationToken CancellationToken Returns AsyncServerStreamingCall<FlightActionType> ListFlights(FlightCriteria, Metadata) public AsyncServerStreamingCall<FlightInfo> ListFlights(FlightCriteria criteria = null, Metadata headers = null) Parameters criteria FlightCriteria headers Metadata Returns AsyncServerStreamingCall<FlightInfo> ListFlights(FlightCriteria, Metadata, DateTime?, CancellationToken) public AsyncServerStreamingCall<FlightInfo> ListFlights(FlightCriteria criteria, Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters criteria FlightCriteria headers Metadata deadline DateTime? cancellationToken CancellationToken Returns AsyncServerStreamingCall<FlightInfo> StartPut(FlightDescriptor, Schema, Metadata) Start a Flight Put request. public Task<FlightRecordBatchDuplexStreamingCall> StartPut(FlightDescriptor flightDescriptor, Schema schema, Metadata headers = null) Parameters flightDescriptor FlightDescriptor Descriptor for the data to be put schema Schema The schema of the data headers Metadata gRPC headers to send with the request Returns Task<FlightRecordBatchDuplexStreamingCall> A FlightRecordBatchDuplexStreamingCall object used to write data batches and receive responses Remarks Using this method rather than a StartPut overload that doesn't accept a schema means that the schema is sent even if no data batches are sent StartPut(FlightDescriptor, Schema, Metadata, DateTime?, CancellationToken) Start a Flight Put request. public Task<FlightRecordBatchDuplexStreamingCall> StartPut(FlightDescriptor flightDescriptor, Schema schema, Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters flightDescriptor FlightDescriptor Descriptor for the data to be put schema Schema The schema of the data headers Metadata gRPC headers to send with the request deadline DateTime? Optional deadline. The request will be cancelled if this deadline is reached. cancellationToken CancellationToken Optional token for cancelling the request Returns Task<FlightRecordBatchDuplexStreamingCall> A FlightRecordBatchDuplexStreamingCall object used to write data batches and receive responses Remarks Using this method rather than a StartPut overload that doesn't accept a schema means that the schema is sent even if no data batches are sent StartPut(FlightDescriptor, Metadata) Start a Flight Put request. public FlightRecordBatchDuplexStreamingCall StartPut(FlightDescriptor flightDescriptor, Metadata headers = null) Parameters flightDescriptor FlightDescriptor Descriptor for the data to be put headers Metadata gRPC headers to send with the request Returns FlightRecordBatchDuplexStreamingCall A FlightRecordBatchDuplexStreamingCall object used to write data batches and receive responses StartPut(FlightDescriptor, Metadata, DateTime?, CancellationToken) Start a Flight Put request. public FlightRecordBatchDuplexStreamingCall StartPut(FlightDescriptor flightDescriptor, Metadata headers, DateTime? deadline, CancellationToken cancellationToken = default) Parameters flightDescriptor FlightDescriptor Descriptor for the data to be put headers Metadata gRPC headers to send with the request deadline DateTime? Optional deadline. The request will be cancelled if this deadline is reached. cancellationToken CancellationToken Optional token for cancelling the request Returns FlightRecordBatchDuplexStreamingCall A FlightRecordBatchDuplexStreamingCall object used to write data batches and receive responses"
  },
  "api/Apache.Arrow.Flight.Client.FlightClientRecordBatchStreamReader.html": {
    "href": "api/Apache.Arrow.Flight.Client.FlightClientRecordBatchStreamReader.html",
    "title": "Class FlightClientRecordBatchStreamReader | Apache Arrow .NET",
    "summary": "Class FlightClientRecordBatchStreamReader Namespace Apache.Arrow.Flight.Client Assembly Apache.Arrow.Flight.dll public class FlightClientRecordBatchStreamReader : FlightRecordBatchStreamReader, IAsyncStreamReader<RecordBatch>, IAsyncEnumerable<RecordBatch>, IDisposable Inheritance object FlightRecordBatchStreamReader FlightClientRecordBatchStreamReader Implements IAsyncStreamReader<RecordBatch> IAsyncEnumerable<RecordBatch> IDisposable Inherited Members FlightRecordBatchStreamReader.Schema FlightRecordBatchStreamReader.ApplicationMetadata FlightRecordBatchStreamReader.Current FlightRecordBatchStreamReader.MoveNext(CancellationToken) FlightRecordBatchStreamReader.GetAsyncEnumerator(CancellationToken) FlightRecordBatchStreamReader.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Apache.Arrow.Flight.Client.FlightClientRecordBatchStreamWriter.html": {
    "href": "api/Apache.Arrow.Flight.Client.FlightClientRecordBatchStreamWriter.html",
    "title": "Class FlightClientRecordBatchStreamWriter | Apache Arrow .NET",
    "summary": "Class FlightClientRecordBatchStreamWriter Namespace Apache.Arrow.Flight.Client Assembly Apache.Arrow.Flight.dll public class FlightClientRecordBatchStreamWriter : FlightRecordBatchStreamWriter, IDisposable, IClientStreamWriter<RecordBatch>, IAsyncStreamWriter<RecordBatch> Inheritance object FlightRecordBatchStreamWriter FlightClientRecordBatchStreamWriter Implements IDisposable IClientStreamWriter<RecordBatch> IAsyncStreamWriter<RecordBatch> Inherited Members FlightRecordBatchStreamWriter.SetupStream(Schema) FlightRecordBatchStreamWriter.WriteOptions FlightRecordBatchStreamWriter.WriteAsync(RecordBatch) FlightRecordBatchStreamWriter.WriteAsync(RecordBatch, ByteString) FlightRecordBatchStreamWriter.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CompleteAsync() Completes/closes the stream. Can only be called once there is no pending write. No writes should follow calling this. public Task CompleteAsync() Returns Task Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/Apache.Arrow.Flight.Client.FlightRecordBatchDuplexStreamingCall.html": {
    "href": "api/Apache.Arrow.Flight.Client.FlightRecordBatchDuplexStreamingCall.html",
    "title": "Class FlightRecordBatchDuplexStreamingCall | Apache Arrow .NET",
    "summary": "Class FlightRecordBatchDuplexStreamingCall Namespace Apache.Arrow.Flight.Client Assembly Apache.Arrow.Flight.dll public class FlightRecordBatchDuplexStreamingCall : IDisposable Inheritance object FlightRecordBatchDuplexStreamingCall Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RequestStream Async stream to send streaming requests. public FlightClientRecordBatchStreamWriter RequestStream { get; } Property Value FlightClientRecordBatchStreamWriter ResponseHeadersAsync Asynchronous access to response headers. public Task<Metadata> ResponseHeadersAsync { get; } Property Value Task<Metadata> ResponseStream Async stream to read streaming responses. public IAsyncStreamReader<FlightPutResult> ResponseStream { get; } Property Value IAsyncStreamReader<FlightPutResult> Methods Dispose() Provides means to cleanup after the call. If the call has already finished normally (response stream has been fully read), doesn't do anything. Otherwise, requests cancellation of the call which should terminate all pending async operations associated with the call. As a result, all resources being used by the call should be released eventually. public void Dispose() Remarks Normally, there is no need for you to dispose the call unless you want to utilize the \"Cancel\" semantics of invoking Dispose. GetStatus() Gets the call status if the call has already finished. Throws InvalidOperationException otherwise. public Status GetStatus() Returns Status GetTrailers() Gets the call trailing metadata if the call has already finished. Throws InvalidOperationException otherwise. public Metadata GetTrailers() Returns Metadata"
  },
  "api/Apache.Arrow.Flight.Client.FlightRecordBatchExchangeCall.html": {
    "href": "api/Apache.Arrow.Flight.Client.FlightRecordBatchExchangeCall.html",
    "title": "Class FlightRecordBatchExchangeCall | Apache Arrow .NET",
    "summary": "Class FlightRecordBatchExchangeCall Namespace Apache.Arrow.Flight.Client Assembly Apache.Arrow.Flight.dll public class FlightRecordBatchExchangeCall : IDisposable Inheritance object FlightRecordBatchExchangeCall Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RequestStream Async stream to send streaming requests. public FlightClientRecordBatchStreamWriter RequestStream { get; } Property Value FlightClientRecordBatchStreamWriter ResponseHeadersAsync Asynchronous access to response headers. public Task<Metadata> ResponseHeadersAsync { get; } Property Value Task<Metadata> ResponseStream Async stream to read streaming responses. public FlightClientRecordBatchStreamReader ResponseStream { get; } Property Value FlightClientRecordBatchStreamReader Methods Dispose() Provides means to cleanup after the call. If the call has already finished normally (response stream has been fully read), doesn't do anything. Otherwise, requests cancellation of the call which should terminate all pending async operations associated with the call. As a result, all resources being used by the call should be released eventually. public void Dispose() Remarks Normally, there is no need for you to dispose the call unless you want to utilize the \"Cancel\" semantics of invoking Dispose. GetStatus() Gets the call status if the call has already finished. Throws InvalidOperationException otherwise. public Status GetStatus() Returns Status GetTrailers() Gets the call trailing metadata if the call has already finished. Throws InvalidOperationException otherwise. public Metadata GetTrailers() Returns Metadata"
  },
  "api/Apache.Arrow.Flight.Client.FlightRecordBatchStreamingCall.html": {
    "href": "api/Apache.Arrow.Flight.Client.FlightRecordBatchStreamingCall.html",
    "title": "Class FlightRecordBatchStreamingCall | Apache Arrow .NET",
    "summary": "Class FlightRecordBatchStreamingCall Namespace Apache.Arrow.Flight.Client Assembly Apache.Arrow.Flight.dll public class FlightRecordBatchStreamingCall : IDisposable Inheritance object FlightRecordBatchStreamingCall Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ResponseHeadersAsync Asynchronous access to response headers. public Task<Metadata> ResponseHeadersAsync { get; } Property Value Task<Metadata> ResponseStream public FlightClientRecordBatchStreamReader ResponseStream { get; } Property Value FlightClientRecordBatchStreamReader Methods Dispose() Provides means to cleanup after the call. If the call has already finished normally (response stream has been fully read), doesn't do anything. Otherwise, requests cancellation of the call which should terminate all pending async operations associated with the call. As a result, all resources being used by the call should be released eventually. public void Dispose() Remarks Normally, there is no need for you to dispose the call unless you want to utilize the \"Cancel\" semantics of invoking Dispose. GetStatus() Gets the call status if the call has already finished. Throws InvalidOperationException otherwise. public Status GetStatus() Returns Status GetTrailers() Gets the call trailing metadata if the call has already finished. Throws InvalidOperationException otherwise. public Metadata GetTrailers() Returns Metadata"
  },
  "api/Apache.Arrow.Flight.Client.html": {
    "href": "api/Apache.Arrow.Flight.Client.html",
    "title": "Namespace Apache.Arrow.Flight.Client | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Flight.Client Classes FlightClient FlightClientRecordBatchStreamReader FlightClientRecordBatchStreamWriter FlightRecordBatchDuplexStreamingCall FlightRecordBatchExchangeCall FlightRecordBatchStreamingCall"
  },
  "api/Apache.Arrow.Flight.Extensions.FlightInfoExtensions.html": {
    "href": "api/Apache.Arrow.Flight.Extensions.FlightInfoExtensions.html",
    "title": "Class FlightInfoExtensions | Apache Arrow .NET",
    "summary": "Class FlightInfoExtensions Namespace Apache.Arrow.Flight.Extensions Assembly Apache.Arrow.Flight.dll public static class FlightInfoExtensions Inheritance object FlightInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToByteString(FlightInfo) public static ByteString ToByteString(this FlightInfo flightInfo) Parameters flightInfo FlightInfo Returns ByteString"
  },
  "api/Apache.Arrow.Flight.Extensions.html": {
    "href": "api/Apache.Arrow.Flight.Extensions.html",
    "title": "Namespace Apache.Arrow.Flight.Extensions | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Flight.Extensions Classes FlightInfoExtensions"
  },
  "api/Apache.Arrow.Flight.FlightAction.html": {
    "href": "api/Apache.Arrow.Flight.FlightAction.html",
    "title": "Class FlightAction | Apache Arrow .NET",
    "summary": "Class FlightAction Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightAction Inheritance object FlightAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightAction(string) public FlightAction(string type) Parameters type string FlightAction(string, ByteString) public FlightAction(string type, ByteString body) Parameters type string body ByteString FlightAction(string, byte[]) public FlightAction(string type, byte[] body) Parameters type string body byte[] FlightAction(string, string) public FlightAction(string type, string body) Parameters type string body string Properties Body public ByteString Body { get; } Property Value ByteString Type public string Type { get; } Property Value string"
  },
  "api/Apache.Arrow.Flight.FlightActionType.html": {
    "href": "api/Apache.Arrow.Flight.FlightActionType.html",
    "title": "Class FlightActionType | Apache Arrow .NET",
    "summary": "Class FlightActionType Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightActionType Inheritance object FlightActionType Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightActionType(string, string) public FlightActionType(string type, string description) Parameters type string description string Properties Description public string Description { get; } Property Value string Type public string Type { get; } Property Value string Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Apache.Arrow.Flight.FlightCriteria.html": {
    "href": "api/Apache.Arrow.Flight.FlightCriteria.html",
    "title": "Class FlightCriteria | Apache Arrow .NET",
    "summary": "Class FlightCriteria Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightCriteria Inheritance object FlightCriteria Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightCriteria() public FlightCriteria() FlightCriteria(ByteString) public FlightCriteria(ByteString byteString) Parameters byteString ByteString FlightCriteria(byte[]) public FlightCriteria(byte[] bytes) Parameters bytes byte[] FlightCriteria(string) public FlightCriteria(string expression) Parameters expression string Properties Expression public ByteString Expression { get; } Property Value ByteString"
  },
  "api/Apache.Arrow.Flight.FlightData.html": {
    "href": "api/Apache.Arrow.Flight.FlightData.html",
    "title": "Class FlightData | Apache Arrow .NET",
    "summary": "Class FlightData Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightData Inheritance object FlightData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightData(FlightDescriptor, ByteString, ByteString, ByteString) public FlightData(FlightDescriptor descriptor, ByteString dataBody = null, ByteString dataHeader = null, ByteString appMetadata = null) Parameters descriptor FlightDescriptor dataBody ByteString dataHeader ByteString appMetadata ByteString Properties AppMetadata public ByteString AppMetadata { get; } Property Value ByteString DataBody public ByteString DataBody { get; } Property Value ByteString DataHeader public ByteString DataHeader { get; } Property Value ByteString Descriptor public FlightDescriptor Descriptor { get; } Property Value FlightDescriptor"
  },
  "api/Apache.Arrow.Flight.FlightDescriptor.html": {
    "href": "api/Apache.Arrow.Flight.FlightDescriptor.html",
    "title": "Class FlightDescriptor | Apache Arrow .NET",
    "summary": "Class FlightDescriptor Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightDescriptor Inheritance object FlightDescriptor Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Command public ByteString Command { get; } Property Value ByteString Paths public IEnumerable<string> Paths { get; } Property Value IEnumerable<string> Type public FlightDescriptorType Type { get; } Property Value FlightDescriptorType Methods CreateCommandDescriptor(byte[]) public static FlightDescriptor CreateCommandDescriptor(byte[] command) Parameters command byte[] Returns FlightDescriptor CreateCommandDescriptor(string) public static FlightDescriptor CreateCommandDescriptor(string command) Parameters command string Returns FlightDescriptor CreatePathDescriptor(params string[]) public static FlightDescriptor CreatePathDescriptor(params string[] paths) Parameters paths string[] Returns FlightDescriptor Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Apache.Arrow.Flight.FlightDescriptorType.html": {
    "href": "api/Apache.Arrow.Flight.FlightDescriptorType.html",
    "title": "Enum FlightDescriptorType | Apache Arrow .NET",
    "summary": "Enum FlightDescriptorType Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public enum FlightDescriptorType Fields Command = 2 Path = 1"
  },
  "api/Apache.Arrow.Flight.FlightEndpoint.html": {
    "href": "api/Apache.Arrow.Flight.FlightEndpoint.html",
    "title": "Class FlightEndpoint | Apache Arrow .NET",
    "summary": "Class FlightEndpoint Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightEndpoint Inheritance object FlightEndpoint Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightEndpoint(FlightTicket, IReadOnlyList<FlightLocation>) public FlightEndpoint(FlightTicket ticket, IReadOnlyList<FlightLocation> locations) Parameters ticket FlightTicket locations IReadOnlyList<FlightLocation> Properties Locations public IEnumerable<FlightLocation> Locations { get; } Property Value IEnumerable<FlightLocation> Ticket public FlightTicket Ticket { get; } Property Value FlightTicket Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Apache.Arrow.Flight.FlightHandshakeRequest.html": {
    "href": "api/Apache.Arrow.Flight.FlightHandshakeRequest.html",
    "title": "Class FlightHandshakeRequest | Apache Arrow .NET",
    "summary": "Class FlightHandshakeRequest Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightHandshakeRequest Inheritance object FlightHandshakeRequest Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightHandshakeRequest(ByteString, ulong) public FlightHandshakeRequest(ByteString payload, ulong protocolVersion = 1) Parameters payload ByteString protocolVersion ulong Properties Payload public ByteString Payload { get; } Property Value ByteString ProtocolVersion public ulong ProtocolVersion { get; } Property Value ulong Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Apache.Arrow.Flight.FlightHandshakeResponse.html": {
    "href": "api/Apache.Arrow.Flight.FlightHandshakeResponse.html",
    "title": "Class FlightHandshakeResponse | Apache Arrow .NET",
    "summary": "Class FlightHandshakeResponse Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightHandshakeResponse Inheritance object FlightHandshakeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightHandshakeResponse() public FlightHandshakeResponse() FlightHandshakeResponse(ByteString, ulong) public FlightHandshakeResponse(ByteString payload, ulong protocolVersion = 1) Parameters payload ByteString protocolVersion ulong Fields Empty public static readonly FlightHandshakeResponse Empty Field Value FlightHandshakeResponse Properties Payload public ByteString Payload { get; set; } Property Value ByteString ProtocolVersion public ulong ProtocolVersion { get; set; } Property Value ulong"
  },
  "api/Apache.Arrow.Flight.FlightInfo.html": {
    "href": "api/Apache.Arrow.Flight.FlightInfo.html",
    "title": "Class FlightInfo | Apache Arrow .NET",
    "summary": "Class FlightInfo Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightInfo Inheritance object FlightInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FlightInfoExtensions.ToByteString(FlightInfo) Constructors FlightInfo(Schema, FlightDescriptor, IReadOnlyList<FlightEndpoint>, long, long) public FlightInfo(Schema schema, FlightDescriptor descriptor, IReadOnlyList<FlightEndpoint> endpoints, long totalRecords = -1, long totalBytes = -1) Parameters schema Schema descriptor FlightDescriptor endpoints IReadOnlyList<FlightEndpoint> totalRecords long totalBytes long FlightInfo(Schema, FlightDescriptor, IReadOnlyList<FlightEndpoint>, long, long, bool, ByteString) public FlightInfo(Schema schema, FlightDescriptor descriptor, IReadOnlyList<FlightEndpoint> endpoints, long totalRecords, long totalBytes, bool ordered = false, ByteString appMetadata = null) Parameters schema Schema descriptor FlightDescriptor endpoints IReadOnlyList<FlightEndpoint> totalRecords long totalBytes long ordered bool appMetadata ByteString Properties AppMetadata public ByteString AppMetadata { get; } Property Value ByteString Descriptor public FlightDescriptor Descriptor { get; } Property Value FlightDescriptor Endpoints public IReadOnlyList<FlightEndpoint> Endpoints { get; } Property Value IReadOnlyList<FlightEndpoint> Ordered public bool Ordered { get; } Property Value bool Schema public Schema Schema { get; } Property Value Schema TotalBytes public long TotalBytes { get; } Property Value long TotalRecords public long TotalRecords { get; } Property Value long"
  },
  "api/Apache.Arrow.Flight.FlightInfoCancelRequest.html": {
    "href": "api/Apache.Arrow.Flight.FlightInfoCancelRequest.html",
    "title": "Class FlightInfoCancelRequest | Apache Arrow .NET",
    "summary": "Class FlightInfoCancelRequest Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightInfoCancelRequest : IMessage Inheritance object FlightInfoCancelRequest Implements IMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightInfoCancelRequest() public FlightInfoCancelRequest() FlightInfoCancelRequest(FlightInfo) public FlightInfoCancelRequest(FlightInfo flightInfo) Parameters flightInfo FlightInfo Properties Descriptor Descriptor for this message. All instances are expected to return the same descriptor, and for generated types this will be an explicitly-implemented member, returning the same value as the static property declared on the type. public MessageDescriptor Descriptor { get; } Property Value MessageDescriptor FlightInfo public FlightInfo FlightInfo { get; } Property Value FlightInfo Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Apache.Arrow.Flight.FlightInfoCancelResult.html": {
    "href": "api/Apache.Arrow.Flight.FlightInfoCancelResult.html",
    "title": "Class FlightInfoCancelResult | Apache Arrow .NET",
    "summary": "Class FlightInfoCancelResult Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightInfoCancelResult : IMessage Inheritance object FlightInfoCancelResult Implements IMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightInfoCancelResult() public FlightInfoCancelResult() Properties Descriptor Descriptor for this message. All instances are expected to return the same descriptor, and for generated types this will be an explicitly-implemented member, returning the same value as the static property declared on the type. public MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. GetCancelStatus() public int GetCancelStatus() Returns int MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. SetStatus(int) public void SetStatus(int status) Parameters status int WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Apache.Arrow.Flight.FlightLocation.html": {
    "href": "api/Apache.Arrow.Flight.FlightLocation.html",
    "title": "Class FlightLocation | Apache Arrow .NET",
    "summary": "Class FlightLocation Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightLocation Inheritance object FlightLocation Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightLocation(string) public FlightLocation(string uri) Parameters uri string Properties Uri public string Uri { get; } Property Value string Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Apache.Arrow.Flight.FlightPutResult.html": {
    "href": "api/Apache.Arrow.Flight.FlightPutResult.html",
    "title": "Class FlightPutResult | Apache Arrow .NET",
    "summary": "Class FlightPutResult Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightPutResult Inheritance object FlightPutResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightPutResult() public FlightPutResult() FlightPutResult(ByteString) public FlightPutResult(ByteString applicationMetadata) Parameters applicationMetadata ByteString FlightPutResult(byte[]) public FlightPutResult(byte[] applicationMetadata) Parameters applicationMetadata byte[] FlightPutResult(string) public FlightPutResult(string applicationMetadata) Parameters applicationMetadata string Fields Empty public static readonly FlightPutResult Empty Field Value FlightPutResult Properties ApplicationMetadata public ByteString ApplicationMetadata { get; } Property Value ByteString"
  },
  "api/Apache.Arrow.Flight.FlightRecordBatchStreamReader.html": {
    "href": "api/Apache.Arrow.Flight.FlightRecordBatchStreamReader.html",
    "title": "Class FlightRecordBatchStreamReader | Apache Arrow .NET",
    "summary": "Class FlightRecordBatchStreamReader Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll Stream of record batches Use MoveNext() and Current to iterate over the batches. There are also gRPC helper functions such as ToListAsync() etc. public abstract class FlightRecordBatchStreamReader : IAsyncStreamReader<RecordBatch>, IAsyncEnumerable<RecordBatch>, IDisposable Inheritance object FlightRecordBatchStreamReader Implements IAsyncStreamReader<RecordBatch> IAsyncEnumerable<RecordBatch> IDisposable Derived FlightClientRecordBatchStreamReader FlightServerRecordBatchStreamReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApplicationMetadata Get the application metadata from the latest received record batch public IReadOnlyList<ByteString> ApplicationMetadata { get; } Property Value IReadOnlyList<ByteString> Current Gets the current element in the iteration. public RecordBatch Current { get; } Property Value RecordBatch Schema public ValueTask<Schema> Schema { get; } Property Value ValueTask<Schema> Methods Dispose() public void Dispose() GetAsyncEnumerator(CancellationToken) Returns an enumerator that iterates asynchronously through the collection. public IAsyncEnumerator<RecordBatch> GetAsyncEnumerator(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken that may be used to cancel the asynchronous iteration. Returns IAsyncEnumerator<RecordBatch> An enumerator that can be used to iterate asynchronously through the collection. MoveNext(CancellationToken) Advances the reader to the next element in the sequence, returning the result asynchronously. public Task<bool> MoveNext(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Cancellation token that can be used to cancel the operation. Returns Task<bool> Task containing the result of the operation: true if the reader was successfully advanced to the next element; false if the reader has passed the end of the sequence."
  },
  "api/Apache.Arrow.Flight.FlightRecordBatchStreamWriter.html": {
    "href": "api/Apache.Arrow.Flight.FlightRecordBatchStreamWriter.html",
    "title": "Class FlightRecordBatchStreamWriter | Apache Arrow .NET",
    "summary": "Class FlightRecordBatchStreamWriter Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public abstract class FlightRecordBatchStreamWriter : IAsyncStreamWriter<RecordBatch>, IDisposable Inheritance object FlightRecordBatchStreamWriter Implements IAsyncStreamWriter<RecordBatch> IDisposable Derived FlightClientRecordBatchStreamWriter FlightServerRecordBatchStreamWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties WriteOptions Write options that will be used for the next write. If null, default options will be used. Once set, this property maintains its value across subsequent writes. public WriteOptions WriteOptions { get; set; } Property Value WriteOptions Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool SetupStream(Schema) Configure the data stream to write to. public Task SetupStream(Schema schema) Parameters schema Schema The schema of data to be written to this stream Returns Task Remarks The stream will be set up automatically when writing a RecordBatch if required, but calling this method before writing any data allows handling empty streams. WriteAsync(RecordBatch) Writes a message asynchronously. Only one write can be pending at a time. public Task WriteAsync(RecordBatch message) Parameters message RecordBatch The message to be written. Cannot be null. Returns Task WriteAsync(RecordBatch, ByteString) public Task WriteAsync(RecordBatch message, ByteString applicationMetadata) Parameters message RecordBatch applicationMetadata ByteString Returns Task"
  },
  "api/Apache.Arrow.Flight.FlightResult.html": {
    "href": "api/Apache.Arrow.Flight.FlightResult.html",
    "title": "Class FlightResult | Apache Arrow .NET",
    "summary": "Class FlightResult Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightResult Inheritance object FlightResult Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightResult(ByteString) public FlightResult(ByteString body) Parameters body ByteString FlightResult(byte[]) public FlightResult(byte[] body) Parameters body byte[] FlightResult(string) public FlightResult(string body) Parameters body string Properties Body public ByteString Body { get; } Property Value ByteString Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Apache.Arrow.Flight.FlightTicket.html": {
    "href": "api/Apache.Arrow.Flight.FlightTicket.html",
    "title": "Class FlightTicket | Apache Arrow .NET",
    "summary": "Class FlightTicket Namespace Apache.Arrow.Flight Assembly Apache.Arrow.Flight.dll public class FlightTicket Inheritance object FlightTicket Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightTicket(ByteString) public FlightTicket(ByteString ticket) Parameters ticket ByteString FlightTicket(byte[]) public FlightTicket(byte[] bytes) Parameters bytes byte[] FlightTicket(string) public FlightTicket(string ticket) Parameters ticket string Properties Ticket public ByteString Ticket { get; } Property Value ByteString Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Apache.Arrow.Flight.Server.FlightServer.html": {
    "href": "api/Apache.Arrow.Flight.Server.FlightServer.html",
    "title": "Class FlightServer | Apache Arrow .NET",
    "summary": "Class FlightServer Namespace Apache.Arrow.Flight.Server Assembly Apache.Arrow.Flight.dll public abstract class FlightServer Inheritance object FlightServer Derived FlightSqlServer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DoAction(FlightAction, IAsyncStreamWriter<FlightResult>, ServerCallContext) public virtual Task DoAction(FlightAction request, IAsyncStreamWriter<FlightResult> responseStream, ServerCallContext context) Parameters request FlightAction responseStream IAsyncStreamWriter<FlightResult> context ServerCallContext Returns Task DoExchange(FlightServerRecordBatchStreamReader, FlightServerRecordBatchStreamWriter, ServerCallContext) public virtual Task DoExchange(FlightServerRecordBatchStreamReader requestStream, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters requestStream FlightServerRecordBatchStreamReader responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGet(FlightTicket, FlightServerRecordBatchStreamWriter, ServerCallContext) public virtual Task DoGet(FlightTicket ticket, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters ticket FlightTicket responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoPut(FlightServerRecordBatchStreamReader, IAsyncStreamWriter<FlightPutResult>, ServerCallContext) public virtual Task DoPut(FlightServerRecordBatchStreamReader requestStream, IAsyncStreamWriter<FlightPutResult> responseStream, ServerCallContext context) Parameters requestStream FlightServerRecordBatchStreamReader responseStream IAsyncStreamWriter<FlightPutResult> context ServerCallContext Returns Task GetFlightInfo(FlightDescriptor, ServerCallContext) public virtual Task<FlightInfo> GetFlightInfo(FlightDescriptor request, ServerCallContext context) Parameters request FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetSchema(FlightDescriptor, ServerCallContext) public virtual Task<Schema> GetSchema(FlightDescriptor request, ServerCallContext context) Parameters request FlightDescriptor context ServerCallContext Returns Task<Schema> Handshake(IAsyncStreamReader<FlightHandshakeRequest>, IAsyncStreamWriter<FlightHandshakeResponse>, ServerCallContext) public virtual Task Handshake(IAsyncStreamReader<FlightHandshakeRequest> requestStream, IAsyncStreamWriter<FlightHandshakeResponse> responseStream, ServerCallContext context) Parameters requestStream IAsyncStreamReader<FlightHandshakeRequest> responseStream IAsyncStreamWriter<FlightHandshakeResponse> context ServerCallContext Returns Task ListActions(IAsyncStreamWriter<FlightActionType>, ServerCallContext) public virtual Task ListActions(IAsyncStreamWriter<FlightActionType> responseStream, ServerCallContext context) Parameters responseStream IAsyncStreamWriter<FlightActionType> context ServerCallContext Returns Task ListFlights(FlightCriteria, IAsyncStreamWriter<FlightInfo>, ServerCallContext) public virtual Task ListFlights(FlightCriteria request, IAsyncStreamWriter<FlightInfo> responseStream, ServerCallContext context) Parameters request FlightCriteria responseStream IAsyncStreamWriter<FlightInfo> context ServerCallContext Returns Task"
  },
  "api/Apache.Arrow.Flight.Server.FlightServerRecordBatchStreamReader.html": {
    "href": "api/Apache.Arrow.Flight.Server.FlightServerRecordBatchStreamReader.html",
    "title": "Class FlightServerRecordBatchStreamReader | Apache Arrow .NET",
    "summary": "Class FlightServerRecordBatchStreamReader Namespace Apache.Arrow.Flight.Server Assembly Apache.Arrow.Flight.dll public class FlightServerRecordBatchStreamReader : FlightRecordBatchStreamReader, IAsyncStreamReader<RecordBatch>, IAsyncEnumerable<RecordBatch>, IDisposable Inheritance object FlightRecordBatchStreamReader FlightServerRecordBatchStreamReader Implements IAsyncStreamReader<RecordBatch> IAsyncEnumerable<RecordBatch> IDisposable Inherited Members FlightRecordBatchStreamReader.Schema FlightRecordBatchStreamReader.ApplicationMetadata FlightRecordBatchStreamReader.Current FlightRecordBatchStreamReader.MoveNext(CancellationToken) FlightRecordBatchStreamReader.GetAsyncEnumerator(CancellationToken) FlightRecordBatchStreamReader.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightServerRecordBatchStreamReader(IAsyncStreamReader<FlightData>) public FlightServerRecordBatchStreamReader(IAsyncStreamReader<FlightData> flightDataStream) Parameters flightDataStream IAsyncStreamReader<FlightData> Properties FlightDescriptor public ValueTask<FlightDescriptor> FlightDescriptor { get; } Property Value ValueTask<FlightDescriptor>"
  },
  "api/Apache.Arrow.Flight.Server.FlightServerRecordBatchStreamWriter.html": {
    "href": "api/Apache.Arrow.Flight.Server.FlightServerRecordBatchStreamWriter.html",
    "title": "Class FlightServerRecordBatchStreamWriter | Apache Arrow .NET",
    "summary": "Class FlightServerRecordBatchStreamWriter Namespace Apache.Arrow.Flight.Server Assembly Apache.Arrow.Flight.dll public class FlightServerRecordBatchStreamWriter : FlightRecordBatchStreamWriter, IDisposable, IServerStreamWriter<RecordBatch>, IAsyncStreamWriter<RecordBatch> Inheritance object FlightRecordBatchStreamWriter FlightServerRecordBatchStreamWriter Implements IDisposable IServerStreamWriter<RecordBatch> IAsyncStreamWriter<RecordBatch> Inherited Members FlightRecordBatchStreamWriter.SetupStream(Schema) FlightRecordBatchStreamWriter.WriteOptions FlightRecordBatchStreamWriter.WriteAsync(RecordBatch) FlightRecordBatchStreamWriter.WriteAsync(RecordBatch, ByteString) FlightRecordBatchStreamWriter.Dispose(bool) FlightRecordBatchStreamWriter.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightServerRecordBatchStreamWriter(IServerStreamWriter<FlightData>) public FlightServerRecordBatchStreamWriter(IServerStreamWriter<FlightData> clientStreamWriter) Parameters clientStreamWriter IServerStreamWriter<FlightData>"
  },
  "api/Apache.Arrow.Flight.Server.html": {
    "href": "api/Apache.Arrow.Flight.Server.html",
    "title": "Namespace Apache.Arrow.Flight.Server | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Flight.Server Classes FlightServer FlightServerRecordBatchStreamReader FlightServerRecordBatchStreamWriter"
  },
  "api/Apache.Arrow.Flight.Sql.Client.FlightSqlClient.html": {
    "href": "api/Apache.Arrow.Flight.Sql.Client.FlightSqlClient.html",
    "title": "Class FlightSqlClient | Apache Arrow .NET",
    "summary": "Class FlightSqlClient Namespace Apache.Arrow.Flight.Sql.Client Assembly Apache.Arrow.Flight.Sql.dll public class FlightSqlClient Inheritance object FlightSqlClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightSqlClient(FlightClient) public FlightSqlClient(FlightClient client) Parameters client FlightClient Methods BeginTransactionAsync(FlightCallOptions?, CancellationToken) Begin a new transaction. public Task<Transaction> BeginTransactionAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<Transaction> A Task representing the asynchronous operation. The task result contains the Transaction object representing the new transaction. CancelFlightInfoAsync(FlightInfoCancelRequest, FlightCallOptions?, CancellationToken) Explicitly cancel a FlightInfo. public Task<FlightInfoCancelResult> CancelFlightInfoAsync(FlightInfoCancelRequest request, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters request FlightInfoCancelRequest The CancelFlightInfoRequest. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfoCancelResult> A Task representing the asynchronous operation. The task result contains the CancelFlightInfoResult describing the canceled result. CancelQueryAsync(FlightInfo, FlightCallOptions?, CancellationToken) Explicitly cancel a query. public Task<FlightInfoCancelResult> CancelQueryAsync(FlightInfo info, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters info FlightInfo The FlightInfo of the query to cancel. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfoCancelResult> A Task representing the asynchronous operation. CommitAsync(Transaction, FlightCallOptions?, CancellationToken) Commit a transaction. After this, the transaction and all associated savepoints will be invalidated. public AsyncServerStreamingCall<FlightResult> CommitAsync(Transaction transaction, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters transaction Transaction The transaction. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns AsyncServerStreamingCall<FlightResult> A Task representing the asynchronous operation. DoActionAsync(FlightAction, FlightCallOptions?, CancellationToken) Perform the indicated action, returning an iterator to the stream of results, if any. public IAsyncEnumerable<FlightResult> DoActionAsync(FlightAction action, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters action FlightAction The action to be performed options FlightCallOptions Per-RPC options cancellationToken CancellationToken Cancellation token Returns IAsyncEnumerable<FlightResult> An async enumerable of results DoGetAsync(FlightTicket, FlightCallOptions?, CancellationToken) Given a flight ticket and schema, request to be sent the stream. Returns record batch stream reader. public IAsyncEnumerable<RecordBatch> DoGetAsync(FlightTicket ticket, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters ticket FlightTicket The flight ticket to use options FlightCallOptions Per-RPC options cancellationToken CancellationToken Returns IAsyncEnumerable<RecordBatch> The returned RecordBatchReader DoPutAsync(FlightDescriptor, RecordBatch, FlightCallOptions?, CancellationToken) Upload data to a Flight described by the given descriptor. The caller must call Close() on the returned stream once they are done writing. public Task<FlightPutResult> DoPutAsync(FlightDescriptor descriptor, RecordBatch recordBatch, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters descriptor FlightDescriptor The descriptor of the stream. recordBatch RecordBatch The record for the data to upload. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightPutResult> A Task representing the asynchronous operation. The task result contains a DoPutResult struct holding a reader and a writer. ExecuteAsync(string, Transaction, FlightCallOptions?, CancellationToken) Execute a SQL query on the server. public Task<FlightInfo> ExecuteAsync(string query, Transaction transaction = default, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters query string The UTF8-encoded SQL query to be executed. transaction Transaction A transaction to associate this query with. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Cancellation token Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. ExecuteUpdateAsync(string, Transaction, FlightCallOptions?, CancellationToken) Executes an update SQL command and returns the number of affected rows. public Task<long> ExecuteUpdateAsync(string query, Transaction transaction = default, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters query string The UTF8-encoded SQL query to be executed. transaction Transaction A transaction to associate this query with. Defaults to no transaction if not provided. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Cancellation token Returns Task<long> The number of rows affected by the operation. GetCatalogsAsync(FlightCallOptions?, CancellationToken) Request a list of catalogs. public Task<FlightInfo> GetCatalogsAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Cancellation token Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetCatalogsSchemaAsync(FlightCallOptions?, CancellationToken) Get the catalogs schema from the server. public Task<Schema> GetCatalogsSchemaAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Cancellation token Returns Task<Schema> The SchemaResult describing the schema of the catalogs. GetCrossReferenceAsync(TableRef, TableRef, FlightCallOptions?, CancellationToken) Retrieves a description of the foreign key columns in the given foreign key table that reference the primary key or the columns representing a unique constraint of the parent table. public Task<FlightInfo> GetCrossReferenceAsync(TableRef pkTableRef, TableRef fkTableRef, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters pkTableRef TableRef The table reference that exports the key. fkTableRef TableRef The table reference that imports the key. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetCrossReferenceSchemaAsync(FlightCallOptions?, CancellationToken) Get the cross-reference schema from the server. public Task<Schema> GetCrossReferenceSchemaAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<Schema> The SchemaResult describing the schema of the cross-reference. GetDbSchemasAsync(string?, string?, FlightCallOptions?, CancellationToken) Request a list of database schemas. public Task<FlightInfo> GetDbSchemasAsync(string? catalog = null, string? dbSchemaFilterPattern = null, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters catalog string The catalog. dbSchemaFilterPattern string The schema filter pattern. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Cancellation token Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetDbSchemasSchemaAsync(FlightCallOptions?, CancellationToken) Get the database schemas schema from the server. public Task<Schema> GetDbSchemasSchemaAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Cancellation token Returns Task<Schema> The SchemaResult describing the schema of the database schemas. GetExecuteSchemaAsync(string, Transaction, FlightCallOptions?, CancellationToken) Get the result set schema from the server for the given query. public Task<Schema> GetExecuteSchemaAsync(string query, Transaction transaction = default, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters query string The UTF8-encoded SQL query transaction Transaction A transaction to associate this query with options FlightCallOptions Per-RPC options cancellationToken CancellationToken Cancellation token Returns Task<Schema> The SchemaResult describing the schema of the result set GetExportedKeysAsync(TableRef, FlightCallOptions?, CancellationToken) Retrieves a description about the foreign key columns that reference the primary key columns of the given table. public Task<FlightInfo> GetExportedKeysAsync(TableRef tableRef, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters tableRef TableRef The table reference. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetExportedKeysSchemaAsync(TableRef, FlightCallOptions?, CancellationToken) Get the exported keys schema from the server. public Task<Schema> GetExportedKeysSchemaAsync(TableRef tableRef, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters tableRef TableRef The table reference. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<Schema> The SchemaResult describing the schema of the exported keys. GetFlightInfoAsync(FlightDescriptor, FlightCallOptions?, CancellationToken) Asynchronously retrieves flight information for a given flight descriptor. public Task<FlightInfo> GetFlightInfoAsync(FlightDescriptor descriptor, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters descriptor FlightDescriptor The descriptor of the dataset request, whether a named dataset or a command. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Cancellation token Returns Task<FlightInfo> A task that represents the asynchronous operation. The task result contains the FlightInfo describing where to access the dataset. GetImportedKeysAsync(TableRef, FlightCallOptions?, CancellationToken) Retrieves the foreign key columns for the given table. public Task<FlightInfo> GetImportedKeysAsync(TableRef tableRef, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters tableRef TableRef The table reference. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetImportedKeysSchemaAsync(FlightCallOptions?, CancellationToken) Get the imported keys schema from the server. public Task<Schema> GetImportedKeysSchemaAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<Schema> The SchemaResult describing the schema of the imported keys. GetPrimaryKeysAsync(TableRef, FlightCallOptions?, CancellationToken) Request the primary keys for a table. public Task<FlightInfo> GetPrimaryKeysAsync(TableRef tableRef, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters tableRef TableRef The table reference. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetSchemaAsync(FlightDescriptor, FlightCallOptions?, CancellationToken) Asynchronously retrieves schema information for a given flight descriptor. public virtual Task<Schema> GetSchemaAsync(FlightDescriptor descriptor, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters descriptor FlightDescriptor The descriptor of the dataset request, whether a named dataset or a command. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Cancellation token Returns Task<Schema> A task that represents the asynchronous operation. The task result contains the SchemaResult describing the dataset schema. GetSqlInfoAsync(List<int>?, FlightCallOptions?, CancellationToken) Request a list of SQL information. public Task<FlightInfo> GetSqlInfoAsync(List<int>? sqlInfo = null, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters sqlInfo List<int> The SQL info required. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetSqlInfoSchemaAsync(FlightCallOptions?, CancellationToken) Get the SQL information schema from the server. public Task<Schema> GetSqlInfoSchemaAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<Schema> The SchemaResult describing the schema of the SQL information. GetTableTypesAsync(FlightCallOptions?, CancellationToken) Request a list of table types. public Task<FlightInfo> GetTableTypesAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetTableTypesSchemaAsync(FlightCallOptions?, CancellationToken) Get the table types schema from the server. public Task<Schema> GetTableTypesSchemaAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<Schema> The SchemaResult describing the schema of the table types. GetTablesAsync(string?, string?, string?, bool, IEnumerable<string>?, FlightCallOptions?, CancellationToken) Request a list of tables. public Task<IEnumerable<FlightInfo>> GetTablesAsync(string? catalog = null, string? dbSchemaFilterPattern = null, string? tableFilterPattern = null, bool includeSchema = false, IEnumerable<string>? tableTypes = null, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters catalog string The catalog. dbSchemaFilterPattern string The schema filter pattern. tableFilterPattern string The table filter pattern. includeSchema bool True to include the schema upon return, false to not include the schema. tableTypes IEnumerable<string> The table types to include. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<IEnumerable<FlightInfo>> The FlightInfo describing where to access the dataset. GetXdbcTypeInfoAsync(FlightCallOptions?, CancellationToken) Request the information about all the data types supported. public Task<FlightInfo> GetXdbcTypeInfoAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetXdbcTypeInfoAsync(int, FlightCallOptions?, CancellationToken) Request the information about all the data types supported with filtering by data type. public Task<FlightInfo> GetXdbcTypeInfoAsync(int dataType, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters dataType int The data type to search for as filtering. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<FlightInfo> The FlightInfo describing where to access the dataset. GetXdbcTypeInfoSchemaAsync(FlightCallOptions?, CancellationToken) Get the type info schema from the server. public Task<Schema> GetXdbcTypeInfoSchemaAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<Schema> The SchemaResult describing the schema of the type info. PrepareAsync(string, Transaction, FlightCallOptions?, CancellationToken) Create a prepared statement object. public Task<PreparedStatement> PrepareAsync(string query, Transaction transaction = default, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters query string The query that will be executed. transaction Transaction A transaction to associate this query with. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns Task<PreparedStatement> The created prepared statement. RollbackAsync(Transaction, FlightCallOptions?, CancellationToken) Rollback a transaction. After this, the transaction and all associated savepoints will be invalidated. public AsyncServerStreamingCall<FlightResult> RollbackAsync(Transaction transaction, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters transaction Transaction The transaction to rollback. options FlightCallOptions RPC-layer hints for this call. cancellationToken CancellationToken Returns AsyncServerStreamingCall<FlightResult> A Task representing the asynchronous operation."
  },
  "api/Apache.Arrow.Flight.Sql.Client.html": {
    "href": "api/Apache.Arrow.Flight.Sql.Client.html",
    "title": "Namespace Apache.Arrow.Flight.Sql.Client | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Flight.Sql.Client Classes FlightSqlClient"
  },
  "api/Apache.Arrow.Flight.Sql.DoPutResult.html": {
    "href": "api/Apache.Arrow.Flight.Sql.DoPutResult.html",
    "title": "Class DoPutResult | Apache Arrow .NET",
    "summary": "Class DoPutResult Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll public class DoPutResult Inheritance object DoPutResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DoPutResult(FlightClientRecordBatchStreamWriter, IAsyncStreamReader<FlightPutResult>) public DoPutResult(FlightClientRecordBatchStreamWriter writer, IAsyncStreamReader<FlightPutResult> reader) Parameters writer FlightClientRecordBatchStreamWriter reader IAsyncStreamReader<FlightPutResult> Properties Reader public IAsyncStreamReader<FlightPutResult> Reader { get; } Property Value IAsyncStreamReader<FlightPutResult> Writer public FlightClientRecordBatchStreamWriter Writer { get; } Property Value FlightClientRecordBatchStreamWriter Methods CompleteAsync() Completes the writer by signaling the end of the writing process. public Task CompleteAsync() Returns Task A Task representing the completion of the writer. ReadMetadataAsync(CancellationToken) Reads the metadata asynchronously from the reader. public Task<ByteString> ReadMetadataAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<ByteString> A ByteString containing the metadata read from the reader."
  },
  "api/Apache.Arrow.Flight.Sql.FlightCallOptions.html": {
    "href": "api/Apache.Arrow.Flight.Sql.FlightCallOptions.html",
    "title": "Class FlightCallOptions | Apache Arrow .NET",
    "summary": "Class FlightCallOptions Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll public class FlightCallOptions Inheritance object FlightCallOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightCallOptions() public FlightCallOptions() Properties Headers public Metadata Headers { get; set; } Property Value Metadata Timeout Gets or sets the optional timeout for this call. Negative durations mean an implementation-defined default behavior will be used instead. public TimeSpan Timeout { get; set; } Property Value TimeSpan"
  },
  "api/Apache.Arrow.Flight.Sql.FlightSqlExtensions.html": {
    "href": "api/Apache.Arrow.Flight.Sql.FlightSqlExtensions.html",
    "title": "Class FlightSqlExtensions | Apache Arrow .NET",
    "summary": "Class FlightSqlExtensions Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll A set of helper functions for converting encoded commands to IMessage types public static class FlightSqlExtensions Inheritance object FlightSqlExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParsedAndUnpackedMessage(FlightDescriptor) Extracts a command from a FlightDescriptor public static IMessage? ParsedAndUnpackedMessage(this FlightDescriptor descriptor) Parameters descriptor FlightDescriptor Returns IMessage An IMessage that has been parsed and unpacked Serialize(IBufferMessage) public static ByteString Serialize(this IBufferMessage message) Parameters message IBufferMessage Returns ByteString"
  },
  "api/Apache.Arrow.Flight.Sql.FlightSqlServer.html": {
    "href": "api/Apache.Arrow.Flight.Sql.FlightSqlServer.html",
    "title": "Class FlightSqlServer | Apache Arrow .NET",
    "summary": "Class FlightSqlServer Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll public abstract class FlightSqlServer : FlightServer Inheritance object FlightServer FlightSqlServer Inherited Members FlightServer.ListFlights(FlightCriteria, IAsyncStreamWriter<FlightInfo>, ServerCallContext) FlightServer.GetSchema(FlightDescriptor, ServerCallContext) FlightServer.Handshake(IAsyncStreamReader<FlightHandshakeRequest>, IAsyncStreamWriter<FlightHandshakeResponse>, ServerCallContext) FlightServer.DoExchange(FlightServerRecordBatchStreamReader, FlightServerRecordBatchStreamWriter, ServerCallContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FlightSqlServer(ILoggerFactory?) protected FlightSqlServer(ILoggerFactory? factory = null) Parameters factory ILoggerFactory Fields CatalogSchema public static readonly Schema CatalogSchema Field Value Schema DbSchemaFlightSchema public static readonly Schema DbSchemaFlightSchema Field Value Schema KeyImportExportSchema public static readonly Schema KeyImportExportSchema Field Value Schema PrimaryKeysSchema public static readonly Schema PrimaryKeysSchema Field Value Schema SqlInfoSchema public static readonly Schema SqlInfoSchema Field Value Schema TableTypesSchema public static readonly Schema TableTypesSchema Field Value Schema TypeInfoSchema public static readonly Schema TypeInfoSchema Field Value Schema Methods ClosePreparedStatement(ActionClosePreparedStatementRequest, FlightAction, IAsyncStreamWriter<FlightResult>, ServerCallContext) protected abstract Task ClosePreparedStatement(ActionClosePreparedStatementRequest request, FlightAction action, IAsyncStreamWriter<FlightResult> streamWriter, ServerCallContext context) Parameters request ActionClosePreparedStatementRequest action FlightAction streamWriter IAsyncStreamWriter<FlightResult> context ServerCallContext Returns Task CreatePreparedStatement(ActionCreatePreparedStatementRequest, FlightAction, IAsyncStreamWriter<FlightResult>, ServerCallContext) protected abstract Task CreatePreparedStatement(ActionCreatePreparedStatementRequest request, FlightAction action, IAsyncStreamWriter<FlightResult> streamWriter, ServerCallContext context) Parameters request ActionCreatePreparedStatementRequest action FlightAction streamWriter IAsyncStreamWriter<FlightResult> context ServerCallContext Returns Task DoAction(FlightAction, IAsyncStreamWriter<FlightResult>, ServerCallContext) Attempts to execute a valid Flight SQL command. For Flight RPC calls implementers should extend this method in order to handle RPC messages. public override Task DoAction(FlightAction action, IAsyncStreamWriter<FlightResult> responseStream, ServerCallContext context) Parameters action FlightAction responseStream IAsyncStreamWriter<FlightResult> context ServerCallContext Returns Task DoGet(FlightTicket, FlightServerRecordBatchStreamWriter, ServerCallContext) Attempts to execute a valid Flight SQL command. For Flight RPC calls implementers should extend this method in order to handle RPC messages. public override Task DoGet(FlightTicket ticket, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters ticket FlightTicket responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetCatalog(CommandGetCatalogs, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetCatalog(CommandGetCatalogs command, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters command CommandGetCatalogs responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetCrossReference(CommandGetCrossReference, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetCrossReference(CommandGetCrossReference command, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters command CommandGetCrossReference responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetDbSchema(CommandGetDbSchemas, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetDbSchema(CommandGetDbSchemas command, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters command CommandGetDbSchemas responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetExportedKeys(CommandGetExportedKeys, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetExportedKeys(CommandGetExportedKeys command, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters command CommandGetExportedKeys responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetImportedKeys(CommandGetImportedKeys, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetImportedKeys(CommandGetImportedKeys command, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters command CommandGetImportedKeys responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetPreparedStatementQuery(CommandPreparedStatementQuery, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetPreparedStatementQuery(CommandPreparedStatementQuery preparedStatementQuery, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters preparedStatementQuery CommandPreparedStatementQuery responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetPrimaryKeys(CommandGetPrimaryKeys, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetPrimaryKeys(CommandGetPrimaryKeys command, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters command CommandGetPrimaryKeys responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetSqlInfo(CommandGetSqlInfo, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetSqlInfo(CommandGetSqlInfo getSqlInfo, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters getSqlInfo CommandGetSqlInfo responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetTableType(CommandGetTableTypes, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetTableType(CommandGetTableTypes command, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters command CommandGetTableTypes responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetTables(CommandGetTables, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetTables(CommandGetTables command, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters command CommandGetTables responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoGetXbdcTypeInfo(CommandGetXdbcTypeInfo, FlightServerRecordBatchStreamWriter, ServerCallContext) protected abstract Task DoGetXbdcTypeInfo(CommandGetXdbcTypeInfo command, FlightServerRecordBatchStreamWriter responseStream, ServerCallContext context) Parameters command CommandGetXdbcTypeInfo responseStream FlightServerRecordBatchStreamWriter context ServerCallContext Returns Task DoPut(FlightServerRecordBatchStreamReader, IAsyncStreamWriter<FlightPutResult>, ServerCallContext) Attempts to execute a valid Flight SQL command. For Flight RPC calls implementers should extend this method in order to handle RPC messages. public override Task DoPut(FlightServerRecordBatchStreamReader requestStream, IAsyncStreamWriter<FlightPutResult> responseStream, ServerCallContext context) Parameters requestStream FlightServerRecordBatchStreamReader responseStream IAsyncStreamWriter<FlightPutResult> context ServerCallContext Returns Task GetCatalogFlightInfo(CommandGetCatalogs, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetCatalogFlightInfo(CommandGetCatalogs command, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters command CommandGetCatalogs flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetCommand(FlightDescriptor?) public static IMessage? GetCommand(FlightDescriptor? request) Parameters request FlightDescriptor Returns IMessage GetCommand(FlightTicket) public static IMessage? GetCommand(FlightTicket ticket) Parameters ticket FlightTicket Returns IMessage GetCommand(FlightServerRecordBatchStreamReader) public static Task<IMessage?> GetCommand(FlightServerRecordBatchStreamReader requestStream) Parameters requestStream FlightServerRecordBatchStreamReader Returns Task<IMessage> GetCrossReferenceFlightInfo(CommandGetCrossReference, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetCrossReferenceFlightInfo(CommandGetCrossReference command, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters command CommandGetCrossReference flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetDbSchemaFlightInfo(CommandGetDbSchemas, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetDbSchemaFlightInfo(CommandGetDbSchemas command, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters command CommandGetDbSchemas flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetExportedKeysFlightInfo(CommandGetExportedKeys, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetExportedKeysFlightInfo(CommandGetExportedKeys command, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters command CommandGetExportedKeys flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetFlightInfo(FlightDescriptor, ServerCallContext) Attempts to execute a valid Flight SQL command. For Flight RPC calls implementers should extend this method in order to handle RPC messages. public override Task<FlightInfo> GetFlightInfo(FlightDescriptor flightDescriptor, ServerCallContext context) Parameters flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetImportedKeysFlightInfo(CommandGetImportedKeys, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetImportedKeysFlightInfo(CommandGetImportedKeys command, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters command CommandGetImportedKeys flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetPreparedStatementQueryFlightInfo(CommandPreparedStatementQuery, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetPreparedStatementQueryFlightInfo(CommandPreparedStatementQuery preparedStatementQuery, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters preparedStatementQuery CommandPreparedStatementQuery flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetPrimaryKeysFlightInfo(CommandGetPrimaryKeys, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetPrimaryKeysFlightInfo(CommandGetPrimaryKeys command, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters command CommandGetPrimaryKeys flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetSqlFlightInfo(CommandGetSqlInfo, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetSqlFlightInfo(CommandGetSqlInfo commandGetSqlInfo, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters commandGetSqlInfo CommandGetSqlInfo flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetStatementQueryFlightInfo(CommandStatementQuery, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetStatementQueryFlightInfo(CommandStatementQuery commandStatementQuery, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters commandStatementQuery CommandStatementQuery flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetTableSchema(bool) public static Schema GetTableSchema(bool includeTableSchemaField) Parameters includeTableSchemaField bool Returns Schema GetTableTypesFlightInfo(CommandGetTableTypes, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetTableTypesFlightInfo(CommandGetTableTypes command, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters command CommandGetTableTypes flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetTablesFlightInfo(CommandGetTables, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetTablesFlightInfo(CommandGetTables command, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters command CommandGetTables flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> GetXdbcTypeFlightInfo(CommandGetXdbcTypeInfo, FlightDescriptor, ServerCallContext) protected abstract Task<FlightInfo> GetXdbcTypeFlightInfo(CommandGetXdbcTypeInfo command, FlightDescriptor flightDescriptor, ServerCallContext context) Parameters command CommandGetXdbcTypeInfo flightDescriptor FlightDescriptor context ServerCallContext Returns Task<FlightInfo> ListActions(IAsyncStreamWriter<FlightActionType>, ServerCallContext) Lists actions supported by Flight SQL. For Flight RPC actions support implementers should extend this method to return additional supported actions. public override Task ListActions(IAsyncStreamWriter<FlightActionType> responseStream, ServerCallContext context) Parameters responseStream IAsyncStreamWriter<FlightActionType> context ServerCallContext Returns Task PutPreparedStatementQuery(CommandPreparedStatementQuery, FlightServerRecordBatchStreamReader, IAsyncStreamWriter<FlightPutResult>, ServerCallContext) protected abstract Task PutPreparedStatementQuery(CommandPreparedStatementQuery command, FlightServerRecordBatchStreamReader requestStream, IAsyncStreamWriter<FlightPutResult> responseStream, ServerCallContext context) Parameters command CommandPreparedStatementQuery requestStream FlightServerRecordBatchStreamReader responseStream IAsyncStreamWriter<FlightPutResult> context ServerCallContext Returns Task PutPreparedStatementUpdate(CommandPreparedStatementUpdate, FlightServerRecordBatchStreamReader, IAsyncStreamWriter<FlightPutResult>, ServerCallContext) protected abstract Task PutPreparedStatementUpdate(CommandPreparedStatementUpdate command, FlightServerRecordBatchStreamReader requestStream, IAsyncStreamWriter<FlightPutResult> responseStream, ServerCallContext context) Parameters command CommandPreparedStatementUpdate requestStream FlightServerRecordBatchStreamReader responseStream IAsyncStreamWriter<FlightPutResult> context ServerCallContext Returns Task PutStatementUpdate(CommandStatementUpdate, FlightServerRecordBatchStreamReader, IAsyncStreamWriter<FlightPutResult>, ServerCallContext) protected abstract Task PutStatementUpdate(CommandStatementUpdate command, FlightServerRecordBatchStreamReader requestStream, IAsyncStreamWriter<FlightPutResult> responseStream, ServerCallContext context) Parameters command CommandStatementUpdate requestStream FlightServerRecordBatchStreamReader responseStream IAsyncStreamWriter<FlightPutResult> context ServerCallContext Returns Task SupportsAction(FlightAction) public static bool SupportsAction(FlightAction action) Parameters action FlightAction Returns bool"
  },
  "api/Apache.Arrow.Flight.Sql.FlightSqlUtils.html": {
    "href": "api/Apache.Arrow.Flight.Sql.FlightSqlUtils.html",
    "title": "Class FlightSqlUtils | Apache Arrow .NET",
    "summary": "Class FlightSqlUtils Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll Helper methods for doing common Flight Sql tasks and conversions public class FlightSqlUtils Inheritance object FlightSqlUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FlightSqlActions List of possible actions public static readonly List<FlightActionType> FlightSqlActions Field Value List<FlightActionType> FlightSqlClosePreparedStatement public static readonly FlightActionType FlightSqlClosePreparedStatement Field Value FlightActionType FlightSqlCreatePreparedStatement public static readonly FlightActionType FlightSqlCreatePreparedStatement Field Value FlightActionType Methods Parse(ByteString) Helper to parse {@link com.google.protobuf.Any} objects to the specific protobuf object. public static Any Parse(ByteString source) Parameters source ByteString the raw bytes source value. Returns Any the materialized protobuf object. ParseAndUnpack<T>(ByteString) Helper to parse and unpack {@link com.google.protobuf.Any} objects to the specific protobuf object. public static T ParseAndUnpack<T>(ByteString source) where T : IMessage, new() Parameters source ByteString the raw bytes source value. Returns T the materialized protobuf object. Type Parameters T IMessage Unpack<T>(Any) Helper to unpack {@link com.google.protobuf.Any} objects to the specific protobuf object. public static T Unpack<T>(Any source) where T : IMessage, new() Parameters source Any the parsed Source value. Returns T the materialized protobuf object. Type Parameters T IMessage"
  },
  "api/Apache.Arrow.Flight.Sql.PreparedStatement.html": {
    "href": "api/Apache.Arrow.Flight.Sql.PreparedStatement.html",
    "title": "Class PreparedStatement | Apache Arrow .NET",
    "summary": "Class PreparedStatement Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll public class PreparedStatement : IDisposable, IAsyncDisposable Inheritance object PreparedStatement Implements IDisposable IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PreparedStatement(FlightSqlClient, string, Schema, Schema) Initializes a new instance of the PreparedStatement class. public PreparedStatement(FlightSqlClient client, string handle, Schema datasetSchema, Schema parameterSchema) Parameters client FlightSqlClient The Flight SQL client used for executing SQL operations. handle string The handle representing the prepared statement. datasetSchema Schema The schema of the result dataset. parameterSchema Schema The schema of the parameters for this prepared statement. Properties DatasetSchema public Schema DatasetSchema { get; } Property Value Schema Handle public string Handle { get; } Property Value string IsClosed public bool IsClosed { get; } Property Value bool ParameterSchema public Schema ParameterSchema { get; } Property Value Schema ParametersBatch public RecordBatch? ParametersBatch { get; } Property Value RecordBatch Methods BindParametersAsync(FlightDescriptor, RecordBatch, FlightCallOptions?, CancellationToken) Binds parameters to the prepared statement by streaming the given RecordBatch to the server asynchronously. public Task<ByteString> BindParametersAsync(FlightDescriptor descriptor, RecordBatch parameterBatch, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters descriptor FlightDescriptor The FlightDescriptor that identifies the statement or command being executed. parameterBatch RecordBatch The RecordBatch containing the parameters to bind to the prepared statement. options FlightCallOptions The FlightCallOptions for the operation, which may include timeouts, headers, and other options for the call. cancellationToken CancellationToken Cancellation token Returns Task<ByteString> A Task<TResult> that represents the asynchronous operation. The task result contains the metadata from the server after binding the parameters. Exceptions ArgumentNullException Thrown when parameterBatch is null. InvalidOperationException Thrown if the operation is canceled or if there is an error during the DoPut operation. CloseAsync(FlightCallOptions?, CancellationToken) Closes the prepared statement asynchronously. public Task CloseAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions The options used to configure the Flight call. cancellationToken CancellationToken Cancellation token Returns Task A task representing the asynchronous operation. Exceptions InvalidOperationException Thrown if closing the prepared statement fails. Dispose() Disposes of the resources used by the prepared statement. public void Dispose() Dispose(bool) Disposes of the resources used by the prepared statement. protected virtual void Dispose(bool disposing) Parameters disposing bool Whether the method is called from Dispose(). DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. ExecuteAsync(FlightCallOptions?, CancellationToken) Executes the prepared statement asynchronously and retrieves the query results as FlightInfo. public Task<FlightInfo> ExecuteAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions Optional FlightCallOptionsThe FlightCallOptions for the operation, which may include timeouts, headers, and other options for the call. cancellationToken CancellationToken Optional CancellationToken to observe while waiting for the task to complete. The task will be canceled if the token is canceled. Returns Task<FlightInfo> A Task<TResult> representing the asynchronous operation. The task result contains the FlightInfo describing the executed query results. Exceptions InvalidOperationException Thrown if the prepared statement is closed or if there is an error during execution. OperationCanceledException Thrown if the operation is canceled by the cancellationToken. ExecuteUpdateAsync(RecordBatch, FlightCallOptions?, CancellationToken) Executes a prepared update statement asynchronously with the provided parameter batch. public Task<long> ExecuteUpdateAsync(RecordBatch parameterBatch, FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters parameterBatch RecordBatch A RecordBatch containing the parameters to be bound to the update statement. This batch should match the schema expected by the prepared statement. options FlightCallOptions The FlightCallOptions for this execution, containing headers and other options. cancellationToken CancellationToken Cancellation token Returns Task<long> A Task<TResult> representing the asynchronous operation. The task result contains the number of rows affected by the update. Examples The following example demonstrates how to use the ExecuteUpdateAsync(RecordBatch, FlightCallOptions?, CancellationToken) method to execute an update operation: var parameterBatch = CreateParameterBatch(); var affectedRows = await preparedStatement.ExecuteUpdateAsync(new FlightCallOptions(), parameterBatch); Console.WriteLine($\"Rows affected: {affectedRows}\"); Remarks This method executes an update operation using a prepared statement. The provided parameterBatch is bound to the statement, and the operation is sent to the server. The server processes the update and returns metadata indicating the number of affected rows. This operation is asynchronous and can be canceled via the provided cancellationToken. Exceptions ArgumentNullException Thrown if parameterBatch is null, as a valid parameter batch is required for execution. InvalidOperationException Thrown if the update operation fails for any reason, including when the server returns invalid or empty metadata, or if the operation is canceled via the cancellationToken. GetSchemaAsync(FlightCallOptions?, CancellationToken) Retrieves the schema associated with the prepared statement asynchronously. public Task<Schema> GetSchemaAsync(FlightCallOptions? options = null, CancellationToken cancellationToken = default) Parameters options FlightCallOptions The options used to configure the Flight call. cancellationToken CancellationToken Cancellation token Returns Task<Schema> A task representing the asynchronous operation, which returns the schema of the result set. Exceptions InvalidOperationException Thrown when the schema is empty or invalid. ParseResponseAsync(FlightSqlClient, IAsyncEnumerable<FlightData>) Parses the response of a prepared statement execution from the FlightData stream. public Task<PreparedStatement> ParseResponseAsync(FlightSqlClient client, IAsyncEnumerable<FlightData> results) Parameters client FlightSqlClient The Flight SQL client. results IAsyncEnumerable<FlightData> The asynchronous stream of FlightData objects. Returns Task<PreparedStatement> A task representing the asynchronous operation, which returns the populated PreparedStatement. Exceptions ArgumentNullException Thrown if client or results is null. InvalidOperationException Thrown if the prepared statement handle or data is invalid. ReadResultAsync(IAsyncEnumerable<FlightData>, IMessage) Reads the result from an asynchronous stream of FlightData and populates the provided Protobuf message. public Task ReadResultAsync(IAsyncEnumerable<FlightData> results, IMessage message) Parameters results IAsyncEnumerable<FlightData> The asynchronous stream of FlightData objects. message IMessage The Protobuf message to populate with the data from the stream. Returns Task A task that represents the asynchronous read operation. Exceptions ArgumentNullException Thrown if results or message is null. InvalidOperationException Thrown if parsing the data fails. SetParameters(RecordBatch) Binds the specified parameter batch to the prepared statement and returns the status. public void SetParameters(RecordBatch parameterBatch) Parameters parameterBatch RecordBatch The RecordBatch containing parameters to bind to the statement. Exceptions ArgumentNullException Thrown if parameterBatch is null."
  },
  "api/Apache.Arrow.Flight.Sql.SchemaExtensions.html": {
    "href": "api/Apache.Arrow.Flight.Sql.SchemaExtensions.html",
    "title": "Class SchemaExtensions | Apache Arrow .NET",
    "summary": "Class SchemaExtensions Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll public static class SchemaExtensions Inheritance object SchemaExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeserializeSchema(ReadOnlyMemory<byte>) Deserializes a schema from a byte array. public static Schema DeserializeSchema(ReadOnlyMemory<byte> serializedSchema) Parameters serializedSchema ReadOnlyMemory<byte> The byte array representing the serialized schema. Returns Schema The deserialized Schema object. SerializeSchema(Schema) Serializes the provided schema to a byte array. public static byte[] SerializeSchema(Schema schema) Parameters schema Schema Returns byte[]"
  },
  "api/Apache.Arrow.Flight.Sql.SqlAction.html": {
    "href": "api/Apache.Arrow.Flight.Sql.SqlAction.html",
    "title": "Class SqlAction | Apache Arrow .NET",
    "summary": "Class SqlAction Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll public static class SqlAction Inheritance object SqlAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BeginTransactionRequest public const string BeginTransactionRequest = \"BeginTransaction\" Field Value string CancelFlightInfoRequest public const string CancelFlightInfoRequest = \"CancelFlightInfo\" Field Value string CloseRequest public const string CloseRequest = \"ClosePreparedStatement\" Field Value string CommitRequest public const string CommitRequest = \"Commit\" Field Value string CreateRequest public const string CreateRequest = \"CreatePreparedStatement\" Field Value string GetPrimaryKeysRequest public const string GetPrimaryKeysRequest = \"GetPrimaryKeys\" Field Value string RollbackRequest public const string RollbackRequest = \"Rollback\" Field Value string"
  },
  "api/Apache.Arrow.Flight.Sql.TableRef.html": {
    "href": "api/Apache.Arrow.Flight.Sql.TableRef.html",
    "title": "Class TableRef | Apache Arrow .NET",
    "summary": "Class TableRef Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll public class TableRef Inheritance object TableRef Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TableRef(string, string) public TableRef(string dbSchema, string table) Parameters dbSchema string table string TableRef(string?, string, string) public TableRef(string? catalog, string dbSchema, string table) Parameters catalog string dbSchema string table string Properties Catalog public string? Catalog { get; } Property Value string DbSchema public string DbSchema { get; } Property Value string Table public string Table { get; } Property Value string"
  },
  "api/Apache.Arrow.Flight.Sql.Transaction.html": {
    "href": "api/Apache.Arrow.Flight.Sql.Transaction.html",
    "title": "Struct Transaction | Apache Arrow .NET",
    "summary": "Struct Transaction Namespace Apache.Arrow.Flight.Sql Assembly Apache.Arrow.Flight.Sql.dll public readonly struct Transaction : IEquatable<Transaction> Implements IEquatable<Transaction> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Transaction(ByteString) public Transaction(ByteString transactionId) Parameters transactionId ByteString Transaction(string) public Transaction(string transactionId) Parameters transactionId string Fields NoTransaction public static readonly Transaction NoTransaction Field Value Transaction Properties IsValid public bool IsValid { get; } Property Value bool TransactionId public ByteString TransactionId { get; } Property Value ByteString Methods Equals(Transaction) Indicates whether the current object is equal to another object of the same type. public bool Equals(Transaction other) Parameters other Transaction An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Operators operator ==(Transaction, Transaction) public static bool operator ==(Transaction left, Transaction right) Parameters left Transaction right Transaction Returns bool operator !=(Transaction, Transaction) public static bool operator !=(Transaction left, Transaction right) Parameters left Transaction right Transaction Returns bool"
  },
  "api/Apache.Arrow.Flight.Sql.html": {
    "href": "api/Apache.Arrow.Flight.Sql.html",
    "title": "Namespace Apache.Arrow.Flight.Sql | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Flight.Sql Classes DoPutResult FlightCallOptions FlightSqlExtensions A set of helper functions for converting encoded commands to IMessage types FlightSqlServer FlightSqlUtils Helper methods for doing common Flight Sql tasks and conversions PreparedStatement SchemaExtensions SqlAction TableRef Structs Transaction"
  },
  "api/Apache.Arrow.Flight.html": {
    "href": "api/Apache.Arrow.Flight.html",
    "title": "Namespace Apache.Arrow.Flight | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Flight Classes FlightAction FlightActionType FlightCriteria FlightData FlightDescriptor FlightEndpoint FlightHandshakeRequest FlightHandshakeResponse FlightInfo FlightInfoCancelRequest FlightInfoCancelResult FlightLocation FlightPutResult FlightRecordBatchStreamReader Stream of record batches Use MoveNext() and Current to iterate over the batches. There are also gRPC helper functions such as ToListAsync() etc. FlightRecordBatchStreamWriter FlightResult FlightTicket Enums FlightDescriptorType"
  },
  "api/Apache.Arrow.FloatArray.Builder.html": {
    "href": "api/Apache.Arrow.FloatArray.Builder.html",
    "title": "Class FloatArray.Builder | Apache Arrow .NET",
    "summary": "Class FloatArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class FloatArray.Builder : PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>, IArrowArrayBuilder<float, FloatArray, FloatArray.Builder>, IArrowArrayBuilder<FloatArray, FloatArray.Builder>, IArrowArrayBuilder<FloatArray>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder> FloatArray.Builder Implements IArrowArrayBuilder<float, FloatArray, FloatArray.Builder> IArrowArrayBuilder<FloatArray, FloatArray.Builder> IArrowArrayBuilder<FloatArray> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Instance PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.ValueBuffer PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.ValidityBuffer PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Length PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.NullCount PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Resize(int) PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Reserve(int) PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Append(float) PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Append(float?) PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Append(ReadOnlySpan<float>) PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.AppendRange(IEnumerable<float>) PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.AppendNull() PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Clear() PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Set(int, float) PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Swap(int, int) PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<float, FloatArray, FloatArray.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override FloatArray Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns FloatArray"
  },
  "api/Apache.Arrow.FloatArray.html": {
    "href": "api/Apache.Arrow.FloatArray.html",
    "title": "Class FloatArray | Apache Arrow .NET",
    "summary": "Class FloatArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class FloatArray : PrimitiveArray<float>, IArrowArray, IDisposable, IReadOnlyList<float?>, IReadOnlyCollection<float?>, ICollection<float?>, IEnumerable<float?>, IEnumerable Inheritance object Array PrimitiveArray<float> FloatArray Implements IArrowArray IDisposable IReadOnlyList<float?> IReadOnlyCollection<float?> ICollection<float?> IEnumerable<float?> IEnumerable Inherited Members PrimitiveArray<float>.ValueBuffer PrimitiveArray<float>.Values PrimitiveArray<float>.GetValue(int) PrimitiveArray<float>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FloatArray(ArrayData) public FloatArray(ArrayData data) Parameters data ArrayData FloatArray(ArrowBuffer, ArrowBuffer, int, int, int) public FloatArray(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.IArrowArray.html": {
    "href": "api/Apache.Arrow.IArrowArray.html",
    "title": "Interface IArrowArray | Apache Arrow .NET",
    "summary": "Interface IArrowArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public interface IArrowArray : IDisposable Inherited Members IDisposable.Dispose() Properties Data ArrayData Data { get; } Property Value ArrayData Length int Length { get; } Property Value int NullCount int NullCount { get; } Property Value int Offset int Offset { get; } Property Value int Methods Accept(IArrowArrayVisitor) void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor IsNull(int) bool IsNull(int index) Parameters index int Returns bool IsValid(int) bool IsValid(int index) Parameters index int Returns bool"
  },
  "api/Apache.Arrow.IArrowArrayBuilder-1.html": {
    "href": "api/Apache.Arrow.IArrowArrayBuilder-1.html",
    "title": "Interface IArrowArrayBuilder<TArray> | Apache Arrow .NET",
    "summary": "Interface IArrowArrayBuilder<TArray> Namespace Apache.Arrow Assembly Apache.Arrow.dll public interface IArrowArrayBuilder<out TArray> : IArrowArrayBuilder where TArray : IArrowArray Type Parameters TArray Inherited Members IArrowArrayBuilder.Length Methods Build(MemoryAllocator) TArray Build(MemoryAllocator allocator) Parameters allocator MemoryAllocator Returns TArray"
  },
  "api/Apache.Arrow.IArrowArrayBuilder-2.html": {
    "href": "api/Apache.Arrow.IArrowArrayBuilder-2.html",
    "title": "Interface IArrowArrayBuilder<TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Interface IArrowArrayBuilder<TArray, TBuilder> Namespace Apache.Arrow Assembly Apache.Arrow.dll public interface IArrowArrayBuilder<out TArray, out TBuilder> : IArrowArrayBuilder<TArray>, IArrowArrayBuilder where TArray : IArrowArray where TBuilder : IArrowArrayBuilder<out TArray> Type Parameters TArray TBuilder Inherited Members IArrowArrayBuilder<TArray>.Build(MemoryAllocator) IArrowArrayBuilder.Length Methods AppendNull() TBuilder AppendNull() Returns TBuilder Clear() TBuilder Clear() Returns TBuilder Reserve(int) TBuilder Reserve(int capacity) Parameters capacity int Returns TBuilder Resize(int) TBuilder Resize(int length) Parameters length int Returns TBuilder"
  },
  "api/Apache.Arrow.IArrowArrayBuilder-3.html": {
    "href": "api/Apache.Arrow.IArrowArrayBuilder-3.html",
    "title": "Interface IArrowArrayBuilder<T, TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Interface IArrowArrayBuilder<T, TArray, TBuilder> Namespace Apache.Arrow Assembly Apache.Arrow.dll public interface IArrowArrayBuilder<T, out TArray, out TBuilder> : IArrowArrayBuilder<TArray, TBuilder>, IArrowArrayBuilder<TArray>, IArrowArrayBuilder where TArray : IArrowArray where TBuilder : IArrowArrayBuilder<out TArray> Type Parameters T TArray TBuilder Inherited Members IArrowArrayBuilder<TArray, TBuilder>.Reserve(int) IArrowArrayBuilder<TArray, TBuilder>.Resize(int) IArrowArrayBuilder<TArray, TBuilder>.Clear() IArrowArrayBuilder<TArray, TBuilder>.AppendNull() IArrowArrayBuilder<TArray>.Build(MemoryAllocator) IArrowArrayBuilder.Length Methods Append(ReadOnlySpan<T>) TBuilder Append(ReadOnlySpan<T> span) Parameters span ReadOnlySpan<T> Returns TBuilder Append(T) TBuilder Append(T value) Parameters value T Returns TBuilder AppendRange(IEnumerable<T>) TBuilder AppendRange(IEnumerable<T> values) Parameters values IEnumerable<T> Returns TBuilder Set(int, T) TBuilder Set(int index, T value) Parameters index int value T Returns TBuilder Swap(int, int) TBuilder Swap(int i, int j) Parameters i int j int Returns TBuilder"
  },
  "api/Apache.Arrow.IArrowArrayBuilder.html": {
    "href": "api/Apache.Arrow.IArrowArrayBuilder.html",
    "title": "Interface IArrowArrayBuilder | Apache Arrow .NET",
    "summary": "Interface IArrowArrayBuilder Namespace Apache.Arrow Assembly Apache.Arrow.dll public interface IArrowArrayBuilder Properties Length int Length { get; } Property Value int"
  },
  "api/Apache.Arrow.IArrowArrayVisitor-1.html": {
    "href": "api/Apache.Arrow.IArrowArrayVisitor-1.html",
    "title": "Interface IArrowArrayVisitor<T> | Apache Arrow .NET",
    "summary": "Interface IArrowArrayVisitor<T> Namespace Apache.Arrow Assembly Apache.Arrow.dll public interface IArrowArrayVisitor<T> : IArrowArrayVisitor where T : IArrowArray Type Parameters T Inherited Members IArrowArrayVisitor.Visit(IArrowArray) Methods Visit(T) void Visit(T array) Parameters array T"
  },
  "api/Apache.Arrow.IArrowArrayVisitor.html": {
    "href": "api/Apache.Arrow.IArrowArrayVisitor.html",
    "title": "Interface IArrowArrayVisitor | Apache Arrow .NET",
    "summary": "Interface IArrowArrayVisitor Namespace Apache.Arrow Assembly Apache.Arrow.dll public interface IArrowArrayVisitor Methods Visit(IArrowArray) void Visit(IArrowArray array) Parameters array IArrowArray"
  },
  "api/Apache.Arrow.IArrowRecord.html": {
    "href": "api/Apache.Arrow.IArrowRecord.html",
    "title": "Interface IArrowRecord | Apache Arrow .NET",
    "summary": "Interface IArrowRecord Namespace Apache.Arrow Assembly Apache.Arrow.dll public interface IArrowRecord : IArrowArray, IDisposable Inherited Members IArrowArray.IsNull(int) IArrowArray.IsValid(int) IArrowArray.Length IArrowArray.Offset IArrowArray.NullCount IArrowArray.Data IArrowArray.Accept(IArrowArrayVisitor) IDisposable.Dispose() Properties ColumnCount int ColumnCount { get; } Property Value int Schema IRecordType Schema { get; } Property Value IRecordType Methods Column(int) IArrowArray Column(int columnIndex) Parameters columnIndex int Returns IArrowArray Column(string, IEqualityComparer<string>) IArrowArray Column(string columnName, IEqualityComparer<string> comparer = null) Parameters columnName string comparer IEqualityComparer<string> Returns IArrowArray"
  },
  "api/Apache.Arrow.Int16Array.Builder.html": {
    "href": "api/Apache.Arrow.Int16Array.Builder.html",
    "title": "Class Int16Array.Builder | Apache Arrow .NET",
    "summary": "Class Int16Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Int16Array.Builder : PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>, IArrowArrayBuilder<short, Int16Array, Int16Array.Builder>, IArrowArrayBuilder<Int16Array, Int16Array.Builder>, IArrowArrayBuilder<Int16Array>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder> Int16Array.Builder Implements IArrowArrayBuilder<short, Int16Array, Int16Array.Builder> IArrowArrayBuilder<Int16Array, Int16Array.Builder> IArrowArrayBuilder<Int16Array> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Instance PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.ValueBuffer PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.ValidityBuffer PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Length PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.NullCount PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Resize(int) PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Reserve(int) PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Append(short) PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Append(short?) PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Append(ReadOnlySpan<short>) PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.AppendRange(IEnumerable<short>) PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.AppendNull() PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Clear() PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Set(int, short) PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Swap(int, int) PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<short, Int16Array, Int16Array.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override Int16Array Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns Int16Array"
  },
  "api/Apache.Arrow.Int16Array.html": {
    "href": "api/Apache.Arrow.Int16Array.html",
    "title": "Class Int16Array | Apache Arrow .NET",
    "summary": "Class Int16Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Int16Array : PrimitiveArray<short>, IArrowArray, IDisposable, IReadOnlyList<short?>, IReadOnlyCollection<short?>, ICollection<short?>, IEnumerable<short?>, IEnumerable Inheritance object Array PrimitiveArray<short> Int16Array Implements IArrowArray IDisposable IReadOnlyList<short?> IReadOnlyCollection<short?> ICollection<short?> IEnumerable<short?> IEnumerable Inherited Members PrimitiveArray<short>.ValueBuffer PrimitiveArray<short>.Values PrimitiveArray<short>.GetValue(int) PrimitiveArray<short>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Int16Array(ArrayData) public Int16Array(ArrayData data) Parameters data ArrayData Int16Array(ArrowBuffer, ArrowBuffer, int, int, int) public Int16Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.Int32Array.Builder.html": {
    "href": "api/Apache.Arrow.Int32Array.Builder.html",
    "title": "Class Int32Array.Builder | Apache Arrow .NET",
    "summary": "Class Int32Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Int32Array.Builder : PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>, IArrowArrayBuilder<int, Int32Array, Int32Array.Builder>, IArrowArrayBuilder<Int32Array, Int32Array.Builder>, IArrowArrayBuilder<Int32Array>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder> Int32Array.Builder Implements IArrowArrayBuilder<int, Int32Array, Int32Array.Builder> IArrowArrayBuilder<Int32Array, Int32Array.Builder> IArrowArrayBuilder<Int32Array> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Instance PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.ValueBuffer PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.ValidityBuffer PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Length PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.NullCount PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Resize(int) PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Reserve(int) PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Append(int) PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Append(int?) PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Append(ReadOnlySpan<int>) PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.AppendRange(IEnumerable<int>) PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.AppendNull() PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Clear() PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Set(int, int) PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Swap(int, int) PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<int, Int32Array, Int32Array.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override Int32Array Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns Int32Array"
  },
  "api/Apache.Arrow.Int32Array.html": {
    "href": "api/Apache.Arrow.Int32Array.html",
    "title": "Class Int32Array | Apache Arrow .NET",
    "summary": "Class Int32Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Int32Array : PrimitiveArray<int>, IArrowArray, IDisposable, IReadOnlyList<int?>, IReadOnlyCollection<int?>, ICollection<int?>, IEnumerable<int?>, IEnumerable Inheritance object Array PrimitiveArray<int> Int32Array Implements IArrowArray IDisposable IReadOnlyList<int?> IReadOnlyCollection<int?> ICollection<int?> IEnumerable<int?> IEnumerable Inherited Members PrimitiveArray<int>.ValueBuffer PrimitiveArray<int>.Values PrimitiveArray<int>.GetValue(int) PrimitiveArray<int>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Int32Array(ArrayData) public Int32Array(ArrayData data) Parameters data ArrayData Int32Array(ArrowBuffer, ArrowBuffer, int, int, int) public Int32Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.Int64Array.Builder.html": {
    "href": "api/Apache.Arrow.Int64Array.Builder.html",
    "title": "Class Int64Array.Builder | Apache Arrow .NET",
    "summary": "Class Int64Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Int64Array.Builder : PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>, IArrowArrayBuilder<long, Int64Array, Int64Array.Builder>, IArrowArrayBuilder<Int64Array, Int64Array.Builder>, IArrowArrayBuilder<Int64Array>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder> Int64Array.Builder Implements IArrowArrayBuilder<long, Int64Array, Int64Array.Builder> IArrowArrayBuilder<Int64Array, Int64Array.Builder> IArrowArrayBuilder<Int64Array> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Instance PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.ValueBuffer PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.ValidityBuffer PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Length PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.NullCount PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Resize(int) PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Reserve(int) PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Append(long) PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Append(long?) PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Append(ReadOnlySpan<long>) PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.AppendRange(IEnumerable<long>) PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.AppendNull() PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Clear() PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Set(int, long) PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Swap(int, int) PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<long, Int64Array, Int64Array.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override Int64Array Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns Int64Array"
  },
  "api/Apache.Arrow.Int64Array.html": {
    "href": "api/Apache.Arrow.Int64Array.html",
    "title": "Class Int64Array | Apache Arrow .NET",
    "summary": "Class Int64Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Int64Array : PrimitiveArray<long>, IArrowArray, IDisposable, IReadOnlyList<long?>, IReadOnlyCollection<long?>, ICollection<long?>, IEnumerable<long?>, IEnumerable Inheritance object Array PrimitiveArray<long> Int64Array Implements IArrowArray IDisposable IReadOnlyList<long?> IReadOnlyCollection<long?> ICollection<long?> IEnumerable<long?> IEnumerable Inherited Members PrimitiveArray<long>.ValueBuffer PrimitiveArray<long>.Values PrimitiveArray<long>.GetValue(int) PrimitiveArray<long>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Int64Array(ArrayData) public Int64Array(ArrayData data) Parameters data ArrayData Int64Array(ArrowBuffer, ArrowBuffer, int, int, int) public Int64Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.Int8Array.Builder.html": {
    "href": "api/Apache.Arrow.Int8Array.Builder.html",
    "title": "Class Int8Array.Builder | Apache Arrow .NET",
    "summary": "Class Int8Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Int8Array.Builder : PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>, IArrowArrayBuilder<sbyte, Int8Array, Int8Array.Builder>, IArrowArrayBuilder<Int8Array, Int8Array.Builder>, IArrowArrayBuilder<Int8Array>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder> Int8Array.Builder Implements IArrowArrayBuilder<sbyte, Int8Array, Int8Array.Builder> IArrowArrayBuilder<Int8Array, Int8Array.Builder> IArrowArrayBuilder<Int8Array> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Instance PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.ValueBuffer PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.ValidityBuffer PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Length PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.NullCount PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Resize(int) PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Reserve(int) PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Append(sbyte) PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Append(sbyte?) PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Append(ReadOnlySpan<sbyte>) PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.AppendRange(IEnumerable<sbyte>) PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.AppendNull() PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Clear() PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Set(int, sbyte) PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Swap(int, int) PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<sbyte, Int8Array, Int8Array.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override Int8Array Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns Int8Array"
  },
  "api/Apache.Arrow.Int8Array.html": {
    "href": "api/Apache.Arrow.Int8Array.html",
    "title": "Class Int8Array | Apache Arrow .NET",
    "summary": "Class Int8Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Int8Array : PrimitiveArray<sbyte>, IArrowArray, IDisposable, IReadOnlyList<sbyte?>, IReadOnlyCollection<sbyte?>, ICollection<sbyte?>, IEnumerable<sbyte?>, IEnumerable Inheritance object Array PrimitiveArray<sbyte> Int8Array Implements IArrowArray IDisposable IReadOnlyList<sbyte?> IReadOnlyCollection<sbyte?> ICollection<sbyte?> IEnumerable<sbyte?> IEnumerable Inherited Members PrimitiveArray<sbyte>.ValueBuffer PrimitiveArray<sbyte>.Values PrimitiveArray<sbyte>.GetValue(int) PrimitiveArray<sbyte>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Int8Array(ArrayData) public Int8Array(ArrayData data) Parameters data ArrayData Int8Array(ArrowBuffer, ArrowBuffer, int, int, int) public Int8Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.IntervalArray-1.html": {
    "href": "api/Apache.Arrow.IntervalArray-1.html",
    "title": "Class IntervalArray<T> | Apache Arrow .NET",
    "summary": "Class IntervalArray<T> Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class IntervalArray<T> : PrimitiveArray<T>, IArrowArray, IDisposable, IReadOnlyList<T?>, IReadOnlyCollection<T?>, ICollection<T?>, IEnumerable<T?>, IEnumerable where T : struct, IEquatable<T> Type Parameters T Inheritance object Array PrimitiveArray<T> IntervalArray<T> Implements IArrowArray IDisposable IReadOnlyList<T?> IReadOnlyCollection<T?> ICollection<T?> IEnumerable<T?> IEnumerable Derived DayTimeIntervalArray MonthDayNanosecondIntervalArray YearMonthIntervalArray Inherited Members PrimitiveArray<T>.ValueBuffer PrimitiveArray<T>.Values PrimitiveArray<T>.GetValue(int) PrimitiveArray<T>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.Accept(IArrowArrayVisitor) Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IntervalArray(ArrayData) protected IntervalArray(ArrayData data) Parameters data ArrayData Properties Type public IntervalType Type { get; } Property Value IntervalType Unit public IntervalUnit Unit { get; } Property Value IntervalUnit"
  },
  "api/Apache.Arrow.Ipc.ArrowFileReader.html": {
    "href": "api/Apache.Arrow.Ipc.ArrowFileReader.html",
    "title": "Class ArrowFileReader | Apache Arrow .NET",
    "summary": "Class ArrowFileReader Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll Implements an ArrowStreamReader that can read Arrow files. public class ArrowFileReader : ArrowStreamReader, IArrowArrayStream, IArrowReader, IDisposable Inheritance object ArrowStreamReader ArrowFileReader Implements IArrowArrayStream IArrowReader IDisposable Inherited Members ArrowStreamReader.Schema ArrowStreamReader.Dispose() ArrowStreamReader.Dispose(bool) ArrowStreamReader.GetSchema(CancellationToken) ArrowStreamReader.ReadNextRecordBatchAsync(CancellationToken) ArrowStreamReader.ReadNextRecordBatch() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ArrowFileReader(Stream) public ArrowFileReader(Stream stream) Parameters stream Stream ArrowFileReader(Stream, ICompressionCodecFactory) public ArrowFileReader(Stream stream, ICompressionCodecFactory compressionCodecFactory) Parameters stream Stream compressionCodecFactory ICompressionCodecFactory ArrowFileReader(Stream, MemoryAllocator) public ArrowFileReader(Stream stream, MemoryAllocator allocator) Parameters stream Stream allocator MemoryAllocator ArrowFileReader(Stream, MemoryAllocator, ICompressionCodecFactory) public ArrowFileReader(Stream stream, MemoryAllocator allocator, ICompressionCodecFactory compressionCodecFactory) Parameters stream Stream allocator MemoryAllocator compressionCodecFactory ICompressionCodecFactory ArrowFileReader(Stream, MemoryAllocator, ICompressionCodecFactory, bool) public ArrowFileReader(Stream stream, MemoryAllocator allocator, ICompressionCodecFactory compressionCodecFactory, bool leaveOpen) Parameters stream Stream allocator MemoryAllocator compressionCodecFactory ICompressionCodecFactory leaveOpen bool ArrowFileReader(Stream, MemoryAllocator, bool) public ArrowFileReader(Stream stream, MemoryAllocator allocator, bool leaveOpen) Parameters stream Stream allocator MemoryAllocator leaveOpen bool ArrowFileReader(Stream, bool) public ArrowFileReader(Stream stream, bool leaveOpen) Parameters stream Stream leaveOpen bool Properties IsFileValid public bool IsFileValid { get; } Property Value bool Methods FromFile(string) public static ArrowFileReader FromFile(string filename) Parameters filename string Returns ArrowFileReader ReadRecordBatchAsync(int, CancellationToken) public ValueTask<RecordBatch> ReadRecordBatchAsync(int index, CancellationToken cancellationToken = default) Parameters index int cancellationToken CancellationToken Returns ValueTask<RecordBatch> RecordBatchCountAsync() public ValueTask<int> RecordBatchCountAsync() Returns ValueTask<int>"
  },
  "api/Apache.Arrow.Ipc.ArrowFileWriter.html": {
    "href": "api/Apache.Arrow.Ipc.ArrowFileWriter.html",
    "title": "Class ArrowFileWriter | Apache Arrow .NET",
    "summary": "Class ArrowFileWriter Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll public class ArrowFileWriter : ArrowStreamWriter, IDisposable Inheritance object ArrowStreamWriter ArrowFileWriter Implements IDisposable Inherited Members ArrowStreamWriter.BaseStream ArrowStreamWriter.Buffers ArrowStreamWriter.HasWrittenSchema ArrowStreamWriter.Schema ArrowStreamWriter.WriteStart() ArrowStreamWriter.WriteStartAsync(CancellationToken) ArrowStreamWriter.WriteEnd() ArrowStreamWriter.WriteEndAsync(CancellationToken) ArrowStreamWriter.CalculatePadding(long, int) ArrowStreamWriter.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ArrowFileWriter(Stream, Schema) public ArrowFileWriter(Stream stream, Schema schema) Parameters stream Stream schema Schema ArrowFileWriter(Stream, Schema, bool) public ArrowFileWriter(Stream stream, Schema schema, bool leaveOpen) Parameters stream Stream schema Schema leaveOpen bool ArrowFileWriter(Stream, Schema, bool, IpcOptions) public ArrowFileWriter(Stream stream, Schema schema, bool leaveOpen, IpcOptions options) Parameters stream Stream schema Schema leaveOpen bool options IpcOptions ArrowFileWriter(Stream, Schema, bool, IpcOptions, MemoryAllocator) public ArrowFileWriter(Stream stream, Schema schema, bool leaveOpen, IpcOptions options, MemoryAllocator allocator) Parameters stream Stream schema Schema leaveOpen bool options IpcOptions allocator MemoryAllocator Methods WriteRecordBatch(RecordBatch) public override void WriteRecordBatch(RecordBatch recordBatch) Parameters recordBatch RecordBatch WriteRecordBatchAsync(RecordBatch, CancellationToken) public override Task WriteRecordBatchAsync(RecordBatch recordBatch, CancellationToken cancellationToken = default) Parameters recordBatch RecordBatch cancellationToken CancellationToken Returns Task"
  },
  "api/Apache.Arrow.Ipc.ArrowStreamReader.html": {
    "href": "api/Apache.Arrow.Ipc.ArrowStreamReader.html",
    "title": "Class ArrowStreamReader | Apache Arrow .NET",
    "summary": "Class ArrowStreamReader Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll Represents a reader that can read Arrow streams. public class ArrowStreamReader : IArrowArrayStream, IArrowReader, IDisposable Inheritance object ArrowStreamReader Implements IArrowArrayStream IArrowReader IDisposable Derived ArrowFileReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ArrowStreamReader(Stream) public ArrowStreamReader(Stream stream) Parameters stream Stream ArrowStreamReader(Stream, ICompressionCodecFactory) public ArrowStreamReader(Stream stream, ICompressionCodecFactory compressionCodecFactory) Parameters stream Stream compressionCodecFactory ICompressionCodecFactory ArrowStreamReader(Stream, ICompressionCodecFactory, bool) public ArrowStreamReader(Stream stream, ICompressionCodecFactory compressionCodecFactory, bool leaveOpen) Parameters stream Stream compressionCodecFactory ICompressionCodecFactory leaveOpen bool ArrowStreamReader(Stream, MemoryAllocator) public ArrowStreamReader(Stream stream, MemoryAllocator allocator) Parameters stream Stream allocator MemoryAllocator ArrowStreamReader(Stream, MemoryAllocator, ICompressionCodecFactory, bool) public ArrowStreamReader(Stream stream, MemoryAllocator allocator, ICompressionCodecFactory compressionCodecFactory, bool leaveOpen) Parameters stream Stream allocator MemoryAllocator compressionCodecFactory ICompressionCodecFactory leaveOpen bool ArrowStreamReader(Stream, MemoryAllocator, bool) public ArrowStreamReader(Stream stream, MemoryAllocator allocator, bool leaveOpen) Parameters stream Stream allocator MemoryAllocator leaveOpen bool ArrowStreamReader(Stream, bool) public ArrowStreamReader(Stream stream, bool leaveOpen) Parameters stream Stream leaveOpen bool ArrowStreamReader(ReadOnlyMemory<byte>) public ArrowStreamReader(ReadOnlyMemory<byte> buffer) Parameters buffer ReadOnlyMemory<byte> ArrowStreamReader(ReadOnlyMemory<byte>, ICompressionCodecFactory) public ArrowStreamReader(ReadOnlyMemory<byte> buffer, ICompressionCodecFactory compressionCodecFactory) Parameters buffer ReadOnlyMemory<byte> compressionCodecFactory ICompressionCodecFactory Properties Schema May block if the schema hasn't yet been read. To avoid blocking, use GetSchemaAsync. public Schema Schema { get; } Property Value Schema Methods Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool GetSchema(CancellationToken) public ValueTask<Schema> GetSchema(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns ValueTask<Schema> ReadNextRecordBatch() public RecordBatch ReadNextRecordBatch() Returns RecordBatch ReadNextRecordBatchAsync(CancellationToken) public ValueTask<RecordBatch> ReadNextRecordBatchAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns ValueTask<RecordBatch>"
  },
  "api/Apache.Arrow.Ipc.ArrowStreamWriter.html": {
    "href": "api/Apache.Arrow.Ipc.ArrowStreamWriter.html",
    "title": "Class ArrowStreamWriter | Apache Arrow .NET",
    "summary": "Class ArrowStreamWriter Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll public class ArrowStreamWriter : IDisposable Inheritance object ArrowStreamWriter Implements IDisposable Derived ArrowFileWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ArrowStreamWriter(Stream, Schema) public ArrowStreamWriter(Stream baseStream, Schema schema) Parameters baseStream Stream schema Schema ArrowStreamWriter(Stream, Schema, bool) public ArrowStreamWriter(Stream baseStream, Schema schema, bool leaveOpen) Parameters baseStream Stream schema Schema leaveOpen bool ArrowStreamWriter(Stream, Schema, bool, IpcOptions) public ArrowStreamWriter(Stream baseStream, Schema schema, bool leaveOpen, IpcOptions options) Parameters baseStream Stream schema Schema leaveOpen bool options IpcOptions ArrowStreamWriter(Stream, Schema, bool, IpcOptions, MemoryAllocator) public ArrowStreamWriter(Stream baseStream, Schema schema, bool leaveOpen, IpcOptions options, MemoryAllocator allocator) Parameters baseStream Stream schema Schema leaveOpen bool options IpcOptions allocator MemoryAllocator Properties BaseStream protected Stream BaseStream { get; } Property Value Stream Buffers protected ArrayPool<byte> Buffers { get; } Property Value ArrayPool<byte> HasWrittenSchema protected bool HasWrittenSchema { get; set; } Property Value bool Schema protected Schema Schema { get; } Property Value Schema Methods CalculatePadding(long, int) protected int CalculatePadding(long offset, int alignment = 8) Parameters offset long alignment int Returns int Dispose() public virtual void Dispose() WriteEnd() public void WriteEnd() WriteEndAsync(CancellationToken) public Task WriteEndAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task WriteRecordBatch(RecordBatch) public virtual void WriteRecordBatch(RecordBatch recordBatch) Parameters recordBatch RecordBatch WriteRecordBatchAsync(RecordBatch, CancellationToken) public virtual Task WriteRecordBatchAsync(RecordBatch recordBatch, CancellationToken cancellationToken = default) Parameters recordBatch RecordBatch cancellationToken CancellationToken Returns Task WriteStart() public void WriteStart() WriteStartAsync(CancellationToken) public Task WriteStartAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task"
  },
  "api/Apache.Arrow.Ipc.CompressionCodecType.html": {
    "href": "api/Apache.Arrow.Ipc.CompressionCodecType.html",
    "title": "Enum CompressionCodecType | Apache Arrow .NET",
    "summary": "Enum CompressionCodecType Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll public enum CompressionCodecType Fields Lz4Frame = 0 Zstd = 1"
  },
  "api/Apache.Arrow.Ipc.IArrowArrayStream.html": {
    "href": "api/Apache.Arrow.Ipc.IArrowArrayStream.html",
    "title": "Interface IArrowArrayStream | Apache Arrow .NET",
    "summary": "Interface IArrowArrayStream Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll public interface IArrowArrayStream : IArrowReader, IDisposable Inherited Members IArrowReader.ReadNextRecordBatchAsync(CancellationToken) IDisposable.Dispose() Properties Schema Schema Schema { get; } Property Value Schema"
  },
  "api/Apache.Arrow.Ipc.IArrowReader.html": {
    "href": "api/Apache.Arrow.Ipc.IArrowReader.html",
    "title": "Interface IArrowReader | Apache Arrow .NET",
    "summary": "Interface IArrowReader Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll public interface IArrowReader Methods ReadNextRecordBatchAsync(CancellationToken) ValueTask<RecordBatch> ReadNextRecordBatchAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns ValueTask<RecordBatch>"
  },
  "api/Apache.Arrow.Ipc.ICompressionCodec.html": {
    "href": "api/Apache.Arrow.Ipc.ICompressionCodec.html",
    "title": "Interface ICompressionCodec | Apache Arrow .NET",
    "summary": "Interface ICompressionCodec Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll Codec for data compression and decompression (currently only decompression is supported) public interface ICompressionCodec : IDisposable Inherited Members IDisposable.Dispose() Methods Compress(ReadOnlyMemory<byte>, Stream) Write compressed data void Compress(ReadOnlyMemory<byte> source, Stream destination) Parameters source ReadOnlyMemory<byte> The data to compress destination Stream The stream to write compressed data to Decompress(ReadOnlyMemory<byte>, Memory<byte>) Decompresses a compressed data buffer int Decompress(ReadOnlyMemory<byte> source, Memory<byte> destination) Parameters source ReadOnlyMemory<byte> Data buffer to read compressed data from destination Memory<byte> Data buffer to write decompressed data to Returns int The number of decompressed bytes written into the destination"
  },
  "api/Apache.Arrow.Ipc.ICompressionCodecFactory.html": {
    "href": "api/Apache.Arrow.Ipc.ICompressionCodecFactory.html",
    "title": "Interface ICompressionCodecFactory | Apache Arrow .NET",
    "summary": "Interface ICompressionCodecFactory Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll Provides compression codec implementations for different compression codecs public interface ICompressionCodecFactory Methods CreateCodec(CompressionCodecType) Create a new compression codec ICompressionCodec CreateCodec(CompressionCodecType compressionCodecType) Parameters compressionCodecType CompressionCodecType The type of codec to create Returns ICompressionCodec The created codec CreateCodec(CompressionCodecType, int?) Create a new compression codec with a specified compression level ICompressionCodec CreateCodec(CompressionCodecType compressionCodecType, int? compressionLevel) Parameters compressionCodecType CompressionCodecType The type of codec to create compressionLevel int? The compression level to use when compressing data Returns ICompressionCodec The created codec"
  },
  "api/Apache.Arrow.Ipc.ITryCompressionCodec.html": {
    "href": "api/Apache.Arrow.Ipc.ITryCompressionCodec.html",
    "title": "Interface ITryCompressionCodec | Apache Arrow .NET",
    "summary": "Interface ITryCompressionCodec Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll public interface ITryCompressionCodec : ICompressionCodec, IDisposable Inherited Members ICompressionCodec.Decompress(ReadOnlyMemory<byte>, Memory<byte>) ICompressionCodec.Compress(ReadOnlyMemory<byte>, Stream) IDisposable.Dispose() Methods TryCompress(ReadOnlyMemory<byte>, Memory<byte>, out int) Try to write compressed data to a fixed length memory span bool TryCompress(ReadOnlyMemory<byte> source, Memory<byte> destination, out int bytesWritten) Parameters source ReadOnlyMemory<byte> The data to compress destination Memory<byte> Memory to write compressed data to bytesWritten int The number of bytes written to the destination Returns bool true if compression was successful, false if the destination buffer is too small"
  },
  "api/Apache.Arrow.Ipc.IpcOptions.html": {
    "href": "api/Apache.Arrow.Ipc.IpcOptions.html",
    "title": "Class IpcOptions | Apache Arrow .NET",
    "summary": "Class IpcOptions Namespace Apache.Arrow.Ipc Assembly Apache.Arrow.dll public class IpcOptions Inheritance object IpcOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IpcOptions() public IpcOptions() Properties CompressionCodec The compression codec to use to compress data buffers. If null (the default value), no compression is used. public CompressionCodecType? CompressionCodec { get; set; } Property Value CompressionCodecType? CompressionCodecFactory The compression codec factory used to create compression codecs. Must be provided if a CompressionCodec is specified. public ICompressionCodecFactory CompressionCodecFactory { get; set; } Property Value ICompressionCodecFactory CompressionLevel Sets the compression level to use for codecs that support this. public int? CompressionLevel { get; set; } Property Value int? WriteLegacyIpcFormat Write the pre-0.15.0 encapsulated IPC message format consisting of a 4-byte prefix instead of 8 byte. public bool WriteLegacyIpcFormat { get; set; } Property Value bool"
  },
  "api/Apache.Arrow.Ipc.html": {
    "href": "api/Apache.Arrow.Ipc.html",
    "title": "Namespace Apache.Arrow.Ipc | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Ipc Classes ArrowFileReader Implements an ArrowStreamReader that can read Arrow files. ArrowFileWriter ArrowStreamReader Represents a reader that can read Arrow streams. ArrowStreamWriter IpcOptions Interfaces IArrowArrayStream IArrowReader ICompressionCodec Codec for data compression and decompression (currently only decompression is supported) ICompressionCodecFactory Provides compression codec implementations for different compression codecs ITryCompressionCodec Enums CompressionCodecType"
  },
  "api/Apache.Arrow.LargeBinaryArray.html": {
    "href": "api/Apache.Arrow.LargeBinaryArray.html",
    "title": "Class LargeBinaryArray | Apache Arrow .NET",
    "summary": "Class LargeBinaryArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class LargeBinaryArray : Array, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, ICollection<byte[]>, IEnumerable<byte[]>, IEnumerable Inheritance object Array LargeBinaryArray Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> ICollection<byte[]> IEnumerable<byte[]> IEnumerable Derived LargeStringArray Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LargeBinaryArray(ArrayData) public LargeBinaryArray(ArrayData data) Parameters data ArrayData LargeBinaryArray(ArrowTypeId, ArrayData) public LargeBinaryArray(ArrowTypeId typeId, ArrayData data) Parameters typeId ArrowTypeId data ArrayData LargeBinaryArray(IArrowType, int, ArrowBuffer, ArrowBuffer, ArrowBuffer, int, int) public LargeBinaryArray(IArrowType dataType, int length, ArrowBuffer valueOffsetsBuffer, ArrowBuffer dataBuffer, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int valueOffsetsBuffer ArrowBuffer dataBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer nullCount int offset int Properties ValueBuffer public ArrowBuffer ValueBuffer { get; } Property Value ArrowBuffer ValueOffsets public ReadOnlySpan<long> ValueOffsets { get; } Property Value ReadOnlySpan<long> ValueOffsetsBuffer public ArrowBuffer ValueOffsetsBuffer { get; } Property Value ArrowBuffer Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetBytes(int) Get the collection of bytes, as a read-only span, at a given index in the array. public ReadOnlySpan<byte> GetBytes(int index) Parameters index int Index at which to get bytes. Returns ReadOnlySpan<byte> Returns a ReadOnlySpan<T> object. Remarks Note that this method cannot reliably identify null values, which are indistinguishable from empty byte collection values when seen in the context of this method's return type of ReadOnlySpan<T>. Use the IsNull(int) method or the GetBytes(int, out bool) overload instead to reliably determine null values. Exceptions ArgumentOutOfRangeException If the index is negative or beyond the length of the array. GetBytes(int, out bool) Get the collection of bytes, as a read-only span, at a given index in the array. public ReadOnlySpan<byte> GetBytes(int index, out bool isNull) Parameters index int Index at which to get bytes. isNull bool Set to true if the value at the given index is null. Returns ReadOnlySpan<byte> Returns a ReadOnlySpan<T> object. Exceptions ArgumentOutOfRangeException If the index is negative or beyond the length of the array. GetValueLength(int) public int GetValueLength(int index) Parameters index int Returns int"
  },
  "api/Apache.Arrow.LargeListArray.html": {
    "href": "api/Apache.Arrow.LargeListArray.html",
    "title": "Class LargeListArray | Apache Arrow .NET",
    "summary": "Class LargeListArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class LargeListArray : Array, IArrowArray, IDisposable Inheritance object Array LargeListArray Implements IArrowArray IDisposable Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LargeListArray(ArrayData) public LargeListArray(ArrayData data) Parameters data ArrayData LargeListArray(IArrowType, int, ArrowBuffer, IArrowArray, ArrowBuffer, int, int) public LargeListArray(IArrowType dataType, int length, ArrowBuffer valueOffsetsBuffer, IArrowArray values, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int valueOffsetsBuffer ArrowBuffer values IArrowArray nullBitmapBuffer ArrowBuffer nullCount int offset int Properties ValueOffsets public ReadOnlySpan<long> ValueOffsets { get; } Property Value ReadOnlySpan<long> ValueOffsetsBuffer public ArrowBuffer ValueOffsetsBuffer { get; } Property Value ArrowBuffer Values public IArrowArray Values { get; } Property Value IArrowArray Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetSlicedValues(int) public IArrowArray GetSlicedValues(int index) Parameters index int Returns IArrowArray GetValueLength(int) public int GetValueLength(int index) Parameters index int Returns int"
  },
  "api/Apache.Arrow.LargeStringArray.html": {
    "href": "api/Apache.Arrow.LargeStringArray.html",
    "title": "Class LargeStringArray | Apache Arrow .NET",
    "summary": "Class LargeStringArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class LargeStringArray : LargeBinaryArray, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, ICollection<byte[]>, IEnumerable<byte[]>, IReadOnlyList<string>, IReadOnlyCollection<string>, ICollection<string>, IEnumerable<string>, IEnumerable Inheritance object Array LargeBinaryArray LargeStringArray Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> ICollection<byte[]> IEnumerable<byte[]> IReadOnlyList<string> IReadOnlyCollection<string> ICollection<string> IEnumerable<string> IEnumerable Inherited Members LargeBinaryArray.ValueOffsetsBuffer LargeBinaryArray.ValueBuffer LargeBinaryArray.ValueOffsets LargeBinaryArray.GetValueLength(int) LargeBinaryArray.GetBytes(int) LargeBinaryArray.GetBytes(int, out bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LargeStringArray(ArrayData) public LargeStringArray(ArrayData data) Parameters data ArrayData LargeStringArray(int, ArrowBuffer, ArrowBuffer, ArrowBuffer, int, int) public LargeStringArray(int length, ArrowBuffer valueOffsetsBuffer, ArrowBuffer dataBuffer, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters length int valueOffsetsBuffer ArrowBuffer dataBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer nullCount int offset int Fields DefaultEncoding public static readonly Encoding DefaultEncoding Field Value Encoding Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetString(int, Encoding) Get the string value at the given index public string GetString(int index, Encoding encoding = null) Parameters index int Input index encoding Encoding Optional: the string encoding, default is UTF8 Returns string The string object at the given index"
  },
  "api/Apache.Arrow.ListArray.Builder.html": {
    "href": "api/Apache.Arrow.ListArray.Builder.html",
    "title": "Class ListArray.Builder | Apache Arrow .NET",
    "summary": "Class ListArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class ListArray.Builder : IArrowArrayBuilder<ListArray, ListArray.Builder>, IArrowArrayBuilder<ListArray>, IArrowArrayBuilder Inheritance object ListArray.Builder Implements IArrowArrayBuilder<ListArray, ListArray.Builder> IArrowArrayBuilder<ListArray> IArrowArrayBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(Field) public Builder(Field valueField) Parameters valueField Field Builder(IArrowType) public Builder(IArrowType valueDataType) Parameters valueDataType IArrowType Properties Length public int Length { get; } Property Value int NullCount public int NullCount { get; protected set; } Property Value int ValueBuilder public IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> ValueBuilder { get; } Property Value IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> Methods Append() Start a new variable-length list slot This function should be called before beginning to append elements to the value builder public ListArray.Builder Append() Returns ListArray.Builder AppendNull() public ListArray.Builder AppendNull() Returns ListArray.Builder Build(MemoryAllocator) public ListArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns ListArray Clear() public ListArray.Builder Clear() Returns ListArray.Builder Reserve(int) public ListArray.Builder Reserve(int capacity) Parameters capacity int Returns ListArray.Builder Resize(int) public ListArray.Builder Resize(int length) Parameters length int Returns ListArray.Builder"
  },
  "api/Apache.Arrow.ListArray.html": {
    "href": "api/Apache.Arrow.ListArray.html",
    "title": "Class ListArray | Apache Arrow .NET",
    "summary": "Class ListArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class ListArray : Array, IArrowArray, IDisposable Inheritance object Array ListArray Implements IArrowArray IDisposable Derived MapArray Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListArray(ArrayData) public ListArray(ArrayData data) Parameters data ArrayData ListArray(IArrowType, int, ArrowBuffer, IArrowArray, ArrowBuffer, int, int) public ListArray(IArrowType dataType, int length, ArrowBuffer valueOffsetsBuffer, IArrowArray values, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int valueOffsetsBuffer ArrowBuffer values IArrowArray nullBitmapBuffer ArrowBuffer nullCount int offset int Properties ValueOffsets public ReadOnlySpan<int> ValueOffsets { get; } Property Value ReadOnlySpan<int> ValueOffsetsBuffer public ArrowBuffer ValueOffsetsBuffer { get; } Property Value ArrowBuffer Values public IArrowArray Values { get; } Property Value IArrowArray Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetSlicedValues(int) public IArrowArray GetSlicedValues(int index) Parameters index int Returns IArrowArray GetValueLength(int) public int GetValueLength(int index) Parameters index int Returns int GetValueOffset(int) [Obsolete(\"This method has been deprecated. Please use ValueOffsets[index] instead.\")] public int GetValueOffset(int index) Parameters index int Returns int"
  },
  "api/Apache.Arrow.ListViewArray.Builder.html": {
    "href": "api/Apache.Arrow.ListViewArray.Builder.html",
    "title": "Class ListViewArray.Builder | Apache Arrow .NET",
    "summary": "Class ListViewArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class ListViewArray.Builder : IArrowArrayBuilder<ListViewArray, ListViewArray.Builder>, IArrowArrayBuilder<ListViewArray>, IArrowArrayBuilder Inheritance object ListViewArray.Builder Implements IArrowArrayBuilder<ListViewArray, ListViewArray.Builder> IArrowArrayBuilder<ListViewArray> IArrowArrayBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(Field) public Builder(Field valueField) Parameters valueField Field Builder(IArrowType) public Builder(IArrowType valueDataType) Parameters valueDataType IArrowType Properties Length public int Length { get; } Property Value int NullCount public int NullCount { get; protected set; } Property Value int ValueBuilder public IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> ValueBuilder { get; } Property Value IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> Methods Append() Start a new variable-length list slot This function should be called before beginning to append elements to the value builder. TODO: Consider adding builder APIs to support construction of overlapping lists. public ListViewArray.Builder Append() Returns ListViewArray.Builder AppendNull() public ListViewArray.Builder AppendNull() Returns ListViewArray.Builder Build(MemoryAllocator) public ListViewArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns ListViewArray Clear() public ListViewArray.Builder Clear() Returns ListViewArray.Builder Reserve(int) public ListViewArray.Builder Reserve(int capacity) Parameters capacity int Returns ListViewArray.Builder Resize(int) public ListViewArray.Builder Resize(int length) Parameters length int Returns ListViewArray.Builder"
  },
  "api/Apache.Arrow.ListViewArray.html": {
    "href": "api/Apache.Arrow.ListViewArray.html",
    "title": "Class ListViewArray | Apache Arrow .NET",
    "summary": "Class ListViewArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class ListViewArray : Array, IArrowArray, IDisposable Inheritance object Array ListViewArray Implements IArrowArray IDisposable Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListViewArray(ArrayData) public ListViewArray(ArrayData data) Parameters data ArrayData ListViewArray(IArrowType, int, ArrowBuffer, ArrowBuffer, IArrowArray, ArrowBuffer, int, int) public ListViewArray(IArrowType dataType, int length, ArrowBuffer valueOffsetsBuffer, ArrowBuffer sizesBuffer, IArrowArray values, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int valueOffsetsBuffer ArrowBuffer sizesBuffer ArrowBuffer values IArrowArray nullBitmapBuffer ArrowBuffer nullCount int offset int Properties Sizes public ReadOnlySpan<int> Sizes { get; } Property Value ReadOnlySpan<int> SizesBuffer public ArrowBuffer SizesBuffer { get; } Property Value ArrowBuffer ValueOffsets public ReadOnlySpan<int> ValueOffsets { get; } Property Value ReadOnlySpan<int> ValueOffsetsBuffer public ArrowBuffer ValueOffsetsBuffer { get; } Property Value ArrowBuffer Values public IArrowArray Values { get; } Property Value IArrowArray Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool GetSlicedValues(int) public IArrowArray GetSlicedValues(int index) Parameters index int Returns IArrowArray GetValueLength(int) public int GetValueLength(int index) Parameters index int Returns int"
  },
  "api/Apache.Arrow.MapArray.Builder.html": {
    "href": "api/Apache.Arrow.MapArray.Builder.html",
    "title": "Class MapArray.Builder | Apache Arrow .NET",
    "summary": "Class MapArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class MapArray.Builder : IArrowArrayBuilder<MapArray, MapArray.Builder>, IArrowArrayBuilder<MapArray>, IArrowArrayBuilder Inheritance object MapArray.Builder Implements IArrowArrayBuilder<MapArray, MapArray.Builder> IArrowArrayBuilder<MapArray> IArrowArrayBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(MapType) public Builder(MapType type) Parameters type MapType Properties DataType public MapType DataType { get; } Property Value MapType KeyBuilder public IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> KeyBuilder { get; } Property Value IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> Length public int Length { get; } Property Value int NullCount public int NullCount { get; protected set; } Property Value int ValueBuilder public IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> ValueBuilder { get; } Property Value IArrowArrayBuilder<IArrowArray, IArrowArrayBuilder<IArrowArray>> Methods Append() Start a new variable-length list slot This function should be called before beginning to append elements to the value builder public MapArray.Builder Append() Returns MapArray.Builder AppendNull() public MapArray.Builder AppendNull() Returns MapArray.Builder Build(MemoryAllocator) public MapArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns MapArray Clear() public MapArray.Builder Clear() Returns MapArray.Builder Reserve(int) public MapArray.Builder Reserve(int capacity) Parameters capacity int Returns MapArray.Builder Resize(int) public MapArray.Builder Resize(int length) Parameters length int Returns MapArray.Builder"
  },
  "api/Apache.Arrow.MapArray.html": {
    "href": "api/Apache.Arrow.MapArray.html",
    "title": "Class MapArray | Apache Arrow .NET",
    "summary": "Class MapArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class MapArray : ListArray, IArrowArray, IDisposable Inheritance object Array ListArray MapArray Implements IArrowArray IDisposable Inherited Members ListArray.ValueOffsetsBuffer ListArray.ValueOffsets ListArray.GetValueOffset(int) ListArray.GetValueLength(int) ListArray.GetSlicedValues(int) ListArray.Dispose(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MapArray(ArrayData) public MapArray(ArrayData data) Parameters data ArrayData MapArray(IArrowType, int, ArrowBuffer, IArrowArray, ArrowBuffer, int, int) public MapArray(IArrowType dataType, int length, ArrowBuffer valueOffsetsBuffer, IArrowArray structs, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int valueOffsetsBuffer ArrowBuffer structs IArrowArray nullBitmapBuffer ArrowBuffer nullCount int offset int Properties KeyValues public StructArray KeyValues { get; } Property Value StructArray Keys public IArrowArray Keys { get; } Property Value IArrowArray Values public IArrowArray Values { get; } Property Value IArrowArray Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetKeyValuePairs<TKeyArray, K, TValueArray, V>(int, Func<TKeyArray, int, K>, Func<TValueArray, int, V>) public IEnumerable<KeyValuePair<K, V>> GetKeyValuePairs<TKeyArray, K, TValueArray, V>(int index, Func<TKeyArray, int, K> getKey, Func<TValueArray, int, V> getValue) where TKeyArray : Array where TValueArray : Array Parameters index int getKey Func<TKeyArray, int, K> getValue Func<TValueArray, int, V> Returns IEnumerable<KeyValuePair<K, V>> Type Parameters TKeyArray K TValueArray V GetTuples<TKeyArray, K, TValueArray, V>(int, Func<TKeyArray, int, K>, Func<TValueArray, int, V>) public IEnumerable<Tuple<K, V>> GetTuples<TKeyArray, K, TValueArray, V>(int index, Func<TKeyArray, int, K> getKey, Func<TValueArray, int, V> getValue) where TKeyArray : Array where TValueArray : Array Parameters index int getKey Func<TKeyArray, int, K> getValue Func<TValueArray, int, V> Returns IEnumerable<Tuple<K, V>> Type Parameters TKeyArray K TValueArray V"
  },
  "api/Apache.Arrow.Memory.MemoryAllocator.Stats.html": {
    "href": "api/Apache.Arrow.Memory.MemoryAllocator.Stats.html",
    "title": "Class MemoryAllocator.Stats | Apache Arrow .NET",
    "summary": "Class MemoryAllocator.Stats Namespace Apache.Arrow.Memory Assembly Apache.Arrow.dll public class MemoryAllocator.Stats Inheritance object MemoryAllocator.Stats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Allocations public long Allocations { get; } Property Value long BytesAllocated public long BytesAllocated { get; } Property Value long"
  },
  "api/Apache.Arrow.Memory.MemoryAllocator.html": {
    "href": "api/Apache.Arrow.Memory.MemoryAllocator.html",
    "title": "Class MemoryAllocator | Apache Arrow .NET",
    "summary": "Class MemoryAllocator Namespace Apache.Arrow.Memory Assembly Apache.Arrow.dll public abstract class MemoryAllocator Inheritance object MemoryAllocator Derived NativeMemoryAllocator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MemoryAllocator(int) protected MemoryAllocator(int alignment = 64) Parameters alignment int Fields DefaultAlignment public const int DefaultAlignment = 64 Field Value int Properties Alignment protected int Alignment { get; } Property Value int Default public static Lazy<MemoryAllocator> Default { get; } Property Value Lazy<MemoryAllocator> Statistics public MemoryAllocator.Stats Statistics { get; } Property Value MemoryAllocator.Stats Methods Allocate(int) public IMemoryOwner<byte> Allocate(int length) Parameters length int Returns IMemoryOwner<byte> AllocateInternal(int, out int) protected abstract IMemoryOwner<byte> AllocateInternal(int length, out int bytesAllocated) Parameters length int bytesAllocated int Returns IMemoryOwner<byte>"
  },
  "api/Apache.Arrow.Memory.NativeMemoryAllocator.html": {
    "href": "api/Apache.Arrow.Memory.NativeMemoryAllocator.html",
    "title": "Class NativeMemoryAllocator | Apache Arrow .NET",
    "summary": "Class NativeMemoryAllocator Namespace Apache.Arrow.Memory Assembly Apache.Arrow.dll public class NativeMemoryAllocator : MemoryAllocator Inheritance object MemoryAllocator NativeMemoryAllocator Inherited Members MemoryAllocator.DefaultAlignment MemoryAllocator.Default MemoryAllocator.Statistics MemoryAllocator.Alignment MemoryAllocator.Allocate(int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NativeMemoryAllocator(int) public NativeMemoryAllocator(int alignment = 64) Parameters alignment int Methods AllocateInternal(int, out int) protected override IMemoryOwner<byte> AllocateInternal(int length, out int bytesAllocated) Parameters length int bytesAllocated int Returns IMemoryOwner<byte>"
  },
  "api/Apache.Arrow.Memory.NativeMemoryManager.html": {
    "href": "api/Apache.Arrow.Memory.NativeMemoryManager.html",
    "title": "Class NativeMemoryManager | Apache Arrow .NET",
    "summary": "Class NativeMemoryManager Namespace Apache.Arrow.Memory Assembly Apache.Arrow.dll public class NativeMemoryManager : MemoryManager<byte>, IMemoryOwner<byte>, IDisposable, IPinnable Inheritance object MemoryManager<byte> NativeMemoryManager Implements IMemoryOwner<byte> IDisposable IPinnable Inherited Members MemoryManager<byte>.CreateMemory(int) MemoryManager<byte>.CreateMemory(int, int) MemoryManager<byte>.TryGetArray(out ArraySegment<byte>) MemoryManager<byte>.Memory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NativeMemoryManager(IntPtr, int, int) public NativeMemoryManager(IntPtr ptr, int offset, int length) Parameters ptr IntPtr offset int length int Methods Dispose(bool) Clean up of any leftover managed and unmanaged resources. protected override void Dispose(bool disposing) Parameters disposing bool ~NativeMemoryManager() protected ~NativeMemoryManager() GetSpan() Returns a span wrapping the underlying memory. public override Span<byte> GetSpan() Returns Span<byte> Pin(int) Returns a handle to the memory that has been pinned and hence its address can be taken. public override MemoryHandle Pin(int elementIndex = 0) Parameters elementIndex int The offset to the element within the memory at which the returned MemoryHandle points to. (default = 0) Returns MemoryHandle Unpin() Lets the garbage collector know that the object is free to be moved now. public override void Unpin()"
  },
  "api/Apache.Arrow.Memory.html": {
    "href": "api/Apache.Arrow.Memory.html",
    "title": "Namespace Apache.Arrow.Memory | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Memory Classes MemoryAllocator MemoryAllocator.Stats NativeMemoryAllocator NativeMemoryManager"
  },
  "api/Apache.Arrow.MonthDayNanosecondIntervalArray.Builder.html": {
    "href": "api/Apache.Arrow.MonthDayNanosecondIntervalArray.Builder.html",
    "title": "Class MonthDayNanosecondIntervalArray.Builder | Apache Arrow .NET",
    "summary": "Class MonthDayNanosecondIntervalArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class MonthDayNanosecondIntervalArray.Builder : PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>, IArrowArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>, IArrowArrayBuilder<MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>, IArrowArrayBuilder<MonthDayNanosecondIntervalArray>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder> MonthDayNanosecondIntervalArray.Builder Implements IArrowArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder> IArrowArrayBuilder<MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder> IArrowArrayBuilder<MonthDayNanosecondIntervalArray> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Instance PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.ValueBuffer PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.ValidityBuffer PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Length PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.NullCount PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Resize(int) PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Reserve(int) PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Append(MonthDayNanosecondInterval) PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Append(MonthDayNanosecondInterval?) PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Append(ReadOnlySpan<MonthDayNanosecondInterval>) PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.AppendRange(IEnumerable<MonthDayNanosecondInterval>) PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.AppendNull() PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Clear() PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Set(int, MonthDayNanosecondInterval) PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Swap(int, int) PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<MonthDayNanosecondInterval, MonthDayNanosecondIntervalArray, MonthDayNanosecondIntervalArray.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override MonthDayNanosecondIntervalArray Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns MonthDayNanosecondIntervalArray"
  },
  "api/Apache.Arrow.MonthDayNanosecondIntervalArray.html": {
    "href": "api/Apache.Arrow.MonthDayNanosecondIntervalArray.html",
    "title": "Class MonthDayNanosecondIntervalArray | Apache Arrow .NET",
    "summary": "Class MonthDayNanosecondIntervalArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public sealed class MonthDayNanosecondIntervalArray : IntervalArray<MonthDayNanosecondInterval>, IArrowArray, IDisposable, IReadOnlyList<MonthDayNanosecondInterval?>, IReadOnlyCollection<MonthDayNanosecondInterval?>, ICollection<MonthDayNanosecondInterval?>, IEnumerable<MonthDayNanosecondInterval?>, IEnumerable Inheritance object Array PrimitiveArray<MonthDayNanosecondInterval> IntervalArray<MonthDayNanosecondInterval> MonthDayNanosecondIntervalArray Implements IArrowArray IDisposable IReadOnlyList<MonthDayNanosecondInterval?> IReadOnlyCollection<MonthDayNanosecondInterval?> ICollection<MonthDayNanosecondInterval?> IEnumerable<MonthDayNanosecondInterval?> IEnumerable Inherited Members IntervalArray<MonthDayNanosecondInterval>.Type IntervalArray<MonthDayNanosecondInterval>.Unit PrimitiveArray<MonthDayNanosecondInterval>.ValueBuffer PrimitiveArray<MonthDayNanosecondInterval>.Values PrimitiveArray<MonthDayNanosecondInterval>.GetValue(int) PrimitiveArray<MonthDayNanosecondInterval>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MonthDayNanosecondIntervalArray(ArrayData) public MonthDayNanosecondIntervalArray(ArrayData data) Parameters data ArrayData MonthDayNanosecondIntervalArray(ArrowBuffer, ArrowBuffer, int, int, int) public MonthDayNanosecondIntervalArray(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.NullArray.Builder.html": {
    "href": "api/Apache.Arrow.NullArray.Builder.html",
    "title": "Class NullArray.Builder | Apache Arrow .NET",
    "summary": "Class NullArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class NullArray.Builder : IArrowArrayBuilder<NullArray, NullArray.Builder>, IArrowArrayBuilder<NullArray>, IArrowArrayBuilder Inheritance object NullArray.Builder Implements IArrowArrayBuilder<NullArray, NullArray.Builder> IArrowArrayBuilder<NullArray> IArrowArrayBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Properties Capacity public int Capacity { get; } Property Value int Length public int Length { get; } Property Value int NullCount public int NullCount { get; } Property Value int Methods AppendNull() public NullArray.Builder AppendNull() Returns NullArray.Builder Build(MemoryAllocator) public NullArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns NullArray Clear() public NullArray.Builder Clear() Returns NullArray.Builder Reserve(int) public NullArray.Builder Reserve(int capacity) Parameters capacity int Returns NullArray.Builder Resize(int) public NullArray.Builder Resize(int length) Parameters length int Returns NullArray.Builder"
  },
  "api/Apache.Arrow.NullArray.html": {
    "href": "api/Apache.Arrow.NullArray.html",
    "title": "Class NullArray | Apache Arrow .NET",
    "summary": "Class NullArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class NullArray : IArrowArray, IDisposable Inheritance object NullArray Implements IArrowArray IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NullArray(ArrayData) public NullArray(ArrayData data) Parameters data ArrayData NullArray(int) public NullArray(int length) Parameters length int Properties Data public ArrayData Data { get; } Property Value ArrayData Length public int Length { get; } Property Value int NullCount public int NullCount { get; } Property Value int Offset public int Offset { get; } Property Value int Methods Accept(IArrowArrayVisitor) public void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor Dispose() public void Dispose() IsNull(int) public bool IsNull(int index) Parameters index int Returns bool IsValid(int) public bool IsValid(int index) Parameters index int Returns bool"
  },
  "api/Apache.Arrow.PrimitiveArray-1.html": {
    "href": "api/Apache.Arrow.PrimitiveArray-1.html",
    "title": "Class PrimitiveArray<T> | Apache Arrow .NET",
    "summary": "Class PrimitiveArray<T> Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class PrimitiveArray<T> : Array, IArrowArray, IDisposable, IReadOnlyList<T?>, IReadOnlyCollection<T?>, ICollection<T?>, IEnumerable<T?>, IEnumerable where T : struct, IEquatable<T> Type Parameters T Inheritance object Array PrimitiveArray<T> Implements IArrowArray IDisposable IReadOnlyList<T?> IReadOnlyCollection<T?> ICollection<T?> IEnumerable<T?> IEnumerable Derived Date32Array Date64Array DoubleArray DurationArray FloatArray Int16Array Int32Array Int64Array Int8Array IntervalArray<T> Time32Array Time64Array TimestampArray UInt16Array UInt32Array UInt64Array UInt8Array Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.Accept(IArrowArrayVisitor) Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PrimitiveArray(ArrayData) protected PrimitiveArray(ArrayData data) Parameters data ArrayData Properties ValueBuffer public ArrowBuffer ValueBuffer { get; } Property Value ArrowBuffer Values public ReadOnlySpan<T> Values { get; } Property Value ReadOnlySpan<T> Methods GetValue(int) public T? GetValue(int index) Parameters index int Returns T? ToList(bool) public IList<T?> ToList(bool includeNulls = false) Parameters includeNulls bool Returns IList<T?>"
  },
  "api/Apache.Arrow.PrimitiveArrayBuilder-3.html": {
    "href": "api/Apache.Arrow.PrimitiveArrayBuilder-3.html",
    "title": "Class PrimitiveArrayBuilder<T, TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Class PrimitiveArrayBuilder<T, TArray, TBuilder> Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class PrimitiveArrayBuilder<T, TArray, TBuilder> : IArrowArrayBuilder<T, TArray, TBuilder>, IArrowArrayBuilder<TArray, TBuilder>, IArrowArrayBuilder<TArray>, IArrowArrayBuilder where T : struct where TArray : IArrowArray where TBuilder : class, IArrowArrayBuilder<TArray> Type Parameters T TArray TBuilder Inheritance object PrimitiveArrayBuilder<T, TArray, TBuilder> Implements IArrowArrayBuilder<T, TArray, TBuilder> IArrowArrayBuilder<TArray, TBuilder> IArrowArrayBuilder<TArray> IArrowArrayBuilder Derived DayTimeIntervalArray.Builder DoubleArray.Builder DurationArray.Builder FloatArray.Builder Int16Array.Builder Int32Array.Builder Int64Array.Builder Int8Array.Builder MonthDayNanosecondIntervalArray.Builder UInt16Array.Builder UInt32Array.Builder UInt64Array.Builder UInt8Array.Builder YearMonthIntervalArray.Builder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PrimitiveArrayBuilder() public PrimitiveArrayBuilder() Properties Instance protected TBuilder Instance { get; } Property Value TBuilder Length public int Length { get; } Property Value int NullCount protected int NullCount { get; } Property Value int ValidityBuffer protected ArrowBuffer.BitmapBuilder ValidityBuffer { get; } Property Value ArrowBuffer.BitmapBuilder ValueBuffer protected ArrowBuffer.Builder<T> ValueBuffer { get; } Property Value ArrowBuffer.Builder<T> Methods Append(T?) public TBuilder Append(T? value) Parameters value T? Returns TBuilder Append(ReadOnlySpan<T>) public TBuilder Append(ReadOnlySpan<T> span) Parameters span ReadOnlySpan<T> Returns TBuilder Append(T) public TBuilder Append(T value) Parameters value T Returns TBuilder AppendNull() public TBuilder AppendNull() Returns TBuilder AppendRange(IEnumerable<T>) public TBuilder AppendRange(IEnumerable<T> values) Parameters values IEnumerable<T> Returns TBuilder Build(ArrowBuffer, ArrowBuffer, int, int, int) protected abstract TArray Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns TArray Build(MemoryAllocator) public TArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns TArray Clear() public TBuilder Clear() Returns TBuilder Reserve(int) public TBuilder Reserve(int capacity) Parameters capacity int Returns TBuilder Resize(int) public TBuilder Resize(int length) Parameters length int Returns TBuilder Set(int, T) public TBuilder Set(int index, T value) Parameters index int value T Returns TBuilder Swap(int, int) public TBuilder Swap(int i, int j) Parameters i int j int Returns TBuilder"
  },
  "api/Apache.Arrow.PrimitiveArrayBuilder-4.html": {
    "href": "api/Apache.Arrow.PrimitiveArrayBuilder-4.html",
    "title": "Class PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Class PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder> Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder> : IArrowArrayBuilder<TFrom, TArray, TBuilder>, IArrowArrayBuilder<TArray, TBuilder>, IArrowArrayBuilder<TArray>, IArrowArrayBuilder where TTo : struct where TArray : IArrowArray where TBuilder : class, IArrowArrayBuilder<TArray> Type Parameters TFrom TTo TArray TBuilder Inheritance object PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder> Implements IArrowArrayBuilder<TFrom, TArray, TBuilder> IArrowArrayBuilder<TArray, TBuilder> IArrowArrayBuilder<TArray> IArrowArrayBuilder Derived TimestampArray.Builder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PrimitiveArrayBuilder(IArrowArrayBuilder<TTo, TArray, IArrowArrayBuilder<TArray>>) public PrimitiveArrayBuilder(IArrowArrayBuilder<TTo, TArray, IArrowArrayBuilder<TArray>> builder) Parameters builder IArrowArrayBuilder<TTo, TArray, IArrowArrayBuilder<TArray>> Properties ArrayBuilder protected IArrowArrayBuilder<TTo, TArray, IArrowArrayBuilder<TArray>> ArrayBuilder { get; } Property Value IArrowArrayBuilder<TTo, TArray, IArrowArrayBuilder<TArray>> Instance protected TBuilder Instance { get; } Property Value TBuilder Length public int Length { get; } Property Value int Methods Append(ReadOnlySpan<TFrom>) public TBuilder Append(ReadOnlySpan<TFrom> span) Parameters span ReadOnlySpan<TFrom> Returns TBuilder Append(TFrom) public TBuilder Append(TFrom value) Parameters value TFrom Returns TBuilder AppendNull() public TBuilder AppendNull() Returns TBuilder AppendRange(IEnumerable<TFrom>) public TBuilder AppendRange(IEnumerable<TFrom> values) Parameters values IEnumerable<TFrom> Returns TBuilder Build(MemoryAllocator) public TArray Build(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns TArray Clear() public TBuilder Clear() Returns TBuilder ConvertTo(TFrom) protected abstract TTo ConvertTo(TFrom value) Parameters value TFrom Returns TTo Reserve(int) public TBuilder Reserve(int capacity) Parameters capacity int Returns TBuilder Resize(int) public TBuilder Resize(int length) Parameters length int Returns TBuilder Set(int, TFrom) public TBuilder Set(int index, TFrom value) Parameters index int value TFrom Returns TBuilder Swap(int, int) public TBuilder Swap(int i, int j) Parameters i int j int Returns TBuilder"
  },
  "api/Apache.Arrow.RecordBatch.ArrayBuilder.html": {
    "href": "api/Apache.Arrow.RecordBatch.ArrayBuilder.html",
    "title": "Class RecordBatch.ArrayBuilder | Apache Arrow .NET",
    "summary": "Class RecordBatch.ArrayBuilder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class RecordBatch.ArrayBuilder Inheritance object RecordBatch.ArrayBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Binary(Action<Builder>) public BinaryArray Binary(Action<BinaryArray.Builder> action) Parameters action Action<BinaryArray.Builder> Returns BinaryArray Boolean(Action<Builder>) public BooleanArray Boolean(Action<BooleanArray.Builder> action) Parameters action Action<BooleanArray.Builder> Returns BooleanArray Date32(Action<Builder>) public Date32Array Date32(Action<Date32Array.Builder> action) Parameters action Action<Date32Array.Builder> Returns Date32Array Date64(Action<Builder>) public Date64Array Date64(Action<Date64Array.Builder> action) Parameters action Action<Date64Array.Builder> Returns Date64Array Decimal128(Decimal128Type, Action<Builder>) public Decimal128Array Decimal128(Decimal128Type type, Action<Decimal128Array.Builder> action) Parameters type Decimal128Type action Action<Decimal128Array.Builder> Returns Decimal128Array Decimal256(Decimal256Type, Action<Builder>) public Decimal256Array Decimal256(Decimal256Type type, Action<Decimal256Array.Builder> action) Parameters type Decimal256Type action Action<Decimal256Array.Builder> Returns Decimal256Array Decimal32(Decimal32Type, Action<Builder>) public Decimal32Array Decimal32(Decimal32Type type, Action<Decimal32Array.Builder> action) Parameters type Decimal32Type action Action<Decimal32Array.Builder> Returns Decimal32Array Decimal64(Decimal64Type, Action<Builder>) public Decimal64Array Decimal64(Decimal64Type type, Action<Decimal64Array.Builder> action) Parameters type Decimal64Type action Action<Decimal64Array.Builder> Returns Decimal64Array Double(Action<Builder>) public DoubleArray Double(Action<DoubleArray.Builder> action) Parameters action Action<DoubleArray.Builder> Returns DoubleArray Duration(DurationType, Action<Builder>) public DurationArray Duration(DurationType type, Action<DurationArray.Builder> action) Parameters type DurationType action Action<DurationArray.Builder> Returns DurationArray Float(Action<Builder>) public FloatArray Float(Action<FloatArray.Builder> action) Parameters action Action<FloatArray.Builder> Returns FloatArray Int16(Action<Builder>) public Int16Array Int16(Action<Int16Array.Builder> action) Parameters action Action<Int16Array.Builder> Returns Int16Array Int32(Action<Builder>) public Int32Array Int32(Action<Int32Array.Builder> action) Parameters action Action<Int32Array.Builder> Returns Int32Array Int64(Action<Builder>) public Int64Array Int64(Action<Int64Array.Builder> action) Parameters action Action<Int64Array.Builder> Returns Int64Array Int8(Action<Builder>) public Int8Array Int8(Action<Int8Array.Builder> action) Parameters action Action<Int8Array.Builder> Returns Int8Array String(Action<Builder>) public StringArray String(Action<StringArray.Builder> action) Parameters action Action<StringArray.Builder> Returns StringArray Time32(Time32Type, Action<Builder>) public Time32Array Time32(Time32Type type, Action<Time32Array.Builder> action) Parameters type Time32Type action Action<Time32Array.Builder> Returns Time32Array Time32(Action<Builder>) public Time32Array Time32(Action<Time32Array.Builder> action) Parameters action Action<Time32Array.Builder> Returns Time32Array Time64(Time64Type, Action<Builder>) public Time64Array Time64(Time64Type type, Action<Time64Array.Builder> action) Parameters type Time64Type action Action<Time64Array.Builder> Returns Time64Array Time64(Action<Builder>) public Time64Array Time64(Action<Time64Array.Builder> action) Parameters action Action<Time64Array.Builder> Returns Time64Array Timestamp(TimeUnit, TimeZoneInfo, Action<Builder>) public TimestampArray Timestamp(TimeUnit unit, TimeZoneInfo timezone, Action<TimestampArray.Builder> action) Parameters unit TimeUnit timezone TimeZoneInfo action Action<TimestampArray.Builder> Returns TimestampArray Timestamp(TimestampType, Action<Builder>) public TimestampArray Timestamp(TimestampType type, Action<TimestampArray.Builder> action) Parameters type TimestampType action Action<TimestampArray.Builder> Returns TimestampArray Timestamp(Action<Builder>) public TimestampArray Timestamp(Action<TimestampArray.Builder> action) Parameters action Action<TimestampArray.Builder> Returns TimestampArray UInt16(Action<Builder>) public UInt16Array UInt16(Action<UInt16Array.Builder> action) Parameters action Action<UInt16Array.Builder> Returns UInt16Array UInt32(Action<Builder>) public UInt32Array UInt32(Action<UInt32Array.Builder> action) Parameters action Action<UInt32Array.Builder> Returns UInt32Array UInt64(Action<Builder>) public UInt64Array UInt64(Action<UInt64Array.Builder> action) Parameters action Action<UInt64Array.Builder> Returns UInt64Array UInt8(Action<Builder>) public UInt8Array UInt8(Action<UInt8Array.Builder> action) Parameters action Action<UInt8Array.Builder> Returns UInt8Array"
  },
  "api/Apache.Arrow.RecordBatch.Builder.html": {
    "href": "api/Apache.Arrow.RecordBatch.Builder.html",
    "title": "Class RecordBatch.Builder | Apache Arrow .NET",
    "summary": "Class RecordBatch.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class RecordBatch.Builder Inheritance object RecordBatch.Builder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder(MemoryAllocator) public Builder(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Methods Append(RecordBatch) public RecordBatch.Builder Append(RecordBatch batch) Parameters batch RecordBatch Returns RecordBatch.Builder Append<TArray>(string, bool, IArrowArrayBuilder<TArray>) public RecordBatch.Builder Append<TArray>(string name, bool nullable, IArrowArrayBuilder<TArray> builder) where TArray : IArrowArray Parameters name string nullable bool builder IArrowArrayBuilder<TArray> Returns RecordBatch.Builder Type Parameters TArray Append<TArray>(string, bool, Func<ArrayBuilder, TArray>) public RecordBatch.Builder Append<TArray>(string name, bool nullable, Func<RecordBatch.ArrayBuilder, TArray> action) where TArray : IArrowArray Parameters name string nullable bool action Func<RecordBatch.ArrayBuilder, TArray> Returns RecordBatch.Builder Type Parameters TArray Append<TArray>(string, bool, TArray) public RecordBatch.Builder Append<TArray>(string name, bool nullable, TArray array) where TArray : IArrowArray Parameters name string nullable bool array TArray Returns RecordBatch.Builder Type Parameters TArray Build() public RecordBatch Build() Returns RecordBatch Clear() public RecordBatch.Builder Clear() Returns RecordBatch.Builder"
  },
  "api/Apache.Arrow.RecordBatch.html": {
    "href": "api/Apache.Arrow.RecordBatch.html",
    "title": "Class RecordBatch | Apache Arrow .NET",
    "summary": "Class RecordBatch Namespace Apache.Arrow Assembly Apache.Arrow.dll public class RecordBatch : IArrowRecord, IArrowArray, IDisposable Inheritance object RecordBatch Implements IArrowRecord IArrowArray IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RecordBatch(Schema, IEnumerable<IArrowArray>, int) public RecordBatch(Schema schema, IEnumerable<IArrowArray> data, int length) Parameters schema Schema data IEnumerable<IArrowArray> length int Properties Arrays public IEnumerable<IArrowArray> Arrays { get; } Property Value IEnumerable<IArrowArray> ColumnCount public int ColumnCount { get; } Property Value int Length public int Length { get; } Property Value int Schema public Schema Schema { get; } Property Value Schema Methods Accept(IArrowArrayVisitor) public void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor Clone(MemoryAllocator) public RecordBatch Clone(MemoryAllocator allocator = null) Parameters allocator MemoryAllocator Returns RecordBatch Column(int) public IArrowArray Column(int i) Parameters i int Returns IArrowArray Column(string) public IArrowArray Column(string columnName) Parameters columnName string Returns IArrowArray Column(string, IEqualityComparer<string>) public IArrowArray Column(string columnName, IEqualityComparer<string> comparer) Parameters columnName string comparer IEqualityComparer<string> Returns IArrowArray Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool Slice(int, int) public RecordBatch Slice(int offset, int length) Parameters offset int length int Returns RecordBatch ToString() public override string ToString() Returns string"
  },
  "api/Apache.Arrow.Scalars.BinaryView.html": {
    "href": "api/Apache.Arrow.Scalars.BinaryView.html",
    "title": "Struct BinaryView | Apache Arrow .NET",
    "summary": "Struct BinaryView Namespace Apache.Arrow.Scalars Assembly Apache.Arrow.dll public struct BinaryView : IEquatable<BinaryView> Implements IEquatable<BinaryView> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors BinaryView(int, ReadOnlySpan<byte>, int, int) public BinaryView(int length, ReadOnlySpan<byte> prefix, int bufferIndex, int bufferOffset) Parameters length int prefix ReadOnlySpan<byte> bufferIndex int bufferOffset int BinaryView(ReadOnlySpan<byte>) public BinaryView(ReadOnlySpan<byte> inline) Parameters inline ReadOnlySpan<byte> Fields Length public readonly int Length Field Value int MaxInlineLength public const int MaxInlineLength = 12 Field Value int PrefixLength public const int PrefixLength = 4 Field Value int Properties BufferIndex public int BufferIndex { get; } Property Value int BufferOffset public int BufferOffset { get; } Property Value int Bytes public ReadOnlySpan<byte> Bytes { get; } Property Value ReadOnlySpan<byte> IsInline public bool IsInline { get; } Property Value bool Methods Equals(BinaryView) public bool Equals(BinaryView other) Parameters other BinaryView Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Apache.Arrow.Scalars.DayTimeInterval.html": {
    "href": "api/Apache.Arrow.Scalars.DayTimeInterval.html",
    "title": "Struct DayTimeInterval | Apache Arrow .NET",
    "summary": "Struct DayTimeInterval Namespace Apache.Arrow.Scalars Assembly Apache.Arrow.dll public struct DayTimeInterval : IEquatable<DayTimeInterval> Implements IEquatable<DayTimeInterval> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors DayTimeInterval(int, int) public DayTimeInterval(int days, int milliseconds) Parameters days int milliseconds int Fields Days public readonly int Days Field Value int Milliseconds public readonly int Milliseconds Field Value int Methods Equals(DayTimeInterval) public bool Equals(DayTimeInterval interval) Parameters interval DayTimeInterval Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int Operators operator +(DayTimeInterval, DateTime) public static DateTime operator +(DayTimeInterval interval, DateTime dateTime) Parameters interval DayTimeInterval dateTime DateTime Returns DateTime operator +(DayTimeInterval, DateTimeOffset) public static DateTimeOffset operator +(DayTimeInterval interval, DateTimeOffset dateTime) Parameters interval DayTimeInterval dateTime DateTimeOffset Returns DateTimeOffset operator +(DateTime, DayTimeInterval) public static DateTime operator +(DateTime dateTime, DayTimeInterval interval) Parameters dateTime DateTime interval DayTimeInterval Returns DateTime operator +(DateTimeOffset, DayTimeInterval) public static DateTimeOffset operator +(DateTimeOffset dateTime, DayTimeInterval interval) Parameters dateTime DateTimeOffset interval DayTimeInterval Returns DateTimeOffset operator -(DateTime, DayTimeInterval) public static DateTime operator -(DateTime dateTime, DayTimeInterval interval) Parameters dateTime DateTime interval DayTimeInterval Returns DateTime operator -(DateTimeOffset, DayTimeInterval) public static DateTimeOffset operator -(DateTimeOffset dateTime, DayTimeInterval interval) Parameters dateTime DateTimeOffset interval DayTimeInterval Returns DateTimeOffset"
  },
  "api/Apache.Arrow.Scalars.MonthDayNanosecondInterval.html": {
    "href": "api/Apache.Arrow.Scalars.MonthDayNanosecondInterval.html",
    "title": "Struct MonthDayNanosecondInterval | Apache Arrow .NET",
    "summary": "Struct MonthDayNanosecondInterval Namespace Apache.Arrow.Scalars Assembly Apache.Arrow.dll public struct MonthDayNanosecondInterval : IEquatable<MonthDayNanosecondInterval> Implements IEquatable<MonthDayNanosecondInterval> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MonthDayNanosecondInterval(int, int, long) public MonthDayNanosecondInterval(int months, int days, long nanoseconds) Parameters months int days int nanoseconds long Fields Days public readonly int Days Field Value int Months public readonly int Months Field Value int Nanoseconds public readonly long Nanoseconds Field Value long Methods Equals(MonthDayNanosecondInterval) public bool Equals(MonthDayNanosecondInterval interval) Parameters interval MonthDayNanosecondInterval Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int Operators operator +(MonthDayNanosecondInterval, DateTime) public static DateTime operator +(MonthDayNanosecondInterval interval, DateTime dateTime) Parameters interval MonthDayNanosecondInterval dateTime DateTime Returns DateTime operator +(MonthDayNanosecondInterval, DateTimeOffset) public static DateTimeOffset operator +(MonthDayNanosecondInterval interval, DateTimeOffset dateTime) Parameters interval MonthDayNanosecondInterval dateTime DateTimeOffset Returns DateTimeOffset operator +(DateTime, MonthDayNanosecondInterval) public static DateTime operator +(DateTime dateTime, MonthDayNanosecondInterval interval) Parameters dateTime DateTime interval MonthDayNanosecondInterval Returns DateTime operator +(DateTimeOffset, MonthDayNanosecondInterval) public static DateTimeOffset operator +(DateTimeOffset dateTime, MonthDayNanosecondInterval interval) Parameters dateTime DateTimeOffset interval MonthDayNanosecondInterval Returns DateTimeOffset operator -(DateTime, MonthDayNanosecondInterval) public static DateTime operator -(DateTime dateTime, MonthDayNanosecondInterval interval) Parameters dateTime DateTime interval MonthDayNanosecondInterval Returns DateTime operator -(DateTimeOffset, MonthDayNanosecondInterval) public static DateTimeOffset operator -(DateTimeOffset dateTime, MonthDayNanosecondInterval interval) Parameters dateTime DateTimeOffset interval MonthDayNanosecondInterval Returns DateTimeOffset"
  },
  "api/Apache.Arrow.Scalars.YearMonthInterval.html": {
    "href": "api/Apache.Arrow.Scalars.YearMonthInterval.html",
    "title": "Struct YearMonthInterval | Apache Arrow .NET",
    "summary": "Struct YearMonthInterval Namespace Apache.Arrow.Scalars Assembly Apache.Arrow.dll public struct YearMonthInterval : IEquatable<YearMonthInterval> Implements IEquatable<YearMonthInterval> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors YearMonthInterval(int) public YearMonthInterval(int totalMonths) Parameters totalMonths int YearMonthInterval(int, int) public YearMonthInterval(int years, int months) Parameters years int months int Fields Months public readonly int Months Field Value int Methods Equals(YearMonthInterval) public bool Equals(YearMonthInterval interval) Parameters interval YearMonthInterval Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int Operators operator +(YearMonthInterval, DateTime) public static DateTime operator +(YearMonthInterval interval, DateTime dateTime) Parameters interval YearMonthInterval dateTime DateTime Returns DateTime operator +(YearMonthInterval, DateTimeOffset) public static DateTimeOffset operator +(YearMonthInterval interval, DateTimeOffset dateTime) Parameters interval YearMonthInterval dateTime DateTimeOffset Returns DateTimeOffset operator +(DateTime, YearMonthInterval) public static DateTime operator +(DateTime dateTime, YearMonthInterval interval) Parameters dateTime DateTime interval YearMonthInterval Returns DateTime operator +(DateTimeOffset, YearMonthInterval) public static DateTimeOffset operator +(DateTimeOffset dateTime, YearMonthInterval interval) Parameters dateTime DateTimeOffset interval YearMonthInterval Returns DateTimeOffset operator -(DateTime, YearMonthInterval) public static DateTime operator -(DateTime dateTime, YearMonthInterval interval) Parameters dateTime DateTime interval YearMonthInterval Returns DateTime operator -(DateTimeOffset, YearMonthInterval) public static DateTimeOffset operator -(DateTimeOffset dateTime, YearMonthInterval interval) Parameters dateTime DateTimeOffset interval YearMonthInterval Returns DateTimeOffset"
  },
  "api/Apache.Arrow.Scalars.html": {
    "href": "api/Apache.Arrow.Scalars.html",
    "title": "Namespace Apache.Arrow.Scalars | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Scalars Structs BinaryView DayTimeInterval MonthDayNanosecondInterval YearMonthInterval"
  },
  "api/Apache.Arrow.Schema.Builder.html": {
    "href": "api/Apache.Arrow.Schema.Builder.html",
    "title": "Class Schema.Builder | Apache Arrow .NET",
    "summary": "Class Schema.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Schema.Builder Inheritance object Schema.Builder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Methods Build() public Schema Build() Returns Schema Clear() public Schema.Builder Clear() Returns Schema.Builder Field(Field) public Schema.Builder Field(Field field) Parameters field Field Returns Schema.Builder Field(Action<Builder>) public Schema.Builder Field(Action<Field.Builder> fieldBuilderAction) Parameters fieldBuilderAction Action<Field.Builder> Returns Schema.Builder Metadata(IEnumerable<KeyValuePair<string, string>>) public Schema.Builder Metadata(IEnumerable<KeyValuePair<string, string>> dictionary) Parameters dictionary IEnumerable<KeyValuePair<string, string>> Returns Schema.Builder Metadata(string, string) public Schema.Builder Metadata(string key, string value) Parameters key string value string Returns Schema.Builder"
  },
  "api/Apache.Arrow.Schema.html": {
    "href": "api/Apache.Arrow.Schema.html",
    "title": "Class Schema | Apache Arrow .NET",
    "summary": "Class Schema Namespace Apache.Arrow Assembly Apache.Arrow.dll public class Schema : IRecordType, IArrowType Inheritance object Schema Implements IRecordType IArrowType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods SchemaExtension.ToByteString(Schema) ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors Schema(IEnumerable<Field>, IEnumerable<KeyValuePair<string, string>>) public Schema(IEnumerable<Field> fields, IEnumerable<KeyValuePair<string, string>> metadata) Parameters fields IEnumerable<Field> metadata IEnumerable<KeyValuePair<string, string>> Properties Fields [Obsolete(\"Use `FieldsList` or `FieldsLookup` instead\")] public IReadOnlyDictionary<string, Field> Fields { get; } Property Value IReadOnlyDictionary<string, Field> FieldsList public IReadOnlyList<Field> FieldsList { get; } Property Value IReadOnlyList<Field> FieldsLookup public ILookup<string, Field> FieldsLookup { get; } Property Value ILookup<string, Field> HasMetadata public bool HasMetadata { get; } Property Value bool this[int] public Field this[int index] { get; } Parameters index int Property Value Field this[string] public Field this[string name] { get; } Parameters name string Property Value Field Metadata public IReadOnlyDictionary<string, string> Metadata { get; } Property Value IReadOnlyDictionary<string, string> Methods Accept(IArrowTypeVisitor) public void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor GetFieldByIndex(int) public Field GetFieldByIndex(int i) Parameters i int Returns Field GetFieldByName(string) public Field GetFieldByName(string name) Parameters name string Returns Field GetFieldIndex(string, IEqualityComparer<string>) public int GetFieldIndex(string name, IEqualityComparer<string> comparer = null) Parameters name string comparer IEqualityComparer<string> Returns int GetFieldIndex(string, StringComparer) public int GetFieldIndex(string name, StringComparer comparer) Parameters name string comparer StringComparer Returns int InsertField(int, Field) public Schema InsertField(int fieldIndex, Field newField) Parameters fieldIndex int newField Field Returns Schema RemoveField(int) public Schema RemoveField(int fieldIndex) Parameters fieldIndex int Returns Schema SetField(int, Field) public Schema SetField(int fieldIndex, Field newField) Parameters fieldIndex int newField Field Returns Schema ToString() public override string ToString() Returns string"
  },
  "api/Apache.Arrow.SpanExtensions.html": {
    "href": "api/Apache.Arrow.SpanExtensions.html",
    "title": "Class SpanExtensions | Apache Arrow .NET",
    "summary": "Class SpanExtensions Namespace Apache.Arrow Assembly Apache.Arrow.dll public static class SpanExtensions Inheritance object SpanExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CastTo<T>(ReadOnlySpan<byte>) public static ReadOnlySpan<T> CastTo<T>(this ReadOnlySpan<byte> span) where T : struct Parameters span ReadOnlySpan<byte> Returns ReadOnlySpan<T> Type Parameters T CastTo<T>(Span<byte>) public static Span<T> CastTo<T>(this Span<byte> span) where T : struct Parameters span Span<byte> Returns Span<T> Type Parameters T"
  },
  "api/Apache.Arrow.SparseUnionArray.html": {
    "href": "api/Apache.Arrow.SparseUnionArray.html",
    "title": "Class SparseUnionArray | Apache Arrow .NET",
    "summary": "Class SparseUnionArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class SparseUnionArray : UnionArray, IArrowArray, IDisposable Inheritance object UnionArray SparseUnionArray Implements IArrowArray IDisposable Inherited Members UnionArray._fields UnionArray.Fields UnionArray.Data UnionArray.Type UnionArray.Mode UnionArray.TypeBuffer UnionArray.TypeIds UnionArray.Length UnionArray.Offset UnionArray.NullCount UnionArray.IsValid(int) UnionArray.IsNull(int) UnionArray.Create(ArrayData) UnionArray.Accept(IArrowArrayVisitor) UnionArray.Dispose() UnionArray.Dispose(bool) UnionArray.ValidateMode(UnionMode, UnionMode) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SparseUnionArray(ArrayData) public SparseUnionArray(ArrayData data) Parameters data ArrayData SparseUnionArray(IArrowType, int, IEnumerable<IArrowArray>, ArrowBuffer, int, int) public SparseUnionArray(IArrowType dataType, int length, IEnumerable<IArrowArray> children, ArrowBuffer typeIds, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int children IEnumerable<IArrowArray> typeIds ArrowBuffer nullCount int offset int Methods FieldIsValid(IArrowArray, int) protected override bool FieldIsValid(IArrowArray fieldArray, int index) Parameters fieldArray IArrowArray index int Returns bool"
  },
  "api/Apache.Arrow.StringArray.Builder.html": {
    "href": "api/Apache.Arrow.StringArray.Builder.html",
    "title": "Class StringArray.Builder | Apache Arrow .NET",
    "summary": "Class StringArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class StringArray.Builder : BinaryArray.BuilderBase<StringArray, StringArray.Builder>, IArrowArrayBuilder<byte, StringArray, StringArray.Builder>, IArrowArrayBuilder<StringArray, StringArray.Builder>, IArrowArrayBuilder<StringArray>, IArrowArrayBuilder Inheritance object BinaryArray.BuilderBase<StringArray, StringArray.Builder> StringArray.Builder Implements IArrowArrayBuilder<byte, StringArray, StringArray.Builder> IArrowArrayBuilder<StringArray, StringArray.Builder> IArrowArrayBuilder<StringArray> IArrowArrayBuilder Inherited Members BinaryArray.BuilderBase<StringArray, StringArray.Builder>.DataType BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Instance BinaryArray.BuilderBase<StringArray, StringArray.Builder>.ValueOffsets BinaryArray.BuilderBase<StringArray, StringArray.Builder>.ValueBuffer BinaryArray.BuilderBase<StringArray, StringArray.Builder>.ValidityBuffer BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Offset BinaryArray.BuilderBase<StringArray, StringArray.Builder>.NullCount BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Build(ArrayData) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Length BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Build(MemoryAllocator) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.AppendNull() BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Append(byte) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Append(ReadOnlySpan<byte>) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Append(IEnumerable<byte>) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.AppendRange(IEnumerable<byte>) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.AppendRange(IEnumerable<byte[]>) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Reserve(int) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Resize(int) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Swap(int, int) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Set(int, byte) BinaryArray.BuilderBase<StringArray, StringArray.Builder>.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Methods Append(string, Encoding) public StringArray.Builder Append(string value, Encoding encoding = null) Parameters value string encoding Encoding Returns StringArray.Builder AppendRange(IEnumerable<string>, Encoding) public StringArray.Builder AppendRange(IEnumerable<string> values, Encoding encoding = null) Parameters values IEnumerable<string> encoding Encoding Returns StringArray.Builder Build(ArrayData) protected override StringArray Build(ArrayData data) Parameters data ArrayData Returns StringArray"
  },
  "api/Apache.Arrow.StringArray.html": {
    "href": "api/Apache.Arrow.StringArray.html",
    "title": "Class StringArray | Apache Arrow .NET",
    "summary": "Class StringArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class StringArray : BinaryArray, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, ICollection<byte[]>, IEnumerable<byte[]>, IReadOnlyList<string>, IReadOnlyCollection<string>, ICollection<string>, IEnumerable<string>, IEnumerable Inheritance object Array BinaryArray StringArray Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> ICollection<byte[]> IEnumerable<byte[]> IReadOnlyList<string> IReadOnlyCollection<string> ICollection<string> IEnumerable<string> IEnumerable Inherited Members BinaryArray.ValueOffsetsBuffer BinaryArray.ValueBuffer BinaryArray.ValueOffsets BinaryArray.Values BinaryArray.GetValueOffset(int) BinaryArray.GetValueLength(int) BinaryArray.GetBytes(int) BinaryArray.GetBytes(int, out bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StringArray(ArrayData) public StringArray(ArrayData data) Parameters data ArrayData StringArray(int, ArrowBuffer, ArrowBuffer, ArrowBuffer, int, int) public StringArray(int length, ArrowBuffer valueOffsetsBuffer, ArrowBuffer dataBuffer, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters length int valueOffsetsBuffer ArrowBuffer dataBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer nullCount int offset int Fields DefaultEncoding public static readonly Encoding DefaultEncoding Field Value Encoding Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetString(int, Encoding) Get the string value at the given index public string GetString(int index, Encoding encoding = null) Parameters index int Input index encoding Encoding Optional: the string encoding, default is UTF8 Returns string The string object at the given index IsMaterialized(Encoding) Check if the array has been materialized for the given encoding public bool IsMaterialized(Encoding encoding = null) Parameters encoding Encoding Optional: the string encoding, default is UTF8 Returns bool True of false whether the array has been materialized Materialize(Encoding) Materialize the array for the given encoding to accelerate the string access public void Materialize(Encoding encoding = null) Parameters encoding Encoding Optional: the string encoding, default is UTF8 Remarks This method is not thread safe when it is called in parallel with GetString(int, Encoding) or Materialize(Encoding)."
  },
  "api/Apache.Arrow.StringViewArray.Builder.html": {
    "href": "api/Apache.Arrow.StringViewArray.Builder.html",
    "title": "Class StringViewArray.Builder | Apache Arrow .NET",
    "summary": "Class StringViewArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class StringViewArray.Builder : BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>, IArrowArrayBuilder<byte, StringViewArray, StringViewArray.Builder>, IArrowArrayBuilder<StringViewArray, StringViewArray.Builder>, IArrowArrayBuilder<StringViewArray>, IArrowArrayBuilder Inheritance object BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder> StringViewArray.Builder Implements IArrowArrayBuilder<byte, StringViewArray, StringViewArray.Builder> IArrowArrayBuilder<StringViewArray, StringViewArray.Builder> IArrowArrayBuilder<StringViewArray> IArrowArrayBuilder Inherited Members BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.DataType BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Instance BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.BinaryViews BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.ValueBuffer BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.ValidityBuffer BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.NullCount BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Build(ArrayData) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Length BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Build(MemoryAllocator) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.AppendNull() BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Append(byte) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Append(ReadOnlySpan<byte>) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.AppendRange(IEnumerable<byte>) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.AppendRange(IEnumerable<byte[]>) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Reserve(int) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Resize(int) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Swap(int, int) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Set(int, byte) BinaryViewArray.BuilderBase<StringViewArray, StringViewArray.Builder>.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Methods Append(string, Encoding) public StringViewArray.Builder Append(string value, Encoding encoding = null) Parameters value string encoding Encoding Returns StringViewArray.Builder AppendRange(IEnumerable<string>, Encoding) public StringViewArray.Builder AppendRange(IEnumerable<string> values, Encoding encoding = null) Parameters values IEnumerable<string> encoding Encoding Returns StringViewArray.Builder Build(ArrayData) protected override StringViewArray Build(ArrayData data) Parameters data ArrayData Returns StringViewArray"
  },
  "api/Apache.Arrow.StringViewArray.html": {
    "href": "api/Apache.Arrow.StringViewArray.html",
    "title": "Class StringViewArray | Apache Arrow .NET",
    "summary": "Class StringViewArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class StringViewArray : BinaryViewArray, IArrowArray, IDisposable, IReadOnlyList<byte[]>, IReadOnlyCollection<byte[]>, IEnumerable<byte[]>, IReadOnlyList<string>, IReadOnlyCollection<string>, IEnumerable<string>, IEnumerable Inheritance object Array BinaryViewArray StringViewArray Implements IArrowArray IDisposable IReadOnlyList<byte[]> IReadOnlyCollection<byte[]> IEnumerable<byte[]> IReadOnlyList<string> IReadOnlyCollection<string> IEnumerable<string> IEnumerable Inherited Members BinaryViewArray.ViewsBuffer BinaryViewArray.DataBufferCount BinaryViewArray.DataBuffer(int) BinaryViewArray.Views BinaryViewArray.GetValueLength(int) BinaryViewArray.GetBytes(int) BinaryViewArray.GetBytes(int, out bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StringViewArray(ArrayData) public StringViewArray(ArrayData data) Parameters data ArrayData StringViewArray(int, ArrowBuffer, ArrowBuffer, ArrowBuffer, int, int) public StringViewArray(int length, ArrowBuffer valueOffsetsBuffer, ArrowBuffer dataBuffer, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters length int valueOffsetsBuffer ArrowBuffer dataBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer nullCount int offset int Fields DefaultEncoding public static readonly Encoding DefaultEncoding Field Value Encoding Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetString(int, Encoding) public string GetString(int index, Encoding encoding = null) Parameters index int encoding Encoding Returns string"
  },
  "api/Apache.Arrow.StructArray.html": {
    "href": "api/Apache.Arrow.StructArray.html",
    "title": "Class StructArray | Apache Arrow .NET",
    "summary": "Class StructArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class StructArray : Array, IArrowRecord, IArrowArray, IDisposable Inheritance object Array StructArray Implements IArrowRecord IArrowArray IDisposable Inherited Members Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StructArray(ArrayData) public StructArray(ArrayData data) Parameters data ArrayData StructArray(IArrowType, int, IEnumerable<IArrowArray>, ArrowBuffer, int, int) public StructArray(IArrowType dataType, int length, IEnumerable<IArrowArray> children, ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0) Parameters dataType IArrowType length int children IEnumerable<IArrowArray> nullBitmapBuffer ArrowBuffer nullCount int offset int Properties Fields public IReadOnlyList<IArrowArray> Fields { get; } Property Value IReadOnlyList<IArrowArray> Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.Table.html": {
    "href": "api/Apache.Arrow.Table.html",
    "title": "Class Table | Apache Arrow .NET",
    "summary": "Class Table Namespace Apache.Arrow Assembly Apache.Arrow.dll A logical Table class to represent a dataset as a sequence of Columns public class Table Inheritance object Table Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Table() public Table() Table(Schema, IList<Column>) public Table(Schema schema, IList<Column> columns) Parameters schema Schema columns IList<Column> Properties ColumnCount public int ColumnCount { get; } Property Value int RowCount public long RowCount { get; } Property Value long Schema public Schema Schema { get; } Property Value Schema Methods Column(int) public Column Column(int columnIndex) Parameters columnIndex int Returns Column InsertColumn(int, Column) public Table InsertColumn(int columnIndex, Column column) Parameters columnIndex int column Column Returns Table RemoveColumn(int) public Table RemoveColumn(int columnIndex) Parameters columnIndex int Returns Table SetColumn(int, Column) public Table SetColumn(int columnIndex, Column column) Parameters columnIndex int column Column Returns Table TableFromRecordBatches(Schema, IList<RecordBatch>) public static Table TableFromRecordBatches(Schema schema, IList<RecordBatch> recordBatches) Parameters schema Schema recordBatches IList<RecordBatch> Returns Table ToString() public override string ToString() Returns string"
  },
  "api/Apache.Arrow.Time32Array.Builder.html": {
    "href": "api/Apache.Arrow.Time32Array.Builder.html",
    "title": "Class Time32Array.Builder | Apache Arrow .NET",
    "summary": "Class Time32Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll The Time32Array.Builder class can be used to fluently build Time32Array objects. public class Time32Array.Builder : TimeArrayBuilder<int, Time32Array, Time32Array.Builder>, IArrowArrayBuilder<Time32Array, Time32Array.Builder>, IArrowArrayBuilder<Time32Array>, IArrowArrayBuilder Inheritance object DelegatingArrayBuilder<int, Time32Array, Time32Array.Builder> TimeArrayBuilder<int, Time32Array, Time32Array.Builder> Time32Array.Builder Implements IArrowArrayBuilder<Time32Array, Time32Array.Builder> IArrowArrayBuilder<Time32Array> IArrowArrayBuilder Inherited Members TimeArrayBuilder<int, Time32Array, Time32Array.Builder>.Append(int) TimeArrayBuilder<int, Time32Array, Time32Array.Builder>.Append(ReadOnlySpan<int>) TimeArrayBuilder<int, Time32Array, Time32Array.Builder>.AppendNull() TimeArrayBuilder<int, Time32Array, Time32Array.Builder>.AppendRange(IEnumerable<int>) TimeArrayBuilder<int, Time32Array, Time32Array.Builder>.Set(int, int) TimeArrayBuilder<int, Time32Array, Time32Array.Builder>.Swap(int, int) DelegatingArrayBuilder<int, Time32Array, Time32Array.Builder>.InnerBuilder DelegatingArrayBuilder<int, Time32Array, Time32Array.Builder>.Length DelegatingArrayBuilder<int, Time32Array, Time32Array.Builder>.Build(MemoryAllocator) DelegatingArrayBuilder<int, Time32Array, Time32Array.Builder>.Reserve(int) DelegatingArrayBuilder<int, Time32Array, Time32Array.Builder>.Resize(int) DelegatingArrayBuilder<int, Time32Array, Time32Array.Builder>.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Builder(Time32Type) Construct a new instance of the Time32Array.Builder class. public Builder(Time32Type type) Parameters type Time32Type Builder(TimeUnit) public Builder(TimeUnit unit) Parameters unit TimeUnit"
  },
  "api/Apache.Arrow.Time32Array.html": {
    "href": "api/Apache.Arrow.Time32Array.html",
    "title": "Class Time32Array | Apache Arrow .NET",
    "summary": "Class Time32Array Namespace Apache.Arrow Assembly Apache.Arrow.dll The Time32Array class holds an array of int, where each value is stored as the number of seconds/ milliseconds (depending on the Time32Type) since midnight. public class Time32Array : PrimitiveArray<int>, IArrowArray, IDisposable, IReadOnlyList<int?>, IReadOnlyCollection<int?>, ICollection<int?>, IEnumerable<int?>, IEnumerable Inheritance object Array PrimitiveArray<int> Time32Array Implements IArrowArray IDisposable IReadOnlyList<int?> IReadOnlyCollection<int?> ICollection<int?> IEnumerable<int?> IEnumerable Inherited Members PrimitiveArray<int>.ValueBuffer PrimitiveArray<int>.Values PrimitiveArray<int>.GetValue(int) PrimitiveArray<int>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Time32Array(ArrayData) public Time32Array(ArrayData data) Parameters data ArrayData Time32Array(Time32Type, ArrowBuffer, ArrowBuffer, int, int, int) public Time32Array(Time32Type type, ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters type Time32Type valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetMilliSeconds(int) Get the time at the specified index as milliseconds public int? GetMilliSeconds(int index) Parameters index int Index at which to get the time. Returns int? Returns an int, or null if there is no object at that index. GetSeconds(int) Get the time at the specified index as seconds public int? GetSeconds(int index) Parameters index int Index at which to get the time. Returns int? Returns an int, or null if there is no object at that index."
  },
  "api/Apache.Arrow.Time64Array.Builder.html": {
    "href": "api/Apache.Arrow.Time64Array.Builder.html",
    "title": "Class Time64Array.Builder | Apache Arrow .NET",
    "summary": "Class Time64Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll The Time64Array.Builder class can be used to fluently build Time64Array objects. public class Time64Array.Builder : TimeArrayBuilder<long, Time64Array, Time64Array.Builder>, IArrowArrayBuilder<Time64Array, Time64Array.Builder>, IArrowArrayBuilder<Time64Array>, IArrowArrayBuilder Inheritance object DelegatingArrayBuilder<long, Time64Array, Time64Array.Builder> TimeArrayBuilder<long, Time64Array, Time64Array.Builder> Time64Array.Builder Implements IArrowArrayBuilder<Time64Array, Time64Array.Builder> IArrowArrayBuilder<Time64Array> IArrowArrayBuilder Inherited Members TimeArrayBuilder<long, Time64Array, Time64Array.Builder>.Append(long) TimeArrayBuilder<long, Time64Array, Time64Array.Builder>.Append(ReadOnlySpan<long>) TimeArrayBuilder<long, Time64Array, Time64Array.Builder>.AppendNull() TimeArrayBuilder<long, Time64Array, Time64Array.Builder>.AppendRange(IEnumerable<long>) TimeArrayBuilder<long, Time64Array, Time64Array.Builder>.Set(int, long) TimeArrayBuilder<long, Time64Array, Time64Array.Builder>.Swap(int, int) DelegatingArrayBuilder<long, Time64Array, Time64Array.Builder>.InnerBuilder DelegatingArrayBuilder<long, Time64Array, Time64Array.Builder>.Length DelegatingArrayBuilder<long, Time64Array, Time64Array.Builder>.Build(MemoryAllocator) DelegatingArrayBuilder<long, Time64Array, Time64Array.Builder>.Reserve(int) DelegatingArrayBuilder<long, Time64Array, Time64Array.Builder>.Resize(int) DelegatingArrayBuilder<long, Time64Array, Time64Array.Builder>.Clear() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Builder(Time64Type) Construct a new instance of the Time64Array.Builder class. public Builder(Time64Type type) Parameters type Time64Type Builder(TimeUnit) public Builder(TimeUnit unit) Parameters unit TimeUnit"
  },
  "api/Apache.Arrow.Time64Array.html": {
    "href": "api/Apache.Arrow.Time64Array.html",
    "title": "Class Time64Array | Apache Arrow .NET",
    "summary": "Class Time64Array Namespace Apache.Arrow Assembly Apache.Arrow.dll The Time64Array class holds an array of long, where each value is stored as the number of microseconds/nanoseconds (depending on the Time64Type) since midnight. public class Time64Array : PrimitiveArray<long>, IArrowArray, IDisposable, IReadOnlyList<long?>, IReadOnlyCollection<long?>, ICollection<long?>, IEnumerable<long?>, IEnumerable Inheritance object Array PrimitiveArray<long> Time64Array Implements IArrowArray IDisposable IReadOnlyList<long?> IReadOnlyCollection<long?> ICollection<long?> IEnumerable<long?> IEnumerable Inherited Members PrimitiveArray<long>.ValueBuffer PrimitiveArray<long>.Values PrimitiveArray<long>.GetValue(int) PrimitiveArray<long>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Time64Array(ArrayData) public Time64Array(ArrayData data) Parameters data ArrayData Time64Array(Time64Type, ArrowBuffer, ArrowBuffer, int, int, int) public Time64Array(Time64Type type, ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters type Time64Type valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetMicroSeconds(int) Get the time at the specified index as microseconds public long? GetMicroSeconds(int index) Parameters index int Index at which to get the time. Returns long? Returns a long, or null if there is no object at that index. GetNanoSeconds(int) Get the time at the specified index as nanoseconds public long? GetNanoSeconds(int index) Parameters index int Index at which to get the time. Returns long? Returns a long, or null if there is no object at that index."
  },
  "api/Apache.Arrow.TimeArrayBuilder-3.html": {
    "href": "api/Apache.Arrow.TimeArrayBuilder-3.html",
    "title": "Class TimeArrayBuilder<TUnderlying, TArray, TBuilder> | Apache Arrow .NET",
    "summary": "Class TimeArrayBuilder<TUnderlying, TArray, TBuilder> Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class TimeArrayBuilder<TUnderlying, TArray, TBuilder> : DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>, IArrowArrayBuilder<TArray, TBuilder>, IArrowArrayBuilder<TArray>, IArrowArrayBuilder where TArray : IArrowArray where TBuilder : class, IArrowArrayBuilder<TArray> Type Parameters TUnderlying TArray TBuilder Inheritance object DelegatingArrayBuilder<TUnderlying, TArray, TBuilder> TimeArrayBuilder<TUnderlying, TArray, TBuilder> Implements IArrowArrayBuilder<TArray, TBuilder> IArrowArrayBuilder<TArray> IArrowArrayBuilder Derived Time32Array.Builder Time64Array.Builder Inherited Members DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.InnerBuilder DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Length DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Build(MemoryAllocator) DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Reserve(int) DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Resize(int) DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.Clear() DelegatingArrayBuilder<TUnderlying, TArray, TBuilder>.AppendNull() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TimeArrayBuilder(IArrowArrayBuilder<TUnderlying, TArray, IArrowArrayBuilder<TArray>>) Construct a new instance of the TimeArrayBuilder<TUnderlying, TArray, TBuilder> class. protected TimeArrayBuilder(IArrowArrayBuilder<TUnderlying, TArray, IArrowArrayBuilder<TArray>> innerBuilder) Parameters innerBuilder IArrowArrayBuilder<TUnderlying, TArray, IArrowArrayBuilder<TArray>> Inner builder that will produce arrays of type TArray. Methods Append(ReadOnlySpan<TUnderlying>) public TBuilder Append(ReadOnlySpan<TUnderlying> values) Parameters values ReadOnlySpan<TUnderlying> Returns TBuilder Append(TUnderlying) Append a time public TBuilder Append(TUnderlying value) Parameters value TUnderlying Returns TBuilder AppendNull() Append a null time to the array. public override TBuilder AppendNull() Returns TBuilder Returns the builder (for fluent-style composition). AppendRange(IEnumerable<TUnderlying>) public TBuilder AppendRange(IEnumerable<TUnderlying> values) Parameters values IEnumerable<TUnderlying> Returns TBuilder Set(int, TUnderlying) public TBuilder Set(int index, TUnderlying value) Parameters index int value TUnderlying Returns TBuilder Swap(int, int) Swap the values of the times at the specified indices. public TBuilder Swap(int i, int j) Parameters i int First index. j int Second index. Returns TBuilder Returns the builder (for fluent-style composition)."
  },
  "api/Apache.Arrow.TimeSpanExtensions.html": {
    "href": "api/Apache.Arrow.TimeSpanExtensions.html",
    "title": "Class TimeSpanExtensions | Apache Arrow .NET",
    "summary": "Class TimeSpanExtensions Namespace Apache.Arrow Assembly Apache.Arrow.dll public static class TimeSpanExtensions Inheritance object TimeSpanExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToTimeZoneOffsetString(TimeSpan) Formats a TimeSpan into an ISO 8601 compliant time offset string. public static string ToTimeZoneOffsetString(this TimeSpan timeSpan) Parameters timeSpan TimeSpan timeSpan to format Returns string ISO 8601 offset string"
  },
  "api/Apache.Arrow.TimestampArray.Builder.html": {
    "href": "api/Apache.Arrow.TimestampArray.Builder.html",
    "title": "Class TimestampArray.Builder | Apache Arrow .NET",
    "summary": "Class TimestampArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class TimestampArray.Builder : PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>, IArrowArrayBuilder<DateTimeOffset, TimestampArray, TimestampArray.Builder>, IArrowArrayBuilder<TimestampArray, TimestampArray.Builder>, IArrowArrayBuilder<TimestampArray>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder> TimestampArray.Builder Implements IArrowArrayBuilder<DateTimeOffset, TimestampArray, TimestampArray.Builder> IArrowArrayBuilder<TimestampArray, TimestampArray.Builder> IArrowArrayBuilder<TimestampArray> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Instance PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.ArrayBuilder PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Length PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Append(DateTimeOffset) PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Append(ReadOnlySpan<DateTimeOffset>) PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.AppendRange(IEnumerable<DateTimeOffset>) PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.AppendNull() PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Reserve(int) PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Resize(int) PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Swap(int, int) PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Set(int, DateTimeOffset) PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.Clear() PrimitiveArrayBuilder<DateTimeOffset, long, TimestampArray, TimestampArray.Builder>.ConvertTo(DateTimeOffset) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Builder() public Builder() Builder(TimeUnit) public Builder(TimeUnit unit) Parameters unit TimeUnit Builder(TimeUnit, string) public Builder(TimeUnit unit = TimeUnit.Millisecond, string timezone = \"+00:00\") Parameters unit TimeUnit timezone string Builder(TimeUnit, TimeZoneInfo) public Builder(TimeUnit unit, TimeZoneInfo timezone) Parameters unit TimeUnit timezone TimeZoneInfo Builder(TimestampType) public Builder(TimestampType type) Parameters type TimestampType Properties DataType protected TimestampType DataType { get; } Property Value TimestampType Methods ConvertTo(DateTimeOffset) protected override long ConvertTo(DateTimeOffset value) Parameters value DateTimeOffset Returns long"
  },
  "api/Apache.Arrow.TimestampArray.html": {
    "href": "api/Apache.Arrow.TimestampArray.html",
    "title": "Class TimestampArray | Apache Arrow .NET",
    "summary": "Class TimestampArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public class TimestampArray : PrimitiveArray<long>, IArrowArray, IDisposable, IReadOnlyList<long?>, IReadOnlyCollection<long?>, ICollection<long?>, IEnumerable<long?>, IReadOnlyList<DateTimeOffset?>, IReadOnlyCollection<DateTimeOffset?>, ICollection<DateTimeOffset?>, IEnumerable<DateTimeOffset?>, IEnumerable Inheritance object Array PrimitiveArray<long> TimestampArray Implements IArrowArray IDisposable IReadOnlyList<long?> IReadOnlyCollection<long?> ICollection<long?> IEnumerable<long?> IReadOnlyList<DateTimeOffset?> IReadOnlyCollection<DateTimeOffset?> ICollection<DateTimeOffset?> IEnumerable<DateTimeOffset?> IEnumerable Inherited Members PrimitiveArray<long>.ValueBuffer PrimitiveArray<long>.Values PrimitiveArray<long>.GetValue(int) PrimitiveArray<long>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TimestampArray(ArrayData) public TimestampArray(ArrayData data) Parameters data ArrayData TimestampArray(TimestampType, ArrowBuffer, ArrowBuffer, int, int, int) public TimestampArray(TimestampType type, ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters type TimestampType valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor GetTimestamp(int) public DateTimeOffset? GetTimestamp(int index) Parameters index int Returns DateTimeOffset? GetTimestampUnchecked(int) public DateTimeOffset GetTimestampUnchecked(int index) Parameters index int Returns DateTimeOffset"
  },
  "api/Apache.Arrow.Types.ArrowType.html": {
    "href": "api/Apache.Arrow.Types.ArrowType.html",
    "title": "Class ArrowType | Apache Arrow .NET",
    "summary": "Class ArrowType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public abstract class ArrowType : IArrowType Inheritance object ArrowType Implements IArrowType Derived BinaryType BinaryViewType FixedWidthType LargeBinaryType LargeStringType NestedType NullType StringType StringViewType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Properties IsFixedWidth public virtual bool IsFixedWidth { get; } Property Value bool Name public abstract string Name { get; } Property Value string TypeId public abstract ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public abstract void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.ArrowTypeId.html": {
    "href": "api/Apache.Arrow.Types.ArrowTypeId.html",
    "title": "Enum ArrowTypeId | Apache Arrow .NET",
    "summary": "Enum ArrowTypeId Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public enum ArrowTypeId Fields Binary = 14 BinaryView = 32 Boolean = 1 Date32 = 16 Date64 = 17 Decimal128 = 22 Decimal256 = 23 Decimal32 = 38 Decimal64 = 39 Dictionary = 27 Double = 12 Duration = 30 FixedSizeList = 29 FixedSizedBinary = 15 Float = 11 HalfFloat = 10 Int16 = 5 Int32 = 7 Int64 = 9 Int8 = 3 Interval = 21 LargeBinary = 36 LargeList = 35 LargeString = 37 List = 24 ListView = 34 Map = 28 Null = 0 RecordBatch = 31 String = 13 StringView = 33 Struct = 25 Time32 = 19 Time64 = 20 Timestamp = 18 UInt16 = 4 UInt32 = 6 UInt64 = 8 UInt8 = 2 Union = 26"
  },
  "api/Apache.Arrow.Types.BinaryType.html": {
    "href": "api/Apache.Arrow.Types.BinaryType.html",
    "title": "Class BinaryType | Apache Arrow .NET",
    "summary": "Class BinaryType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public class BinaryType : ArrowType, IArrowType Inheritance object ArrowType BinaryType Implements IArrowType Inherited Members ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly BinaryType Default Field Value BinaryType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.BinaryViewType.html": {
    "href": "api/Apache.Arrow.Types.BinaryViewType.html",
    "title": "Class BinaryViewType | Apache Arrow .NET",
    "summary": "Class BinaryViewType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public class BinaryViewType : ArrowType, IArrowType Inheritance object ArrowType BinaryViewType Implements IArrowType Inherited Members ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly BinaryViewType Default Field Value BinaryViewType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.BooleanType.html": {
    "href": "api/Apache.Arrow.Types.BooleanType.html",
    "title": "Class BooleanType | Apache Arrow .NET",
    "summary": "Class BooleanType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class BooleanType : NumberType, IArrowType Inheritance object ArrowType FixedWidthType NumberType BooleanType Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly BooleanType Default Field Value BooleanType Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.Date32Type.html": {
    "href": "api/Apache.Arrow.Types.Date32Type.html",
    "title": "Class Date32Type | Apache Arrow .NET",
    "summary": "Class Date32Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Date32Type : DateType, IArrowType Inheritance object ArrowType FixedWidthType DateType Date32Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly Date32Type Default Field Value Date32Type Properties BitWidth public override int BitWidth { get; } Property Value int Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Unit public override DateUnit Unit { get; } Property Value DateUnit Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.Date64Type.html": {
    "href": "api/Apache.Arrow.Types.Date64Type.html",
    "title": "Class Date64Type | Apache Arrow .NET",
    "summary": "Class Date64Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Date64Type : DateType, IArrowType Inheritance object ArrowType FixedWidthType DateType Date64Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly Date64Type Default Field Value Date64Type Properties BitWidth public override int BitWidth { get; } Property Value int Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Unit public override DateUnit Unit { get; } Property Value DateUnit Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.DateType.html": {
    "href": "api/Apache.Arrow.Types.DateType.html",
    "title": "Class DateType | Apache Arrow .NET",
    "summary": "Class DateType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public abstract class DateType : FixedWidthType, IArrowType Inheritance object ArrowType FixedWidthType DateType Implements IArrowType Derived Date32Type Date64Type Inherited Members FixedWidthType.IsFixedWidth FixedWidthType.BitWidth ArrowType.TypeId ArrowType.Name ArrowType.Accept(IArrowTypeVisitor) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Properties Unit public abstract DateUnit Unit { get; } Property Value DateUnit"
  },
  "api/Apache.Arrow.Types.DateUnit.html": {
    "href": "api/Apache.Arrow.Types.DateUnit.html",
    "title": "Enum DateUnit | Apache Arrow .NET",
    "summary": "Enum DateUnit Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public enum DateUnit Fields Day = 0 Milliseconds = 1"
  },
  "api/Apache.Arrow.Types.Decimal128Type.html": {
    "href": "api/Apache.Arrow.Types.Decimal128Type.html",
    "title": "Class Decimal128Type | Apache Arrow .NET",
    "summary": "Class Decimal128Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Decimal128Type : FixedSizeBinaryType, IArrowType Inheritance object ArrowType FixedWidthType FixedSizeBinaryType Decimal128Type Implements IArrowType Inherited Members FixedSizeBinaryType.ByteWidth FixedSizeBinaryType.BitWidth FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors Decimal128Type(int, int) public Decimal128Type(int precision, int scale) Parameters precision int scale int Properties Name public override string Name { get; } Property Value string Precision public int Precision { get; } Property Value int Scale public int Scale { get; } Property Value int TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.Decimal256Type.html": {
    "href": "api/Apache.Arrow.Types.Decimal256Type.html",
    "title": "Class Decimal256Type | Apache Arrow .NET",
    "summary": "Class Decimal256Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Decimal256Type : FixedSizeBinaryType, IArrowType Inheritance object ArrowType FixedWidthType FixedSizeBinaryType Decimal256Type Implements IArrowType Inherited Members FixedSizeBinaryType.ByteWidth FixedSizeBinaryType.BitWidth FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors Decimal256Type(int, int) public Decimal256Type(int precision, int scale) Parameters precision int scale int Properties Name public override string Name { get; } Property Value string Precision public int Precision { get; } Property Value int Scale public int Scale { get; } Property Value int TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.Decimal32Type.html": {
    "href": "api/Apache.Arrow.Types.Decimal32Type.html",
    "title": "Class Decimal32Type | Apache Arrow .NET",
    "summary": "Class Decimal32Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Decimal32Type : FixedSizeBinaryType, IArrowType Inheritance object ArrowType FixedWidthType FixedSizeBinaryType Decimal32Type Implements IArrowType Inherited Members FixedSizeBinaryType.ByteWidth FixedSizeBinaryType.BitWidth FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors Decimal32Type(int, int) public Decimal32Type(int precision, int scale) Parameters precision int scale int Properties Name public override string Name { get; } Property Value string Precision public int Precision { get; } Property Value int Scale public int Scale { get; } Property Value int TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.Decimal64Type.html": {
    "href": "api/Apache.Arrow.Types.Decimal64Type.html",
    "title": "Class Decimal64Type | Apache Arrow .NET",
    "summary": "Class Decimal64Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Decimal64Type : FixedSizeBinaryType, IArrowType Inheritance object ArrowType FixedWidthType FixedSizeBinaryType Decimal64Type Implements IArrowType Inherited Members FixedSizeBinaryType.ByteWidth FixedSizeBinaryType.BitWidth FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors Decimal64Type(int, int) public Decimal64Type(int precision, int scale) Parameters precision int scale int Properties Name public override string Name { get; } Property Value string Precision public int Precision { get; } Property Value int Scale public int Scale { get; } Property Value int TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.DictionaryType.html": {
    "href": "api/Apache.Arrow.Types.DictionaryType.html",
    "title": "Class DictionaryType | Apache Arrow .NET",
    "summary": "Class DictionaryType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class DictionaryType : FixedWidthType, IArrowType Inheritance object ArrowType FixedWidthType DictionaryType Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors DictionaryType(IArrowType, IArrowType, bool) public DictionaryType(IArrowType indexType, IArrowType valueType, bool ordered) Parameters indexType IArrowType valueType IArrowType ordered bool Fields Default [Obsolete] public static readonly DictionaryType Default Field Value DictionaryType Properties BitWidth public override int BitWidth { get; } Property Value int IndexType public IArrowType IndexType { get; } Property Value IArrowType Name public override string Name { get; } Property Value string Ordered public bool Ordered { get; } Property Value bool TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId ValueType public IArrowType ValueType { get; } Property Value IArrowType Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.DoubleType.html": {
    "href": "api/Apache.Arrow.Types.DoubleType.html",
    "title": "Class DoubleType | Apache Arrow .NET",
    "summary": "Class DoubleType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class DoubleType : FloatingPointType, IArrowType Inheritance object ArrowType FixedWidthType NumberType FloatingPointType DoubleType Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly DoubleType Default Field Value DoubleType Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string Precision public override FloatingPointType.PrecisionKind Precision { get; } Property Value FloatingPointType.PrecisionKind TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.DurationType.html": {
    "href": "api/Apache.Arrow.Types.DurationType.html",
    "title": "Class DurationType | Apache Arrow .NET",
    "summary": "Class DurationType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class DurationType : TimeBasedType, IArrowType Inheritance object ArrowType FixedWidthType TimeBasedType DurationType Implements IArrowType Inherited Members TimeBasedType.Unit FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Microsecond public static readonly DurationType Microsecond Field Value DurationType Millisecond public static readonly DurationType Millisecond Field Value DurationType Nanosecond public static readonly DurationType Nanosecond Field Value DurationType Second public static readonly DurationType Second Field Value DurationType Properties BitWidth public override int BitWidth { get; } Property Value int Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor FromTimeUnit(TimeUnit) public static DurationType FromTimeUnit(TimeUnit unit) Parameters unit TimeUnit Returns DurationType"
  },
  "api/Apache.Arrow.Types.FixedSizeBinaryType.html": {
    "href": "api/Apache.Arrow.Types.FixedSizeBinaryType.html",
    "title": "Class FixedSizeBinaryType | Apache Arrow .NET",
    "summary": "Class FixedSizeBinaryType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public class FixedSizeBinaryType : FixedWidthType, IArrowType Inheritance object ArrowType FixedWidthType FixedSizeBinaryType Implements IArrowType Derived Decimal128Type Decimal256Type Decimal32Type Decimal64Type Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors FixedSizeBinaryType(int) public FixedSizeBinaryType(int byteWidth) Parameters byteWidth int Properties BitWidth public override int BitWidth { get; } Property Value int ByteWidth public int ByteWidth { get; } Property Value int Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.FixedSizeListType.html": {
    "href": "api/Apache.Arrow.Types.FixedSizeListType.html",
    "title": "Class FixedSizeListType | Apache Arrow .NET",
    "summary": "Class FixedSizeListType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class FixedSizeListType : NestedType, IArrowType Inheritance object ArrowType NestedType FixedSizeListType Implements IArrowType Inherited Members NestedType.Children NestedType.Fields ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors FixedSizeListType(Field, int) public FixedSizeListType(Field valueField, int listSize) Parameters valueField Field listSize int FixedSizeListType(IArrowType, int) public FixedSizeListType(IArrowType valueDataType, int listSize) Parameters valueDataType IArrowType listSize int Properties ListSize public int ListSize { get; } Property Value int Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId ValueDataType public IArrowType ValueDataType { get; } Property Value IArrowType ValueField public Field ValueField { get; } Property Value Field Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.FixedWidthType.html": {
    "href": "api/Apache.Arrow.Types.FixedWidthType.html",
    "title": "Class FixedWidthType | Apache Arrow .NET",
    "summary": "Class FixedWidthType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public abstract class FixedWidthType : ArrowType, IArrowType Inheritance object ArrowType FixedWidthType Implements IArrowType Derived DateType DictionaryType FixedSizeBinaryType IntervalType NumberType TimeBasedType Inherited Members ArrowType.TypeId ArrowType.Name ArrowType.Accept(IArrowTypeVisitor) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Properties BitWidth public abstract int BitWidth { get; } Property Value int IsFixedWidth public override bool IsFixedWidth { get; } Property Value bool"
  },
  "api/Apache.Arrow.Types.FloatType.html": {
    "href": "api/Apache.Arrow.Types.FloatType.html",
    "title": "Class FloatType | Apache Arrow .NET",
    "summary": "Class FloatType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class FloatType : FloatingPointType, IArrowType Inheritance object ArrowType FixedWidthType NumberType FloatingPointType FloatType Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly FloatType Default Field Value FloatType Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string Precision public override FloatingPointType.PrecisionKind Precision { get; } Property Value FloatingPointType.PrecisionKind TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.FloatingPointType.PrecisionKind.html": {
    "href": "api/Apache.Arrow.Types.FloatingPointType.PrecisionKind.html",
    "title": "Enum FloatingPointType.PrecisionKind | Apache Arrow .NET",
    "summary": "Enum FloatingPointType.PrecisionKind Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public enum FloatingPointType.PrecisionKind Fields Double = 2 Half = 0 Single = 1"
  },
  "api/Apache.Arrow.Types.FloatingPointType.html": {
    "href": "api/Apache.Arrow.Types.FloatingPointType.html",
    "title": "Class FloatingPointType | Apache Arrow .NET",
    "summary": "Class FloatingPointType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public abstract class FloatingPointType : NumberType, IArrowType Inheritance object ArrowType FixedWidthType NumberType FloatingPointType Implements IArrowType Derived DoubleType FloatType HalfFloatType Inherited Members NumberType.IsSigned FixedWidthType.IsFixedWidth FixedWidthType.BitWidth ArrowType.TypeId ArrowType.Name ArrowType.Accept(IArrowTypeVisitor) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Properties Precision public abstract FloatingPointType.PrecisionKind Precision { get; } Property Value FloatingPointType.PrecisionKind"
  },
  "api/Apache.Arrow.Types.HalfFloatType.html": {
    "href": "api/Apache.Arrow.Types.HalfFloatType.html",
    "title": "Class HalfFloatType | Apache Arrow .NET",
    "summary": "Class HalfFloatType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class HalfFloatType : FloatingPointType, IArrowType Inheritance object ArrowType FixedWidthType NumberType FloatingPointType HalfFloatType Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly HalfFloatType Default Field Value HalfFloatType Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string Precision public override FloatingPointType.PrecisionKind Precision { get; } Property Value FloatingPointType.PrecisionKind TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.IArrowType.html": {
    "href": "api/Apache.Arrow.Types.IArrowType.html",
    "title": "Interface IArrowType | Apache Arrow .NET",
    "summary": "Interface IArrowType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public interface IArrowType Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Properties IsFixedWidth bool IsFixedWidth { get; } Property Value bool Name string Name { get; } Property Value string TypeId ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.IArrowTypeVisitor-1.html": {
    "href": "api/Apache.Arrow.Types.IArrowTypeVisitor-1.html",
    "title": "Interface IArrowTypeVisitor<T> | Apache Arrow .NET",
    "summary": "Interface IArrowTypeVisitor<T> Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public interface IArrowTypeVisitor<in T> : IArrowTypeVisitor where T : IArrowType Type Parameters T Inherited Members IArrowTypeVisitor.Visit(IArrowType) Methods Visit(T) void Visit(T type) Parameters type T"
  },
  "api/Apache.Arrow.Types.IArrowTypeVisitor.html": {
    "href": "api/Apache.Arrow.Types.IArrowTypeVisitor.html",
    "title": "Interface IArrowTypeVisitor | Apache Arrow .NET",
    "summary": "Interface IArrowTypeVisitor Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public interface IArrowTypeVisitor Methods Visit(IArrowType) void Visit(IArrowType type) Parameters type IArrowType"
  },
  "api/Apache.Arrow.Types.IRecordType.html": {
    "href": "api/Apache.Arrow.Types.IRecordType.html",
    "title": "Interface IRecordType | Apache Arrow .NET",
    "summary": "Interface IRecordType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public interface IRecordType : IArrowType Inherited Members IArrowType.TypeId IArrowType.Name IArrowType.Accept(IArrowTypeVisitor) IArrowType.IsFixedWidth Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Properties FieldCount int FieldCount { get; } Property Value int Methods GetFieldByIndex(int) Field GetFieldByIndex(int index) Parameters index int Returns Field GetFieldByName(string) Field GetFieldByName(string name) Parameters name string Returns Field GetFieldIndex(string, IEqualityComparer<string>) int GetFieldIndex(string name, IEqualityComparer<string> comparer) Parameters name string comparer IEqualityComparer<string> Returns int"
  },
  "api/Apache.Arrow.Types.Int16Type.html": {
    "href": "api/Apache.Arrow.Types.Int16Type.html",
    "title": "Class Int16Type | Apache Arrow .NET",
    "summary": "Class Int16Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Int16Type : IntegerType, IArrowType Inheritance object ArrowType FixedWidthType NumberType IntegerType Int16Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly Int16Type Default Field Value Int16Type Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.Int32Type.html": {
    "href": "api/Apache.Arrow.Types.Int32Type.html",
    "title": "Class Int32Type | Apache Arrow .NET",
    "summary": "Class Int32Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Int32Type : IntegerType, IArrowType Inheritance object ArrowType FixedWidthType NumberType IntegerType Int32Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly Int32Type Default Field Value Int32Type Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.Int64Type.html": {
    "href": "api/Apache.Arrow.Types.Int64Type.html",
    "title": "Class Int64Type | Apache Arrow .NET",
    "summary": "Class Int64Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Int64Type : IntegerType, IArrowType Inheritance object ArrowType FixedWidthType NumberType IntegerType Int64Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly Int64Type Default Field Value Int64Type Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.Int8Type.html": {
    "href": "api/Apache.Arrow.Types.Int8Type.html",
    "title": "Class Int8Type | Apache Arrow .NET",
    "summary": "Class Int8Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Int8Type : IntegerType, IArrowType Inheritance object ArrowType FixedWidthType NumberType IntegerType Int8Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly Int8Type Default Field Value Int8Type Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.IntegerType.html": {
    "href": "api/Apache.Arrow.Types.IntegerType.html",
    "title": "Class IntegerType | Apache Arrow .NET",
    "summary": "Class IntegerType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public abstract class IntegerType : NumberType, IArrowType Inheritance object ArrowType FixedWidthType NumberType IntegerType Implements IArrowType Derived Int16Type Int32Type Int64Type Int8Type UInt16Type UInt32Type UInt64Type UInt8Type Inherited Members NumberType.IsSigned FixedWidthType.IsFixedWidth FixedWidthType.BitWidth ArrowType.TypeId ArrowType.Name ArrowType.Accept(IArrowTypeVisitor) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType)"
  },
  "api/Apache.Arrow.Types.IntervalType.html": {
    "href": "api/Apache.Arrow.Types.IntervalType.html",
    "title": "Class IntervalType | Apache Arrow .NET",
    "summary": "Class IntervalType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class IntervalType : FixedWidthType, IArrowType Inheritance object ArrowType FixedWidthType IntervalType Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors IntervalType(IntervalUnit) public IntervalType(IntervalUnit unit = IntervalUnit.YearMonth) Parameters unit IntervalUnit Fields DayTime public static readonly IntervalType DayTime Field Value IntervalType MonthDayNanosecond public static readonly IntervalType MonthDayNanosecond Field Value IntervalType YearMonth public static readonly IntervalType YearMonth Field Value IntervalType Properties BitWidth public override int BitWidth { get; } Property Value int Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Unit public IntervalUnit Unit { get; } Property Value IntervalUnit Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor FromIntervalUnit(IntervalUnit) public static IntervalType FromIntervalUnit(IntervalUnit unit) Parameters unit IntervalUnit Returns IntervalType"
  },
  "api/Apache.Arrow.Types.IntervalUnit.html": {
    "href": "api/Apache.Arrow.Types.IntervalUnit.html",
    "title": "Enum IntervalUnit | Apache Arrow .NET",
    "summary": "Enum IntervalUnit Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public enum IntervalUnit Fields DayTime = 1 MonthDayNanosecond = 2 YearMonth = 0"
  },
  "api/Apache.Arrow.Types.LargeBinaryType.html": {
    "href": "api/Apache.Arrow.Types.LargeBinaryType.html",
    "title": "Class LargeBinaryType | Apache Arrow .NET",
    "summary": "Class LargeBinaryType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public class LargeBinaryType : ArrowType, IArrowType Inheritance object ArrowType LargeBinaryType Implements IArrowType Inherited Members ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly LargeBinaryType Default Field Value LargeBinaryType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.LargeListType.html": {
    "href": "api/Apache.Arrow.Types.LargeListType.html",
    "title": "Class LargeListType | Apache Arrow .NET",
    "summary": "Class LargeListType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class LargeListType : NestedType, IArrowType Inheritance object ArrowType NestedType LargeListType Implements IArrowType Inherited Members NestedType.Children NestedType.Fields ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors LargeListType(Field) public LargeListType(Field valueField) Parameters valueField Field LargeListType(IArrowType) public LargeListType(IArrowType valueDataType) Parameters valueDataType IArrowType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId ValueDataType public IArrowType ValueDataType { get; } Property Value IArrowType ValueField public Field ValueField { get; } Property Value Field Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.LargeStringType.html": {
    "href": "api/Apache.Arrow.Types.LargeStringType.html",
    "title": "Class LargeStringType | Apache Arrow .NET",
    "summary": "Class LargeStringType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class LargeStringType : ArrowType, IArrowType Inheritance object ArrowType LargeStringType Implements IArrowType Inherited Members ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly LargeStringType Default Field Value LargeStringType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.ListType.html": {
    "href": "api/Apache.Arrow.Types.ListType.html",
    "title": "Class ListType | Apache Arrow .NET",
    "summary": "Class ListType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class ListType : NestedType, IArrowType Inheritance object ArrowType NestedType ListType Implements IArrowType Inherited Members NestedType.Children NestedType.Fields ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors ListType(Field) public ListType(Field valueField) Parameters valueField Field ListType(IArrowType) public ListType(IArrowType valueDataType) Parameters valueDataType IArrowType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId ValueDataType public IArrowType ValueDataType { get; } Property Value IArrowType ValueField public Field ValueField { get; } Property Value Field Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.ListViewType.html": {
    "href": "api/Apache.Arrow.Types.ListViewType.html",
    "title": "Class ListViewType | Apache Arrow .NET",
    "summary": "Class ListViewType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class ListViewType : NestedType, IArrowType Inheritance object ArrowType NestedType ListViewType Implements IArrowType Inherited Members NestedType.Children NestedType.Fields ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors ListViewType(Field) public ListViewType(Field valueField) Parameters valueField Field ListViewType(IArrowType) public ListViewType(IArrowType valueDataType) Parameters valueDataType IArrowType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId ValueDataType public IArrowType ValueDataType { get; } Property Value IArrowType ValueField public Field ValueField { get; } Property Value Field Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.MapType.html": {
    "href": "api/Apache.Arrow.Types.MapType.html",
    "title": "Class MapType | Apache Arrow .NET",
    "summary": "Class MapType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class MapType : NestedType, IArrowType Inheritance object ArrowType NestedType MapType Implements IArrowType Inherited Members NestedType.Children NestedType.Fields ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors MapType(Field, Field, bool) public MapType(Field key, Field value, bool keySorted = false) Parameters key Field value Field keySorted bool MapType(Field, bool) public MapType(Field entries, bool keySorted = false) Parameters entries Field keySorted bool MapType(IArrowType, IArrowType, bool, bool) public MapType(IArrowType key, IArrowType value, bool nullable = true, bool keySorted = false) Parameters key IArrowType value IArrowType nullable bool keySorted bool MapType(StructType, bool) public MapType(StructType entries, bool keySorted = false) Parameters entries StructType keySorted bool Fields KeySorted public readonly bool KeySorted Field Value bool Properties KeyField public Field KeyField { get; } Property Value Field KeyValueType public StructType KeyValueType { get; } Property Value StructType Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId ValueField public Field ValueField { get; } Property Value Field Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor UnsortedKey() public MapType UnsortedKey() Returns MapType"
  },
  "api/Apache.Arrow.Types.NestedType.html": {
    "href": "api/Apache.Arrow.Types.NestedType.html",
    "title": "Class NestedType | Apache Arrow .NET",
    "summary": "Class NestedType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public abstract class NestedType : ArrowType, IArrowType Inheritance object ArrowType NestedType Implements IArrowType Derived FixedSizeListType LargeListType ListType ListViewType MapType StructType UnionType Inherited Members ArrowType.TypeId ArrowType.Name ArrowType.IsFixedWidth ArrowType.Accept(IArrowTypeVisitor) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors NestedType(Field) protected NestedType(Field field) Parameters field Field NestedType(IReadOnlyList<Field>) protected NestedType(IReadOnlyList<Field> fields) Parameters fields IReadOnlyList<Field> Properties Children [Obsolete(\"Use `Fields` instead\")] public IReadOnlyList<Field> Children { get; } Property Value IReadOnlyList<Field> Fields public IReadOnlyList<Field> Fields { get; } Property Value IReadOnlyList<Field>"
  },
  "api/Apache.Arrow.Types.NullType.html": {
    "href": "api/Apache.Arrow.Types.NullType.html",
    "title": "Class NullType | Apache Arrow .NET",
    "summary": "Class NullType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class NullType : ArrowType, IArrowType Inheritance object ArrowType NullType Implements IArrowType Inherited Members ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly NullType Default Field Value NullType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.NumberType.html": {
    "href": "api/Apache.Arrow.Types.NumberType.html",
    "title": "Class NumberType | Apache Arrow .NET",
    "summary": "Class NumberType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public abstract class NumberType : FixedWidthType, IArrowType Inheritance object ArrowType FixedWidthType NumberType Implements IArrowType Derived BooleanType FloatingPointType IntegerType Inherited Members FixedWidthType.IsFixedWidth FixedWidthType.BitWidth ArrowType.TypeId ArrowType.Name ArrowType.Accept(IArrowTypeVisitor) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Properties IsSigned public abstract bool IsSigned { get; } Property Value bool"
  },
  "api/Apache.Arrow.Types.StringType.html": {
    "href": "api/Apache.Arrow.Types.StringType.html",
    "title": "Class StringType | Apache Arrow .NET",
    "summary": "Class StringType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class StringType : ArrowType, IArrowType Inheritance object ArrowType StringType Implements IArrowType Inherited Members ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static StringType Default Field Value StringType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.StringViewType.html": {
    "href": "api/Apache.Arrow.Types.StringViewType.html",
    "title": "Class StringViewType | Apache Arrow .NET",
    "summary": "Class StringViewType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class StringViewType : ArrowType, IArrowType Inheritance object ArrowType StringViewType Implements IArrowType Inherited Members ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static StringViewType Default Field Value StringViewType Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.StructType.html": {
    "href": "api/Apache.Arrow.Types.StructType.html",
    "title": "Class StructType | Apache Arrow .NET",
    "summary": "Class StructType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class StructType : NestedType, IRecordType, IArrowType Inheritance object ArrowType NestedType StructType Implements IRecordType IArrowType Inherited Members NestedType.Children NestedType.Fields ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors StructType(IReadOnlyList<Field>) public StructType(IReadOnlyList<Field> fields) Parameters fields IReadOnlyList<Field> Properties Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor GetFieldByIndex(int) public Field GetFieldByIndex(int index) Parameters index int Returns Field GetFieldByName(string, IEqualityComparer<string>) public Field GetFieldByName(string name, IEqualityComparer<string> comparer = null) Parameters name string comparer IEqualityComparer<string> Returns Field GetFieldIndex(string, IEqualityComparer<string>) public int GetFieldIndex(string name, IEqualityComparer<string> comparer = null) Parameters name string comparer IEqualityComparer<string> Returns int"
  },
  "api/Apache.Arrow.Types.Time32Type.html": {
    "href": "api/Apache.Arrow.Types.Time32Type.html",
    "title": "Class Time32Type | Apache Arrow .NET",
    "summary": "Class Time32Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Time32Type : TimeType, IArrowType Inheritance object ArrowType FixedWidthType TimeBasedType TimeType Time32Type Implements IArrowType Inherited Members TimeType.Second TimeType.Millisecond TimeType.Microsecond TimeType.Nanosecond TimeType.FromTimeUnit(TimeUnit) TimeBasedType.Unit FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors Time32Type(TimeUnit) public Time32Type(TimeUnit unit = TimeUnit.Millisecond) Parameters unit TimeUnit Properties BitWidth public override int BitWidth { get; } Property Value int Default public static Time32Type Default { get; } Property Value Time32Type Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.Time64Type.html": {
    "href": "api/Apache.Arrow.Types.Time64Type.html",
    "title": "Class Time64Type | Apache Arrow .NET",
    "summary": "Class Time64Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class Time64Type : TimeType, IArrowType Inheritance object ArrowType FixedWidthType TimeBasedType TimeType Time64Type Implements IArrowType Inherited Members TimeType.Second TimeType.Millisecond TimeType.Microsecond TimeType.Nanosecond TimeType.FromTimeUnit(TimeUnit) TimeBasedType.Unit FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors Time64Type(TimeUnit) public Time64Type(TimeUnit unit = TimeUnit.Nanosecond) Parameters unit TimeUnit Properties BitWidth public override int BitWidth { get; } Property Value int Default public static Time64Type Default { get; } Property Value Time64Type Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.TimeBasedType.html": {
    "href": "api/Apache.Arrow.Types.TimeBasedType.html",
    "title": "Class TimeBasedType | Apache Arrow .NET",
    "summary": "Class TimeBasedType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public abstract class TimeBasedType : FixedWidthType, IArrowType Inheritance object ArrowType FixedWidthType TimeBasedType Implements IArrowType Derived DurationType TimeType TimestampType Inherited Members FixedWidthType.IsFixedWidth FixedWidthType.BitWidth ArrowType.TypeId ArrowType.Name ArrowType.Accept(IArrowTypeVisitor) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors TimeBasedType(TimeUnit) protected TimeBasedType(TimeUnit unit) Parameters unit TimeUnit Properties Unit public TimeUnit Unit { get; } Property Value TimeUnit"
  },
  "api/Apache.Arrow.Types.TimeType.html": {
    "href": "api/Apache.Arrow.Types.TimeType.html",
    "title": "Class TimeType | Apache Arrow .NET",
    "summary": "Class TimeType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public abstract class TimeType : TimeBasedType, IArrowType Inheritance object ArrowType FixedWidthType TimeBasedType TimeType Implements IArrowType Derived Time32Type Time64Type Inherited Members TimeBasedType.Unit FixedWidthType.IsFixedWidth FixedWidthType.BitWidth ArrowType.TypeId ArrowType.Name ArrowType.Accept(IArrowTypeVisitor) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors TimeType(TimeUnit) protected TimeType(TimeUnit unit) Parameters unit TimeUnit Fields Microsecond public static readonly Time64Type Microsecond Field Value Time64Type Millisecond public static readonly Time32Type Millisecond Field Value Time32Type Nanosecond public static readonly Time64Type Nanosecond Field Value Time64Type Second public static readonly Time32Type Second Field Value Time32Type Methods FromTimeUnit(TimeUnit) public static TimeType FromTimeUnit(TimeUnit unit) Parameters unit TimeUnit Returns TimeType"
  },
  "api/Apache.Arrow.Types.TimeUnit.html": {
    "href": "api/Apache.Arrow.Types.TimeUnit.html",
    "title": "Enum TimeUnit | Apache Arrow .NET",
    "summary": "Enum TimeUnit Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public enum TimeUnit Fields Microsecond = 2 Millisecond = 1 Nanosecond = 3 Second = 0"
  },
  "api/Apache.Arrow.Types.TimestampType.html": {
    "href": "api/Apache.Arrow.Types.TimestampType.html",
    "title": "Class TimestampType | Apache Arrow .NET",
    "summary": "Class TimestampType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class TimestampType : TimeBasedType, IArrowType Inheritance object ArrowType FixedWidthType TimeBasedType TimestampType Implements IArrowType Inherited Members TimeBasedType.Unit FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors TimestampType(TimeUnit, string) public TimestampType(TimeUnit unit = TimeUnit.Millisecond, string timezone = null) Parameters unit TimeUnit timezone string TimestampType(TimeUnit, TimeZoneInfo) public TimestampType(TimeUnit unit = TimeUnit.Millisecond, TimeZoneInfo timezone = null) Parameters unit TimeUnit timezone TimeZoneInfo Fields Default public static readonly TimestampType Default Field Value TimestampType Properties BitWidth public override int BitWidth { get; } Property Value int IsTimeZoneAware public bool IsTimeZoneAware { get; } Property Value bool Name public override string Name { get; } Property Value string Timezone public string Timezone { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.UInt16Type.html": {
    "href": "api/Apache.Arrow.Types.UInt16Type.html",
    "title": "Class UInt16Type | Apache Arrow .NET",
    "summary": "Class UInt16Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class UInt16Type : IntegerType, IArrowType Inheritance object ArrowType FixedWidthType NumberType IntegerType UInt16Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly UInt16Type Default Field Value UInt16Type Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.UInt32Type.html": {
    "href": "api/Apache.Arrow.Types.UInt32Type.html",
    "title": "Class UInt32Type | Apache Arrow .NET",
    "summary": "Class UInt32Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class UInt32Type : IntegerType, IArrowType Inheritance object ArrowType FixedWidthType NumberType IntegerType UInt32Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly UInt32Type Default Field Value UInt32Type Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.UInt64Type.html": {
    "href": "api/Apache.Arrow.Types.UInt64Type.html",
    "title": "Class UInt64Type | Apache Arrow .NET",
    "summary": "Class UInt64Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class UInt64Type : IntegerType, IArrowType Inheritance object ArrowType FixedWidthType NumberType IntegerType UInt64Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly UInt64Type Default Field Value UInt64Type Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.UInt8Type.html": {
    "href": "api/Apache.Arrow.Types.UInt8Type.html",
    "title": "Class UInt8Type | Apache Arrow .NET",
    "summary": "Class UInt8Type Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class UInt8Type : IntegerType, IArrowType Inheritance object ArrowType FixedWidthType NumberType IntegerType UInt8Type Implements IArrowType Inherited Members FixedWidthType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Fields Default public static readonly UInt8Type Default Field Value UInt8Type Properties BitWidth public override int BitWidth { get; } Property Value int IsSigned public override bool IsSigned { get; } Property Value bool Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.UnionMode.html": {
    "href": "api/Apache.Arrow.Types.UnionMode.html",
    "title": "Enum UnionMode | Apache Arrow .NET",
    "summary": "Enum UnionMode Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public enum UnionMode Fields Dense = 1 Sparse = 0"
  },
  "api/Apache.Arrow.Types.UnionType.html": {
    "href": "api/Apache.Arrow.Types.UnionType.html",
    "title": "Class UnionType | Apache Arrow .NET",
    "summary": "Class UnionType Namespace Apache.Arrow.Types Assembly Apache.Arrow.dll public sealed class UnionType : NestedType, IArrowType Inheritance object ArrowType NestedType UnionType Implements IArrowType Inherited Members NestedType.Children NestedType.Fields ArrowType.IsFixedWidth object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ArrowTypeExtensions.IsFloatingPoint(IArrowType) ArrowTypeExtensions.IsIntegral(IArrowType) Constructors UnionType(IEnumerable<Field>, IEnumerable<int>, UnionMode) public UnionType(IEnumerable<Field> fields, IEnumerable<int> typeIds, UnionMode mode = UnionMode.Sparse) Parameters fields IEnumerable<Field> typeIds IEnumerable<int> mode UnionMode Properties Mode public UnionMode Mode { get; } Property Value UnionMode Name public override string Name { get; } Property Value string TypeId public override ArrowTypeId TypeId { get; } Property Value ArrowTypeId TypeIds public int[] TypeIds { get; } Property Value int[] Methods Accept(IArrowTypeVisitor) public override void Accept(IArrowTypeVisitor visitor) Parameters visitor IArrowTypeVisitor"
  },
  "api/Apache.Arrow.Types.html": {
    "href": "api/Apache.Arrow.Types.html",
    "title": "Namespace Apache.Arrow.Types | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow.Types Classes ArrowType BinaryType BinaryViewType BooleanType Date32Type Date64Type DateType Decimal128Type Decimal256Type Decimal32Type Decimal64Type DictionaryType DoubleType DurationType FixedSizeBinaryType FixedSizeListType FixedWidthType FloatType FloatingPointType HalfFloatType Int16Type Int32Type Int64Type Int8Type IntegerType IntervalType LargeBinaryType LargeListType LargeStringType ListType ListViewType MapType NestedType NullType NumberType StringType StringViewType StructType Time32Type Time64Type TimeBasedType TimeType TimestampType UInt16Type UInt32Type UInt64Type UInt8Type UnionType Interfaces IArrowType IArrowTypeVisitor IArrowTypeVisitor<T> IRecordType Enums ArrowTypeId DateUnit FloatingPointType.PrecisionKind IntervalUnit TimeUnit UnionMode"
  },
  "api/Apache.Arrow.UInt16Array.Builder.html": {
    "href": "api/Apache.Arrow.UInt16Array.Builder.html",
    "title": "Class UInt16Array.Builder | Apache Arrow .NET",
    "summary": "Class UInt16Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class UInt16Array.Builder : PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>, IArrowArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>, IArrowArrayBuilder<UInt16Array, UInt16Array.Builder>, IArrowArrayBuilder<UInt16Array>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder> UInt16Array.Builder Implements IArrowArrayBuilder<ushort, UInt16Array, UInt16Array.Builder> IArrowArrayBuilder<UInt16Array, UInt16Array.Builder> IArrowArrayBuilder<UInt16Array> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Instance PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.ValueBuffer PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.ValidityBuffer PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Length PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.NullCount PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Resize(int) PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Reserve(int) PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Append(ushort) PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Append(ushort?) PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Append(ReadOnlySpan<ushort>) PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.AppendRange(IEnumerable<ushort>) PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.AppendNull() PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Clear() PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Set(int, ushort) PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Swap(int, int) PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<ushort, UInt16Array, UInt16Array.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override UInt16Array Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns UInt16Array"
  },
  "api/Apache.Arrow.UInt16Array.html": {
    "href": "api/Apache.Arrow.UInt16Array.html",
    "title": "Class UInt16Array | Apache Arrow .NET",
    "summary": "Class UInt16Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class UInt16Array : PrimitiveArray<ushort>, IArrowArray, IDisposable, IReadOnlyList<ushort?>, IReadOnlyCollection<ushort?>, ICollection<ushort?>, IEnumerable<ushort?>, IEnumerable Inheritance object Array PrimitiveArray<ushort> UInt16Array Implements IArrowArray IDisposable IReadOnlyList<ushort?> IReadOnlyCollection<ushort?> ICollection<ushort?> IEnumerable<ushort?> IEnumerable Inherited Members PrimitiveArray<ushort>.ValueBuffer PrimitiveArray<ushort>.Values PrimitiveArray<ushort>.GetValue(int) PrimitiveArray<ushort>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UInt16Array(ArrayData) public UInt16Array(ArrayData data) Parameters data ArrayData UInt16Array(ArrowBuffer, ArrowBuffer, int, int, int) public UInt16Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.UInt32Array.Builder.html": {
    "href": "api/Apache.Arrow.UInt32Array.Builder.html",
    "title": "Class UInt32Array.Builder | Apache Arrow .NET",
    "summary": "Class UInt32Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class UInt32Array.Builder : PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>, IArrowArrayBuilder<uint, UInt32Array, UInt32Array.Builder>, IArrowArrayBuilder<UInt32Array, UInt32Array.Builder>, IArrowArrayBuilder<UInt32Array>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder> UInt32Array.Builder Implements IArrowArrayBuilder<uint, UInt32Array, UInt32Array.Builder> IArrowArrayBuilder<UInt32Array, UInt32Array.Builder> IArrowArrayBuilder<UInt32Array> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Instance PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.ValueBuffer PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.ValidityBuffer PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Length PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.NullCount PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Resize(int) PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Reserve(int) PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Append(uint) PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Append(uint?) PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Append(ReadOnlySpan<uint>) PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.AppendRange(IEnumerable<uint>) PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.AppendNull() PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Clear() PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Set(int, uint) PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Swap(int, int) PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<uint, UInt32Array, UInt32Array.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override UInt32Array Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns UInt32Array"
  },
  "api/Apache.Arrow.UInt32Array.html": {
    "href": "api/Apache.Arrow.UInt32Array.html",
    "title": "Class UInt32Array | Apache Arrow .NET",
    "summary": "Class UInt32Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class UInt32Array : PrimitiveArray<uint>, IArrowArray, IDisposable, IReadOnlyList<uint?>, IReadOnlyCollection<uint?>, ICollection<uint?>, IEnumerable<uint?>, IEnumerable Inheritance object Array PrimitiveArray<uint> UInt32Array Implements IArrowArray IDisposable IReadOnlyList<uint?> IReadOnlyCollection<uint?> ICollection<uint?> IEnumerable<uint?> IEnumerable Inherited Members PrimitiveArray<uint>.ValueBuffer PrimitiveArray<uint>.Values PrimitiveArray<uint>.GetValue(int) PrimitiveArray<uint>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UInt32Array(ArrayData) public UInt32Array(ArrayData data) Parameters data ArrayData UInt32Array(ArrowBuffer, ArrowBuffer, int, int, int) public UInt32Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.UInt64Array.Builder.html": {
    "href": "api/Apache.Arrow.UInt64Array.Builder.html",
    "title": "Class UInt64Array.Builder | Apache Arrow .NET",
    "summary": "Class UInt64Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class UInt64Array.Builder : PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>, IArrowArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>, IArrowArrayBuilder<UInt64Array, UInt64Array.Builder>, IArrowArrayBuilder<UInt64Array>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder> UInt64Array.Builder Implements IArrowArrayBuilder<ulong, UInt64Array, UInt64Array.Builder> IArrowArrayBuilder<UInt64Array, UInt64Array.Builder> IArrowArrayBuilder<UInt64Array> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Instance PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.ValueBuffer PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.ValidityBuffer PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Length PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.NullCount PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Resize(int) PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Reserve(int) PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Append(ulong) PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Append(ulong?) PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Append(ReadOnlySpan<ulong>) PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.AppendRange(IEnumerable<ulong>) PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.AppendNull() PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Clear() PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Set(int, ulong) PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Swap(int, int) PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<ulong, UInt64Array, UInt64Array.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override UInt64Array Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns UInt64Array"
  },
  "api/Apache.Arrow.UInt64Array.html": {
    "href": "api/Apache.Arrow.UInt64Array.html",
    "title": "Class UInt64Array | Apache Arrow .NET",
    "summary": "Class UInt64Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class UInt64Array : PrimitiveArray<ulong>, IArrowArray, IDisposable, IReadOnlyList<ulong?>, IReadOnlyCollection<ulong?>, ICollection<ulong?>, IEnumerable<ulong?>, IEnumerable Inheritance object Array PrimitiveArray<ulong> UInt64Array Implements IArrowArray IDisposable IReadOnlyList<ulong?> IReadOnlyCollection<ulong?> ICollection<ulong?> IEnumerable<ulong?> IEnumerable Inherited Members PrimitiveArray<ulong>.ValueBuffer PrimitiveArray<ulong>.Values PrimitiveArray<ulong>.GetValue(int) PrimitiveArray<ulong>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UInt64Array(ArrayData) public UInt64Array(ArrayData data) Parameters data ArrayData UInt64Array(ArrowBuffer, ArrowBuffer, int, int, int) public UInt64Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.UInt8Array.Builder.html": {
    "href": "api/Apache.Arrow.UInt8Array.Builder.html",
    "title": "Class UInt8Array.Builder | Apache Arrow .NET",
    "summary": "Class UInt8Array.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class UInt8Array.Builder : PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>, IArrowArrayBuilder<byte, UInt8Array, UInt8Array.Builder>, IArrowArrayBuilder<UInt8Array, UInt8Array.Builder>, IArrowArrayBuilder<UInt8Array>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder> UInt8Array.Builder Implements IArrowArrayBuilder<byte, UInt8Array, UInt8Array.Builder> IArrowArrayBuilder<UInt8Array, UInt8Array.Builder> IArrowArrayBuilder<UInt8Array> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Instance PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.ValueBuffer PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.ValidityBuffer PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Length PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.NullCount PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Resize(int) PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Reserve(int) PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Append(byte) PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Append(byte?) PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Append(ReadOnlySpan<byte>) PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.AppendRange(IEnumerable<byte>) PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.AppendNull() PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Clear() PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Set(int, byte) PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Swap(int, int) PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<byte, UInt8Array, UInt8Array.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override UInt8Array Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns UInt8Array"
  },
  "api/Apache.Arrow.UInt8Array.html": {
    "href": "api/Apache.Arrow.UInt8Array.html",
    "title": "Class UInt8Array | Apache Arrow .NET",
    "summary": "Class UInt8Array Namespace Apache.Arrow Assembly Apache.Arrow.dll public class UInt8Array : PrimitiveArray<byte>, IArrowArray, IDisposable, IReadOnlyList<byte?>, IReadOnlyCollection<byte?>, ICollection<byte?>, IEnumerable<byte?>, IEnumerable Inheritance object Array PrimitiveArray<byte> UInt8Array Implements IArrowArray IDisposable IReadOnlyList<byte?> IReadOnlyCollection<byte?> ICollection<byte?> IEnumerable<byte?> IEnumerable Inherited Members PrimitiveArray<byte>.ValueBuffer PrimitiveArray<byte>.Values PrimitiveArray<byte>.GetValue(int) PrimitiveArray<byte>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() Array.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UInt8Array(ArrayData) public UInt8Array(ArrayData data) Parameters data ArrayData UInt8Array(ArrowBuffer, ArrowBuffer, int, int, int) public UInt8Array(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.UnionArray.html": {
    "href": "api/Apache.Arrow.UnionArray.html",
    "title": "Class UnionArray | Apache Arrow .NET",
    "summary": "Class UnionArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public abstract class UnionArray : IArrowArray, IDisposable Inheritance object UnionArray Implements IArrowArray IDisposable Derived DenseUnionArray SparseUnionArray Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UnionArray(ArrayData) protected UnionArray(ArrayData data) Parameters data ArrayData Fields _fields protected IReadOnlyList<IArrowArray> _fields Field Value IReadOnlyList<IArrowArray> Properties Data public ArrayData Data { get; } Property Value ArrayData Fields public IReadOnlyList<IArrowArray> Fields { get; } Property Value IReadOnlyList<IArrowArray> Length public int Length { get; } Property Value int Mode public UnionMode Mode { get; } Property Value UnionMode NullCount public int NullCount { get; } Property Value int Offset public int Offset { get; } Property Value int Type public UnionType Type { get; } Property Value UnionType TypeBuffer public ArrowBuffer TypeBuffer { get; } Property Value ArrowBuffer TypeIds public ReadOnlySpan<byte> TypeIds { get; } Property Value ReadOnlySpan<byte> Methods Accept(IArrowArrayVisitor) public void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor Create(ArrayData) public static UnionArray Create(ArrayData data) Parameters data ArrayData Returns UnionArray Dispose() public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool FieldIsValid(IArrowArray, int) protected abstract bool FieldIsValid(IArrowArray field, int index) Parameters field IArrowArray index int Returns bool IsNull(int) public bool IsNull(int index) Parameters index int Returns bool IsValid(int) public bool IsValid(int index) Parameters index int Returns bool ValidateMode(UnionMode, UnionMode) protected static void ValidateMode(UnionMode expected, UnionMode actual) Parameters expected UnionMode actual UnionMode"
  },
  "api/Apache.Arrow.YearMonthIntervalArray.Builder.html": {
    "href": "api/Apache.Arrow.YearMonthIntervalArray.Builder.html",
    "title": "Class YearMonthIntervalArray.Builder | Apache Arrow .NET",
    "summary": "Class YearMonthIntervalArray.Builder Namespace Apache.Arrow Assembly Apache.Arrow.dll public class YearMonthIntervalArray.Builder : PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>, IArrowArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>, IArrowArrayBuilder<YearMonthIntervalArray, YearMonthIntervalArray.Builder>, IArrowArrayBuilder<YearMonthIntervalArray>, IArrowArrayBuilder Inheritance object PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder> YearMonthIntervalArray.Builder Implements IArrowArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder> IArrowArrayBuilder<YearMonthIntervalArray, YearMonthIntervalArray.Builder> IArrowArrayBuilder<YearMonthIntervalArray> IArrowArrayBuilder Inherited Members PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Instance PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.ValueBuffer PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.ValidityBuffer PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Length PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.NullCount PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Resize(int) PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Reserve(int) PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Append(YearMonthInterval) PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Append(YearMonthInterval?) PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Append(ReadOnlySpan<YearMonthInterval>) PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.AppendRange(IEnumerable<YearMonthInterval>) PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.AppendNull() PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Clear() PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Set(int, YearMonthInterval) PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Swap(int, int) PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Build(MemoryAllocator) PrimitiveArrayBuilder<YearMonthInterval, YearMonthIntervalArray, YearMonthIntervalArray.Builder>.Build(ArrowBuffer, ArrowBuffer, int, int, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(ArrowBuffer, ArrowBuffer, int, int, int) protected override YearMonthIntervalArray Build(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Returns YearMonthIntervalArray"
  },
  "api/Apache.Arrow.YearMonthIntervalArray.html": {
    "href": "api/Apache.Arrow.YearMonthIntervalArray.html",
    "title": "Class YearMonthIntervalArray | Apache Arrow .NET",
    "summary": "Class YearMonthIntervalArray Namespace Apache.Arrow Assembly Apache.Arrow.dll public sealed class YearMonthIntervalArray : IntervalArray<YearMonthInterval>, IArrowArray, IDisposable, IReadOnlyList<YearMonthInterval?>, IReadOnlyCollection<YearMonthInterval?>, ICollection<YearMonthInterval?>, IEnumerable<YearMonthInterval?>, IEnumerable Inheritance object Array PrimitiveArray<YearMonthInterval> IntervalArray<YearMonthInterval> YearMonthIntervalArray Implements IArrowArray IDisposable IReadOnlyList<YearMonthInterval?> IReadOnlyCollection<YearMonthInterval?> ICollection<YearMonthInterval?> IEnumerable<YearMonthInterval?> IEnumerable Inherited Members IntervalArray<YearMonthInterval>.Type IntervalArray<YearMonthInterval>.Unit PrimitiveArray<YearMonthInterval>.ValueBuffer PrimitiveArray<YearMonthInterval>.Values PrimitiveArray<YearMonthInterval>.GetValue(int) PrimitiveArray<YearMonthInterval>.ToList(bool) Array.Data Array.Length Array.Offset Array.NullCount Array.NullBitmapBuffer Array.IsValid(int) Array.IsNull(int) Array.Slice(int, int) Array.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors YearMonthIntervalArray(ArrayData) public YearMonthIntervalArray(ArrayData data) Parameters data ArrayData YearMonthIntervalArray(ArrowBuffer, ArrowBuffer, int, int, int) public YearMonthIntervalArray(ArrowBuffer valueBuffer, ArrowBuffer nullBitmapBuffer, int length, int nullCount, int offset) Parameters valueBuffer ArrowBuffer nullBitmapBuffer ArrowBuffer length int nullCount int offset int Methods Accept(IArrowArrayVisitor) public override void Accept(IArrowArrayVisitor visitor) Parameters visitor IArrowArrayVisitor"
  },
  "api/Apache.Arrow.html": {
    "href": "api/Apache.Arrow.html",
    "title": "Namespace Apache.Arrow | Apache Arrow .NET",
    "summary": "Namespace Apache.Arrow Classes Array ArrayData ArrayDataConcatenator ArrowArrayConcatenator ArrowArrayFactory ArrowArrayVisitor ArrowBuffer.BitmapBuilder The ArrowBuffer.BitmapBuilder class is a complement to ArrowBuffer.Builder<T> and is designed for boolean fields, which are efficiently bit-packed into byte-aligned memory. ArrowBuffer.Builder<T> The ArrowBuffer.Builder<T> class is able to append value-type items, with fluent-style methods, to build up an ArrowBuffer of contiguous items. ArrowTypeExtensions BinaryArray BinaryArray.Builder BinaryArray.BuilderBase<TArray, TBuilder> BinaryViewArray BinaryViewArray.Builder BinaryViewArray.BuilderBase<TArray, TBuilder> BitUtility BooleanArray BooleanArray.Builder ChunkedArray A data structure to manage a list of primitive Array arrays logically as one large array Column A Column data structure that logically represents a column in a dataset Date32Array The Date32Array class holds an array of dates in the Date32 format, where each date is stored as the number of days since the dawn of (UNIX) time. Date32Array.Builder The Date32Array.Builder class can be used to fluently build Date32Array objects. Date64Array The Date64Array class holds an array of dates in the Date64 format, where each date is stored as the number of milliseconds since the dawn of (UNIX) time, excluding leap seconds, in multiples of 86400000. Date64Array.Builder The Date64Array.Builder class can be used to fluently build Date64Array objects. DateArrayBuilder<TUnderlying, TArray, TBuilder> The DateArrayBuilder<TUnderlying, TArray, TBuilder> class is an abstract array builder that can accept dates in the form of DateTime or DateTimeOffset and convert to some underlying date representation. DayTimeIntervalArray DayTimeIntervalArray.Builder Decimal128Array Decimal128Array.Builder Decimal256Array Decimal256Array.Builder Decimal32Array Decimal32Array.Builder Decimal64Array Decimal64Array.Builder DelegatingArrayBuilder<T, TArray, TBuilder> The DelegatingArrayBuilder<T, TArray, TBuilder> class can be used as the base for any array builder that needs to delegate most of its functionality to an inner array builder. DenseUnionArray DictionaryArray DoubleArray DoubleArray.Builder DurationArray DurationArray.Builder Field Field.Builder FixedSizeListArray FixedSizeListArray.Builder FloatArray FloatArray.Builder Int16Array Int16Array.Builder Int32Array Int32Array.Builder Int64Array Int64Array.Builder Int8Array Int8Array.Builder IntervalArray<T> LargeBinaryArray LargeListArray LargeStringArray ListArray ListArray.Builder ListViewArray ListViewArray.Builder MapArray MapArray.Builder MonthDayNanosecondIntervalArray MonthDayNanosecondIntervalArray.Builder NullArray NullArray.Builder PrimitiveArrayBuilder<T, TArray, TBuilder> PrimitiveArrayBuilder<TFrom, TTo, TArray, TBuilder> PrimitiveArray<T> RecordBatch RecordBatch.ArrayBuilder RecordBatch.Builder Schema Schema.Builder SpanExtensions SparseUnionArray StringArray StringArray.Builder StringViewArray StringViewArray.Builder StructArray Table A logical Table class to represent a dataset as a sequence of Columns Time32Array The Time32Array class holds an array of int, where each value is stored as the number of seconds/ milliseconds (depending on the Time32Type) since midnight. Time32Array.Builder The Time32Array.Builder class can be used to fluently build Time32Array objects. Time64Array The Time64Array class holds an array of long, where each value is stored as the number of microseconds/nanoseconds (depending on the Time64Type) since midnight. Time64Array.Builder The Time64Array.Builder class can be used to fluently build Time64Array objects. TimeArrayBuilder<TUnderlying, TArray, TBuilder> TimeSpanExtensions TimestampArray TimestampArray.Builder UInt16Array UInt16Array.Builder UInt32Array UInt32Array.Builder UInt64Array UInt64Array.Builder UInt8Array UInt8Array.Builder UnionArray YearMonthIntervalArray YearMonthIntervalArray.Builder Structs ArrowBuffer Interfaces IArrowArray IArrowArrayBuilder IArrowArrayBuilder<TArray> IArrowArrayBuilder<TArray, TBuilder> IArrowArrayBuilder<T, TArray, TBuilder> IArrowArrayVisitor IArrowArrayVisitor<T> IArrowRecord"
  },
  "api/Arrow.Flight.Protocol.Sql.ActionBeginSavepointRequest.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionBeginSavepointRequest.html",
    "title": "Class ActionBeginSavepointRequest | Apache Arrow .NET",
    "summary": "Class ActionBeginSavepointRequest Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Request message for the \"BeginSavepoint\" action. Creates a savepoint within a transaction. Only supported if FLIGHT_SQL_TRANSACTION is FLIGHT_SQL_TRANSACTION_SUPPORT_SAVEPOINT. public sealed class ActionBeginSavepointRequest : IMessage<ActionBeginSavepointRequest>, IEquatable<ActionBeginSavepointRequest>, IDeepCloneable<ActionBeginSavepointRequest>, IBufferMessage, IMessage Inheritance object ActionBeginSavepointRequest Implements IMessage<ActionBeginSavepointRequest> IEquatable<ActionBeginSavepointRequest> IDeepCloneable<ActionBeginSavepointRequest> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionBeginSavepointRequest() public ActionBeginSavepointRequest() ActionBeginSavepointRequest(ActionBeginSavepointRequest) public ActionBeginSavepointRequest(ActionBeginSavepointRequest other) Parameters other ActionBeginSavepointRequest Fields NameFieldNumber Field number for the \"name\" field. public const int NameFieldNumber = 2 Field Value int TransactionIdFieldNumber Field number for the \"transaction_id\" field. public const int TransactionIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Name Name for the savepoint. public string Name { get; set; } Property Value string Parser public static MessageParser<ActionBeginSavepointRequest> Parser { get; } Property Value MessageParser<ActionBeginSavepointRequest> TransactionId The transaction to which a savepoint belongs. public ByteString TransactionId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionBeginSavepointRequest Clone() Returns ActionBeginSavepointRequest A deep clone of this object. Equals(ActionBeginSavepointRequest) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionBeginSavepointRequest other) Parameters other ActionBeginSavepointRequest An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionBeginSavepointRequest) Merges the given message into this one. public void MergeFrom(ActionBeginSavepointRequest other) Parameters other ActionBeginSavepointRequest Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionBeginSavepointResult.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionBeginSavepointResult.html",
    "title": "Class ActionBeginSavepointResult | Apache Arrow .NET",
    "summary": "Class ActionBeginSavepointResult Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll The result of a \"BeginSavepoint\" action. The transaction can be manipulated with the \"EndSavepoint\" action. If the associated transaction is committed, rolled back, or times out, then the savepoint is also invalidated. The result should be wrapped in a google.protobuf.Any message. public sealed class ActionBeginSavepointResult : IMessage<ActionBeginSavepointResult>, IEquatable<ActionBeginSavepointResult>, IDeepCloneable<ActionBeginSavepointResult>, IBufferMessage, IMessage Inheritance object ActionBeginSavepointResult Implements IMessage<ActionBeginSavepointResult> IEquatable<ActionBeginSavepointResult> IDeepCloneable<ActionBeginSavepointResult> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionBeginSavepointResult() public ActionBeginSavepointResult() ActionBeginSavepointResult(ActionBeginSavepointResult) public ActionBeginSavepointResult(ActionBeginSavepointResult other) Parameters other ActionBeginSavepointResult Fields SavepointIdFieldNumber Field number for the \"savepoint_id\" field. public const int SavepointIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<ActionBeginSavepointResult> Parser { get; } Property Value MessageParser<ActionBeginSavepointResult> SavepointId Opaque handle for the savepoint on the server. public ByteString SavepointId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionBeginSavepointResult Clone() Returns ActionBeginSavepointResult A deep clone of this object. Equals(ActionBeginSavepointResult) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionBeginSavepointResult other) Parameters other ActionBeginSavepointResult An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionBeginSavepointResult) Merges the given message into this one. public void MergeFrom(ActionBeginSavepointResult other) Parameters other ActionBeginSavepointResult Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionBeginTransactionRequest.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionBeginTransactionRequest.html",
    "title": "Class ActionBeginTransactionRequest | Apache Arrow .NET",
    "summary": "Class ActionBeginTransactionRequest Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Request message for the \"BeginTransaction\" action. Begins a transaction. public sealed class ActionBeginTransactionRequest : IMessage<ActionBeginTransactionRequest>, IEquatable<ActionBeginTransactionRequest>, IDeepCloneable<ActionBeginTransactionRequest>, IBufferMessage, IMessage Inheritance object ActionBeginTransactionRequest Implements IMessage<ActionBeginTransactionRequest> IEquatable<ActionBeginTransactionRequest> IDeepCloneable<ActionBeginTransactionRequest> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionBeginTransactionRequest() public ActionBeginTransactionRequest() ActionBeginTransactionRequest(ActionBeginTransactionRequest) public ActionBeginTransactionRequest(ActionBeginTransactionRequest other) Parameters other ActionBeginTransactionRequest Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<ActionBeginTransactionRequest> Parser { get; } Property Value MessageParser<ActionBeginTransactionRequest> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionBeginTransactionRequest Clone() Returns ActionBeginTransactionRequest A deep clone of this object. Equals(ActionBeginTransactionRequest) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionBeginTransactionRequest other) Parameters other ActionBeginTransactionRequest An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionBeginTransactionRequest) Merges the given message into this one. public void MergeFrom(ActionBeginTransactionRequest other) Parameters other ActionBeginTransactionRequest Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionBeginTransactionResult.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionBeginTransactionResult.html",
    "title": "Class ActionBeginTransactionResult | Apache Arrow .NET",
    "summary": "Class ActionBeginTransactionResult Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll The result of a \"BeginTransaction\" action. The transaction can be manipulated with the \"EndTransaction\" action, or automatically via server timeout. If the transaction times out, then it is automatically rolled back. The result should be wrapped in a google.protobuf.Any message. public sealed class ActionBeginTransactionResult : IMessage<ActionBeginTransactionResult>, IEquatable<ActionBeginTransactionResult>, IDeepCloneable<ActionBeginTransactionResult>, IBufferMessage, IMessage Inheritance object ActionBeginTransactionResult Implements IMessage<ActionBeginTransactionResult> IEquatable<ActionBeginTransactionResult> IDeepCloneable<ActionBeginTransactionResult> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionBeginTransactionResult() public ActionBeginTransactionResult() ActionBeginTransactionResult(ActionBeginTransactionResult) public ActionBeginTransactionResult(ActionBeginTransactionResult other) Parameters other ActionBeginTransactionResult Fields TransactionIdFieldNumber Field number for the \"transaction_id\" field. public const int TransactionIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<ActionBeginTransactionResult> Parser { get; } Property Value MessageParser<ActionBeginTransactionResult> TransactionId Opaque handle for the transaction on the server. public ByteString TransactionId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionBeginTransactionResult Clone() Returns ActionBeginTransactionResult A deep clone of this object. Equals(ActionBeginTransactionResult) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionBeginTransactionResult other) Parameters other ActionBeginTransactionResult An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionBeginTransactionResult) Merges the given message into this one. public void MergeFrom(ActionBeginTransactionResult other) Parameters other ActionBeginTransactionResult Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionCancelQueryRequest.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionCancelQueryRequest.html",
    "title": "Class ActionCancelQueryRequest | Apache Arrow .NET",
    "summary": "Class ActionCancelQueryRequest Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Request message for the \"CancelQuery\" action. Explicitly cancel a running query. This lets a single client explicitly cancel work, no matter how many clients are involved/whether the query is distributed or not, given server support. The transaction/statement is not rolled back; it is the application's job to commit or rollback as appropriate. This only indicates the client no longer wishes to read the remainder of the query results or continue submitting data. This command is idempotent. This command is deprecated since 13.0.0. Use the \"CancelFlightInfo\" action with DoAction instead. [Obsolete] public sealed class ActionCancelQueryRequest : IMessage<ActionCancelQueryRequest>, IEquatable<ActionCancelQueryRequest>, IDeepCloneable<ActionCancelQueryRequest>, IBufferMessage, IMessage Inheritance object ActionCancelQueryRequest Implements IMessage<ActionCancelQueryRequest> IEquatable<ActionCancelQueryRequest> IDeepCloneable<ActionCancelQueryRequest> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionCancelQueryRequest() public ActionCancelQueryRequest() ActionCancelQueryRequest(ActionCancelQueryRequest) public ActionCancelQueryRequest(ActionCancelQueryRequest other) Parameters other ActionCancelQueryRequest Fields InfoFieldNumber Field number for the \"info\" field. public const int InfoFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Info The result of the GetFlightInfo RPC that initiated the query. XXX(ARROW-16902): this must be a serialized FlightInfo, but is rendered as bytes because Protobuf does not really support one DLL using Protobuf definitions from another DLL. public ByteString Info { get; set; } Property Value ByteString Parser public static MessageParser<ActionCancelQueryRequest> Parser { get; } Property Value MessageParser<ActionCancelQueryRequest> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionCancelQueryRequest Clone() Returns ActionCancelQueryRequest A deep clone of this object. Equals(ActionCancelQueryRequest) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionCancelQueryRequest other) Parameters other ActionCancelQueryRequest An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionCancelQueryRequest) Merges the given message into this one. public void MergeFrom(ActionCancelQueryRequest other) Parameters other ActionCancelQueryRequest Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionCancelQueryResult.Types.CancelResult.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionCancelQueryResult.Types.CancelResult.html",
    "title": "Enum ActionCancelQueryResult.Types.CancelResult | Apache Arrow .NET",
    "summary": "Enum ActionCancelQueryResult.Types.CancelResult Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum ActionCancelQueryResult.Types.CancelResult Fields [OriginalName(\"CANCEL_RESULT_CANCELLED\")] Cancelled = 1 The cancellation request is complete. Subsequent requests with the same payload may return CANCELLED or a NOT_FOUND error. [OriginalName(\"CANCEL_RESULT_CANCELLING\")] Cancelling = 2 The cancellation request is in progress. The client may retry the cancellation request. [OriginalName(\"CANCEL_RESULT_NOT_CANCELLABLE\")] NotCancellable = 3 The query is not cancellable. The client should not retry the cancellation request. [OriginalName(\"CANCEL_RESULT_UNSPECIFIED\")] Unspecified = 0 The cancellation status is unknown. Servers should avoid using this value (send a NOT_FOUND error if the requested query is not known). Clients can retry the request."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionCancelQueryResult.Types.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionCancelQueryResult.Types.html",
    "title": "Class ActionCancelQueryResult.Types | Apache Arrow .NET",
    "summary": "Class ActionCancelQueryResult.Types Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Container for nested types declared in the ActionCancelQueryResult message type. public static class ActionCancelQueryResult.Types Inheritance object ActionCancelQueryResult.Types Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Arrow.Flight.Protocol.Sql.ActionCancelQueryResult.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionCancelQueryResult.html",
    "title": "Class ActionCancelQueryResult | Apache Arrow .NET",
    "summary": "Class ActionCancelQueryResult Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll The result of cancelling a query. The result should be wrapped in a google.protobuf.Any message. This command is deprecated since 13.0.0. Use the \"CancelFlightInfo\" action with DoAction instead. [Obsolete] public sealed class ActionCancelQueryResult : IMessage<ActionCancelQueryResult>, IEquatable<ActionCancelQueryResult>, IDeepCloneable<ActionCancelQueryResult>, IBufferMessage, IMessage Inheritance object ActionCancelQueryResult Implements IMessage<ActionCancelQueryResult> IEquatable<ActionCancelQueryResult> IDeepCloneable<ActionCancelQueryResult> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionCancelQueryResult() public ActionCancelQueryResult() ActionCancelQueryResult(ActionCancelQueryResult) public ActionCancelQueryResult(ActionCancelQueryResult other) Parameters other ActionCancelQueryResult Fields ResultFieldNumber Field number for the \"result\" field. public const int ResultFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<ActionCancelQueryResult> Parser { get; } Property Value MessageParser<ActionCancelQueryResult> Result public ActionCancelQueryResult.Types.CancelResult Result { get; set; } Property Value ActionCancelQueryResult.Types.CancelResult Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionCancelQueryResult Clone() Returns ActionCancelQueryResult A deep clone of this object. Equals(ActionCancelQueryResult) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionCancelQueryResult other) Parameters other ActionCancelQueryResult An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionCancelQueryResult) Merges the given message into this one. public void MergeFrom(ActionCancelQueryResult other) Parameters other ActionCancelQueryResult Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionClosePreparedStatementRequest.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionClosePreparedStatementRequest.html",
    "title": "Class ActionClosePreparedStatementRequest | Apache Arrow .NET",
    "summary": "Class ActionClosePreparedStatementRequest Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Request message for the \"ClosePreparedStatement\" action on a Flight SQL enabled backend. Closes server resources associated with the prepared statement handle. public sealed class ActionClosePreparedStatementRequest : IMessage<ActionClosePreparedStatementRequest>, IEquatable<ActionClosePreparedStatementRequest>, IDeepCloneable<ActionClosePreparedStatementRequest>, IBufferMessage, IMessage Inheritance object ActionClosePreparedStatementRequest Implements IMessage<ActionClosePreparedStatementRequest> IEquatable<ActionClosePreparedStatementRequest> IDeepCloneable<ActionClosePreparedStatementRequest> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionClosePreparedStatementRequest() public ActionClosePreparedStatementRequest() ActionClosePreparedStatementRequest(ActionClosePreparedStatementRequest) public ActionClosePreparedStatementRequest(ActionClosePreparedStatementRequest other) Parameters other ActionClosePreparedStatementRequest Fields PreparedStatementHandleFieldNumber Field number for the \"prepared_statement_handle\" field. public const int PreparedStatementHandleFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<ActionClosePreparedStatementRequest> Parser { get; } Property Value MessageParser<ActionClosePreparedStatementRequest> PreparedStatementHandle Opaque handle for the prepared statement on the server. public ByteString PreparedStatementHandle { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionClosePreparedStatementRequest Clone() Returns ActionClosePreparedStatementRequest A deep clone of this object. Equals(ActionClosePreparedStatementRequest) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionClosePreparedStatementRequest other) Parameters other ActionClosePreparedStatementRequest An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionClosePreparedStatementRequest) Merges the given message into this one. public void MergeFrom(ActionClosePreparedStatementRequest other) Parameters other ActionClosePreparedStatementRequest Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionCreatePreparedStatementRequest.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionCreatePreparedStatementRequest.html",
    "title": "Class ActionCreatePreparedStatementRequest | Apache Arrow .NET",
    "summary": "Class ActionCreatePreparedStatementRequest Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Request message for the \"CreatePreparedStatement\" action on a Flight SQL enabled backend. public sealed class ActionCreatePreparedStatementRequest : IMessage<ActionCreatePreparedStatementRequest>, IEquatable<ActionCreatePreparedStatementRequest>, IDeepCloneable<ActionCreatePreparedStatementRequest>, IBufferMessage, IMessage Inheritance object ActionCreatePreparedStatementRequest Implements IMessage<ActionCreatePreparedStatementRequest> IEquatable<ActionCreatePreparedStatementRequest> IDeepCloneable<ActionCreatePreparedStatementRequest> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionCreatePreparedStatementRequest() public ActionCreatePreparedStatementRequest() ActionCreatePreparedStatementRequest(ActionCreatePreparedStatementRequest) public ActionCreatePreparedStatementRequest(ActionCreatePreparedStatementRequest other) Parameters other ActionCreatePreparedStatementRequest Fields QueryFieldNumber Field number for the \"query\" field. public const int QueryFieldNumber = 1 Field Value int TransactionIdFieldNumber Field number for the \"transaction_id\" field. public const int TransactionIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasTransactionId Gets whether the \"transaction_id\" field is set public bool HasTransactionId { get; } Property Value bool Parser public static MessageParser<ActionCreatePreparedStatementRequest> Parser { get; } Property Value MessageParser<ActionCreatePreparedStatementRequest> Query The valid SQL string to create a prepared statement for. public string Query { get; set; } Property Value string TransactionId Create/execute the prepared statement as part of this transaction (if unset, executions of the prepared statement will be auto-committed). public ByteString TransactionId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearTransactionId() Clears the value of the \"transaction_id\" field public void ClearTransactionId() Clone() Creates a deep clone of this object. public ActionCreatePreparedStatementRequest Clone() Returns ActionCreatePreparedStatementRequest A deep clone of this object. Equals(ActionCreatePreparedStatementRequest) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionCreatePreparedStatementRequest other) Parameters other ActionCreatePreparedStatementRequest An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionCreatePreparedStatementRequest) Merges the given message into this one. public void MergeFrom(ActionCreatePreparedStatementRequest other) Parameters other ActionCreatePreparedStatementRequest Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionCreatePreparedStatementResult.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionCreatePreparedStatementResult.html",
    "title": "Class ActionCreatePreparedStatementResult | Apache Arrow .NET",
    "summary": "Class ActionCreatePreparedStatementResult Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Wrap the result of a \"CreatePreparedStatement\" or \"CreatePreparedSubstraitPlan\" action. The resultant PreparedStatement can be closed either: Manually, through the \"ClosePreparedStatement\" action; Automatically, by a server timeout. The result should be wrapped in a google.protobuf.Any message. public sealed class ActionCreatePreparedStatementResult : IMessage<ActionCreatePreparedStatementResult>, IEquatable<ActionCreatePreparedStatementResult>, IDeepCloneable<ActionCreatePreparedStatementResult>, IBufferMessage, IMessage Inheritance object ActionCreatePreparedStatementResult Implements IMessage<ActionCreatePreparedStatementResult> IEquatable<ActionCreatePreparedStatementResult> IDeepCloneable<ActionCreatePreparedStatementResult> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionCreatePreparedStatementResult() public ActionCreatePreparedStatementResult() ActionCreatePreparedStatementResult(ActionCreatePreparedStatementResult) public ActionCreatePreparedStatementResult(ActionCreatePreparedStatementResult other) Parameters other ActionCreatePreparedStatementResult Fields DatasetSchemaFieldNumber Field number for the \"dataset_schema\" field. public const int DatasetSchemaFieldNumber = 2 Field Value int ParameterSchemaFieldNumber Field number for the \"parameter_schema\" field. public const int ParameterSchemaFieldNumber = 3 Field Value int PreparedStatementHandleFieldNumber Field number for the \"prepared_statement_handle\" field. public const int PreparedStatementHandleFieldNumber = 1 Field Value int Properties DatasetSchema If a result set generating query was provided, dataset_schema contains the schema of the result set. It should be an IPC-encapsulated Schema, as described in Schema.fbs. For some queries, the schema of the results may depend on the schema of the parameters. The server should provide its best guess as to the schema at this point. Clients must not assume that this schema, if provided, will be accurate. public ByteString DatasetSchema { get; set; } Property Value ByteString Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor ParameterSchema If the query provided contained parameters, parameter_schema contains the schema of the expected parameters. It should be an IPC-encapsulated Schema, as described in Schema.fbs. public ByteString ParameterSchema { get; set; } Property Value ByteString Parser public static MessageParser<ActionCreatePreparedStatementResult> Parser { get; } Property Value MessageParser<ActionCreatePreparedStatementResult> PreparedStatementHandle Opaque handle for the prepared statement on the server. public ByteString PreparedStatementHandle { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionCreatePreparedStatementResult Clone() Returns ActionCreatePreparedStatementResult A deep clone of this object. Equals(ActionCreatePreparedStatementResult) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionCreatePreparedStatementResult other) Parameters other ActionCreatePreparedStatementResult An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionCreatePreparedStatementResult) Merges the given message into this one. public void MergeFrom(ActionCreatePreparedStatementResult other) Parameters other ActionCreatePreparedStatementResult Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionCreatePreparedSubstraitPlanRequest.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionCreatePreparedSubstraitPlanRequest.html",
    "title": "Class ActionCreatePreparedSubstraitPlanRequest | Apache Arrow .NET",
    "summary": "Class ActionCreatePreparedSubstraitPlanRequest Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Request message for the \"CreatePreparedSubstraitPlan\" action on a Flight SQL enabled backend. public sealed class ActionCreatePreparedSubstraitPlanRequest : IMessage<ActionCreatePreparedSubstraitPlanRequest>, IEquatable<ActionCreatePreparedSubstraitPlanRequest>, IDeepCloneable<ActionCreatePreparedSubstraitPlanRequest>, IBufferMessage, IMessage Inheritance object ActionCreatePreparedSubstraitPlanRequest Implements IMessage<ActionCreatePreparedSubstraitPlanRequest> IEquatable<ActionCreatePreparedSubstraitPlanRequest> IDeepCloneable<ActionCreatePreparedSubstraitPlanRequest> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionCreatePreparedSubstraitPlanRequest() public ActionCreatePreparedSubstraitPlanRequest() ActionCreatePreparedSubstraitPlanRequest(ActionCreatePreparedSubstraitPlanRequest) public ActionCreatePreparedSubstraitPlanRequest(ActionCreatePreparedSubstraitPlanRequest other) Parameters other ActionCreatePreparedSubstraitPlanRequest Fields PlanFieldNumber Field number for the \"plan\" field. public const int PlanFieldNumber = 1 Field Value int TransactionIdFieldNumber Field number for the \"transaction_id\" field. public const int TransactionIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasTransactionId Gets whether the \"transaction_id\" field is set public bool HasTransactionId { get; } Property Value bool Parser public static MessageParser<ActionCreatePreparedSubstraitPlanRequest> Parser { get; } Property Value MessageParser<ActionCreatePreparedSubstraitPlanRequest> Plan The serialized substrait.Plan to create a prepared statement for. public SubstraitPlan Plan { get; set; } Property Value SubstraitPlan TransactionId Create/execute the prepared statement as part of this transaction (if unset, executions of the prepared statement will be auto-committed). public ByteString TransactionId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearTransactionId() Clears the value of the \"transaction_id\" field public void ClearTransactionId() Clone() Creates a deep clone of this object. public ActionCreatePreparedSubstraitPlanRequest Clone() Returns ActionCreatePreparedSubstraitPlanRequest A deep clone of this object. Equals(ActionCreatePreparedSubstraitPlanRequest) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionCreatePreparedSubstraitPlanRequest other) Parameters other ActionCreatePreparedSubstraitPlanRequest An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionCreatePreparedSubstraitPlanRequest) Merges the given message into this one. public void MergeFrom(ActionCreatePreparedSubstraitPlanRequest other) Parameters other ActionCreatePreparedSubstraitPlanRequest Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionEndSavepointRequest.Types.EndSavepoint.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionEndSavepointRequest.Types.EndSavepoint.html",
    "title": "Enum ActionEndSavepointRequest.Types.EndSavepoint | Apache Arrow .NET",
    "summary": "Enum ActionEndSavepointRequest.Types.EndSavepoint Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum ActionEndSavepointRequest.Types.EndSavepoint Fields [OriginalName(\"END_SAVEPOINT_RELEASE\")] Release = 1 Release the savepoint. [OriginalName(\"END_SAVEPOINT_ROLLBACK\")] Rollback = 2 Roll back to a savepoint. [OriginalName(\"END_SAVEPOINT_UNSPECIFIED\")] Unspecified = 0"
  },
  "api/Arrow.Flight.Protocol.Sql.ActionEndSavepointRequest.Types.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionEndSavepointRequest.Types.html",
    "title": "Class ActionEndSavepointRequest.Types | Apache Arrow .NET",
    "summary": "Class ActionEndSavepointRequest.Types Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Container for nested types declared in the ActionEndSavepointRequest message type. public static class ActionEndSavepointRequest.Types Inheritance object ActionEndSavepointRequest.Types Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Arrow.Flight.Protocol.Sql.ActionEndSavepointRequest.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionEndSavepointRequest.html",
    "title": "Class ActionEndSavepointRequest | Apache Arrow .NET",
    "summary": "Class ActionEndSavepointRequest Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Request message for the \"EndSavepoint\" action. Release (RELEASE) the savepoint or rollback (ROLLBACK) to the savepoint. Releasing a savepoint invalidates that savepoint. Rolling back to a savepoint does not invalidate the savepoint, but invalidates all savepoints created after the current savepoint. public sealed class ActionEndSavepointRequest : IMessage<ActionEndSavepointRequest>, IEquatable<ActionEndSavepointRequest>, IDeepCloneable<ActionEndSavepointRequest>, IBufferMessage, IMessage Inheritance object ActionEndSavepointRequest Implements IMessage<ActionEndSavepointRequest> IEquatable<ActionEndSavepointRequest> IDeepCloneable<ActionEndSavepointRequest> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionEndSavepointRequest() public ActionEndSavepointRequest() ActionEndSavepointRequest(ActionEndSavepointRequest) public ActionEndSavepointRequest(ActionEndSavepointRequest other) Parameters other ActionEndSavepointRequest Fields ActionFieldNumber Field number for the \"action\" field. public const int ActionFieldNumber = 2 Field Value int SavepointIdFieldNumber Field number for the \"savepoint_id\" field. public const int SavepointIdFieldNumber = 1 Field Value int Properties Action Whether to rollback/release the given savepoint. public ActionEndSavepointRequest.Types.EndSavepoint Action { get; set; } Property Value ActionEndSavepointRequest.Types.EndSavepoint Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<ActionEndSavepointRequest> Parser { get; } Property Value MessageParser<ActionEndSavepointRequest> SavepointId Opaque handle for the savepoint on the server. public ByteString SavepointId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionEndSavepointRequest Clone() Returns ActionEndSavepointRequest A deep clone of this object. Equals(ActionEndSavepointRequest) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionEndSavepointRequest other) Parameters other ActionEndSavepointRequest An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionEndSavepointRequest) Merges the given message into this one. public void MergeFrom(ActionEndSavepointRequest other) Parameters other ActionEndSavepointRequest Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.ActionEndTransactionRequest.Types.EndTransaction.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionEndTransactionRequest.Types.EndTransaction.html",
    "title": "Enum ActionEndTransactionRequest.Types.EndTransaction | Apache Arrow .NET",
    "summary": "Enum ActionEndTransactionRequest.Types.EndTransaction Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum ActionEndTransactionRequest.Types.EndTransaction Fields [OriginalName(\"END_TRANSACTION_COMMIT\")] Commit = 1 Commit the transaction. [OriginalName(\"END_TRANSACTION_ROLLBACK\")] Rollback = 2 Roll back the transaction. [OriginalName(\"END_TRANSACTION_UNSPECIFIED\")] Unspecified = 0"
  },
  "api/Arrow.Flight.Protocol.Sql.ActionEndTransactionRequest.Types.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionEndTransactionRequest.Types.html",
    "title": "Class ActionEndTransactionRequest.Types | Apache Arrow .NET",
    "summary": "Class ActionEndTransactionRequest.Types Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Container for nested types declared in the ActionEndTransactionRequest message type. public static class ActionEndTransactionRequest.Types Inheritance object ActionEndTransactionRequest.Types Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Arrow.Flight.Protocol.Sql.ActionEndTransactionRequest.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.ActionEndTransactionRequest.html",
    "title": "Class ActionEndTransactionRequest | Apache Arrow .NET",
    "summary": "Class ActionEndTransactionRequest Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Request message for the \"EndTransaction\" action. Commit (COMMIT) or rollback (ROLLBACK) the transaction. If the action completes successfully, the transaction handle is invalidated, as are all associated savepoints. public sealed class ActionEndTransactionRequest : IMessage<ActionEndTransactionRequest>, IEquatable<ActionEndTransactionRequest>, IDeepCloneable<ActionEndTransactionRequest>, IBufferMessage, IMessage Inheritance object ActionEndTransactionRequest Implements IMessage<ActionEndTransactionRequest> IEquatable<ActionEndTransactionRequest> IDeepCloneable<ActionEndTransactionRequest> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors ActionEndTransactionRequest() public ActionEndTransactionRequest() ActionEndTransactionRequest(ActionEndTransactionRequest) public ActionEndTransactionRequest(ActionEndTransactionRequest other) Parameters other ActionEndTransactionRequest Fields ActionFieldNumber Field number for the \"action\" field. public const int ActionFieldNumber = 2 Field Value int TransactionIdFieldNumber Field number for the \"transaction_id\" field. public const int TransactionIdFieldNumber = 1 Field Value int Properties Action Whether to commit/rollback the given transaction. public ActionEndTransactionRequest.Types.EndTransaction Action { get; set; } Property Value ActionEndTransactionRequest.Types.EndTransaction Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<ActionEndTransactionRequest> Parser { get; } Property Value MessageParser<ActionEndTransactionRequest> TransactionId Opaque handle for the transaction on the server. public ByteString TransactionId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ActionEndTransactionRequest Clone() Returns ActionEndTransactionRequest A deep clone of this object. Equals(ActionEndTransactionRequest) Indicates whether the current object is equal to another object of the same type. public bool Equals(ActionEndTransactionRequest other) Parameters other ActionEndTransactionRequest An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(ActionEndTransactionRequest) Merges the given message into this one. public void MergeFrom(ActionEndTransactionRequest other) Parameters other ActionEndTransactionRequest Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetCatalogs.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetCatalogs.html",
    "title": "Class CommandGetCatalogs | Apache Arrow .NET",
    "summary": "Class CommandGetCatalogs Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a request to retrieve the list of catalogs on a Flight SQL enabled backend. The definition of a catalog depends on vendor/implementation. It is usually the database itself Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < catalog_name: utf8 not null The returned data should be ordered by catalog_name. public sealed class CommandGetCatalogs : IMessage<CommandGetCatalogs>, IEquatable<CommandGetCatalogs>, IDeepCloneable<CommandGetCatalogs>, IBufferMessage, IMessage Inheritance object CommandGetCatalogs Implements IMessage<CommandGetCatalogs> IEquatable<CommandGetCatalogs> IDeepCloneable<CommandGetCatalogs> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetCatalogs() public CommandGetCatalogs() CommandGetCatalogs(CommandGetCatalogs) public CommandGetCatalogs(CommandGetCatalogs other) Parameters other CommandGetCatalogs Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<CommandGetCatalogs> Parser { get; } Property Value MessageParser<CommandGetCatalogs> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public CommandGetCatalogs Clone() Returns CommandGetCatalogs A deep clone of this object. Equals(CommandGetCatalogs) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetCatalogs other) Parameters other CommandGetCatalogs An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetCatalogs) Merges the given message into this one. public void MergeFrom(CommandGetCatalogs other) Parameters other CommandGetCatalogs Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetCrossReference.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetCrossReference.html",
    "title": "Class CommandGetCrossReference | Apache Arrow .NET",
    "summary": "Class CommandGetCrossReference Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a request to retrieve a description of the foreign key columns in the given foreign key table that reference the primary key or the columns representing a unique constraint of the parent table (could be the same or a different table) on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < pk_catalog_name: utf8, pk_db_schema_name: utf8, pk_table_name: utf8 not null, pk_column_name: utf8 not null, fk_catalog_name: utf8, fk_db_schema_name: utf8, fk_table_name: utf8 not null, fk_column_name: utf8 not null, key_sequence: int32 not null, fk_key_name: utf8, pk_key_name: utf8, update_rule: uint8 not null, delete_rule: uint8 not null The returned data should be ordered by pk_catalog_name, pk_db_schema_name, pk_table_name, pk_key_name, then key_sequence. update_rule and delete_rule returns a byte that is equivalent to actions: 0 = CASCADE 1 = RESTRICT 2 = SET NULL 3 = NO ACTION 4 = SET DEFAULT public sealed class CommandGetCrossReference : IMessage<CommandGetCrossReference>, IEquatable<CommandGetCrossReference>, IDeepCloneable<CommandGetCrossReference>, IBufferMessage, IMessage Inheritance object CommandGetCrossReference Implements IMessage<CommandGetCrossReference> IEquatable<CommandGetCrossReference> IDeepCloneable<CommandGetCrossReference> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetCrossReference() public CommandGetCrossReference() CommandGetCrossReference(CommandGetCrossReference) public CommandGetCrossReference(CommandGetCrossReference other) Parameters other CommandGetCrossReference Fields FkCatalogFieldNumber Field number for the \"fk_catalog\" field. public const int FkCatalogFieldNumber = 4 Field Value int FkDbSchemaFieldNumber Field number for the \"fk_db_schema\" field. public const int FkDbSchemaFieldNumber = 5 Field Value int FkTableFieldNumber Field number for the \"fk_table\" field. public const int FkTableFieldNumber = 6 Field Value int PkCatalogFieldNumber Field number for the \"pk_catalog\" field. public const int PkCatalogFieldNumber = 1 Field Value int PkDbSchemaFieldNumber Field number for the \"pk_db_schema\" field. public const int PkDbSchemaFieldNumber = 2 Field Value int PkTableFieldNumber Field number for the \"pk_table\" field. public const int PkTableFieldNumber = 3 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor FkCatalog The catalog name where the foreign table is. An empty string retrieves those without a catalog. If omitted the catalog name should not be used to narrow the search. public string FkCatalog { get; set; } Property Value string FkDbSchema The schema name where the foreign table is. An empty string retrieves those without a schema. If omitted the schema name should not be used to narrow the search. public string FkDbSchema { get; set; } Property Value string FkTable The foreign table name. It cannot be null. public string FkTable { get; set; } Property Value string HasFkCatalog Gets whether the \"fk_catalog\" field is set public bool HasFkCatalog { get; } Property Value bool HasFkDbSchema Gets whether the \"fk_db_schema\" field is set public bool HasFkDbSchema { get; } Property Value bool HasPkCatalog Gets whether the \"pk_catalog\" field is set public bool HasPkCatalog { get; } Property Value bool HasPkDbSchema Gets whether the \"pk_db_schema\" field is set public bool HasPkDbSchema { get; } Property Value bool Parser public static MessageParser<CommandGetCrossReference> Parser { get; } Property Value MessageParser<CommandGetCrossReference> PkCatalog The catalog name where the parent table is. An empty string retrieves those without a catalog. If omitted the catalog name should not be used to narrow the search. public string PkCatalog { get; set; } Property Value string PkDbSchema The Schema name where the parent table is. An empty string retrieves those without a schema. If omitted the schema name should not be used to narrow the search. public string PkDbSchema { get; set; } Property Value string PkTable The parent table name. It cannot be null. public string PkTable { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearFkCatalog() Clears the value of the \"fk_catalog\" field public void ClearFkCatalog() ClearFkDbSchema() Clears the value of the \"fk_db_schema\" field public void ClearFkDbSchema() ClearPkCatalog() Clears the value of the \"pk_catalog\" field public void ClearPkCatalog() ClearPkDbSchema() Clears the value of the \"pk_db_schema\" field public void ClearPkDbSchema() Clone() Creates a deep clone of this object. public CommandGetCrossReference Clone() Returns CommandGetCrossReference A deep clone of this object. Equals(CommandGetCrossReference) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetCrossReference other) Parameters other CommandGetCrossReference An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetCrossReference) Merges the given message into this one. public void MergeFrom(CommandGetCrossReference other) Parameters other CommandGetCrossReference Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetDbSchemas.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetDbSchemas.html",
    "title": "Class CommandGetDbSchemas | Apache Arrow .NET",
    "summary": "Class CommandGetDbSchemas Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a request to retrieve the list of database schemas on a Flight SQL enabled backend. The definition of a database schema depends on vendor/implementation. It is usually a collection of tables. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < catalog_name: utf8, db_schema_name: utf8 not null The returned data should be ordered by catalog_name, then db_schema_name. public sealed class CommandGetDbSchemas : IMessage<CommandGetDbSchemas>, IEquatable<CommandGetDbSchemas>, IDeepCloneable<CommandGetDbSchemas>, IBufferMessage, IMessage Inheritance object CommandGetDbSchemas Implements IMessage<CommandGetDbSchemas> IEquatable<CommandGetDbSchemas> IDeepCloneable<CommandGetDbSchemas> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetDbSchemas() public CommandGetDbSchemas() CommandGetDbSchemas(CommandGetDbSchemas) public CommandGetDbSchemas(CommandGetDbSchemas other) Parameters other CommandGetDbSchemas Fields CatalogFieldNumber Field number for the \"catalog\" field. public const int CatalogFieldNumber = 1 Field Value int DbSchemaFilterPatternFieldNumber Field number for the \"db_schema_filter_pattern\" field. public const int DbSchemaFilterPatternFieldNumber = 2 Field Value int Properties Catalog Specifies the Catalog to search for the tables. An empty string retrieves those without a catalog. If omitted the catalog name should not be used to narrow the search. public string Catalog { get; set; } Property Value string DbSchemaFilterPattern Specifies a filter pattern for schemas to search for. When no db_schema_filter_pattern is provided, the pattern will not be used to narrow the search. In the pattern string, two special characters can be used to denote matching rules: \"%\" means to match any substring with 0 or more characters. \"_\" means to match any one character. public string DbSchemaFilterPattern { get; set; } Property Value string Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasCatalog Gets whether the \"catalog\" field is set public bool HasCatalog { get; } Property Value bool HasDbSchemaFilterPattern Gets whether the \"db_schema_filter_pattern\" field is set public bool HasDbSchemaFilterPattern { get; } Property Value bool Parser public static MessageParser<CommandGetDbSchemas> Parser { get; } Property Value MessageParser<CommandGetDbSchemas> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearCatalog() Clears the value of the \"catalog\" field public void ClearCatalog() ClearDbSchemaFilterPattern() Clears the value of the \"db_schema_filter_pattern\" field public void ClearDbSchemaFilterPattern() Clone() Creates a deep clone of this object. public CommandGetDbSchemas Clone() Returns CommandGetDbSchemas A deep clone of this object. Equals(CommandGetDbSchemas) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetDbSchemas other) Parameters other CommandGetDbSchemas An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetDbSchemas) Merges the given message into this one. public void MergeFrom(CommandGetDbSchemas other) Parameters other CommandGetDbSchemas Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetExportedKeys.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetExportedKeys.html",
    "title": "Class CommandGetExportedKeys | Apache Arrow .NET",
    "summary": "Class CommandGetExportedKeys Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a request to retrieve a description of the foreign key columns that reference the given table's primary key columns (the foreign keys exported by a table) of a table on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < pk_catalog_name: utf8, pk_db_schema_name: utf8, pk_table_name: utf8 not null, pk_column_name: utf8 not null, fk_catalog_name: utf8, fk_db_schema_name: utf8, fk_table_name: utf8 not null, fk_column_name: utf8 not null, key_sequence: int32 not null, fk_key_name: utf8, pk_key_name: utf8, update_rule: uint8 not null, delete_rule: uint8 not null The returned data should be ordered by fk_catalog_name, fk_db_schema_name, fk_table_name, fk_key_name, then key_sequence. update_rule and delete_rule returns a byte that is equivalent to actions declared on UpdateDeleteRules enum. public sealed class CommandGetExportedKeys : IMessage<CommandGetExportedKeys>, IEquatable<CommandGetExportedKeys>, IDeepCloneable<CommandGetExportedKeys>, IBufferMessage, IMessage Inheritance object CommandGetExportedKeys Implements IMessage<CommandGetExportedKeys> IEquatable<CommandGetExportedKeys> IDeepCloneable<CommandGetExportedKeys> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetExportedKeys() public CommandGetExportedKeys() CommandGetExportedKeys(CommandGetExportedKeys) public CommandGetExportedKeys(CommandGetExportedKeys other) Parameters other CommandGetExportedKeys Fields CatalogFieldNumber Field number for the \"catalog\" field. public const int CatalogFieldNumber = 1 Field Value int DbSchemaFieldNumber Field number for the \"db_schema\" field. public const int DbSchemaFieldNumber = 2 Field Value int TableFieldNumber Field number for the \"table\" field. public const int TableFieldNumber = 3 Field Value int Properties Catalog Specifies the catalog to search for the foreign key table. An empty string retrieves those without a catalog. If omitted the catalog name should not be used to narrow the search. public string Catalog { get; set; } Property Value string DbSchema Specifies the schema to search for the foreign key table. An empty string retrieves those without a schema. If omitted the schema name should not be used to narrow the search. public string DbSchema { get; set; } Property Value string Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasCatalog Gets whether the \"catalog\" field is set public bool HasCatalog { get; } Property Value bool HasDbSchema Gets whether the \"db_schema\" field is set public bool HasDbSchema { get; } Property Value bool Parser public static MessageParser<CommandGetExportedKeys> Parser { get; } Property Value MessageParser<CommandGetExportedKeys> Table Specifies the foreign key table to get the foreign keys for. public string Table { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearCatalog() Clears the value of the \"catalog\" field public void ClearCatalog() ClearDbSchema() Clears the value of the \"db_schema\" field public void ClearDbSchema() Clone() Creates a deep clone of this object. public CommandGetExportedKeys Clone() Returns CommandGetExportedKeys A deep clone of this object. Equals(CommandGetExportedKeys) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetExportedKeys other) Parameters other CommandGetExportedKeys An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetExportedKeys) Merges the given message into this one. public void MergeFrom(CommandGetExportedKeys other) Parameters other CommandGetExportedKeys Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetImportedKeys.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetImportedKeys.html",
    "title": "Class CommandGetImportedKeys | Apache Arrow .NET",
    "summary": "Class CommandGetImportedKeys Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a request to retrieve the foreign keys of a table on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < pk_catalog_name: utf8, pk_db_schema_name: utf8, pk_table_name: utf8 not null, pk_column_name: utf8 not null, fk_catalog_name: utf8, fk_db_schema_name: utf8, fk_table_name: utf8 not null, fk_column_name: utf8 not null, key_sequence: int32 not null, fk_key_name: utf8, pk_key_name: utf8, update_rule: uint8 not null, delete_rule: uint8 not null The returned data should be ordered by pk_catalog_name, pk_db_schema_name, pk_table_name, pk_key_name, then key_sequence. update_rule and delete_rule returns a byte that is equivalent to actions: 0 = CASCADE 1 = RESTRICT 2 = SET NULL 3 = NO ACTION 4 = SET DEFAULT public sealed class CommandGetImportedKeys : IMessage<CommandGetImportedKeys>, IEquatable<CommandGetImportedKeys>, IDeepCloneable<CommandGetImportedKeys>, IBufferMessage, IMessage Inheritance object CommandGetImportedKeys Implements IMessage<CommandGetImportedKeys> IEquatable<CommandGetImportedKeys> IDeepCloneable<CommandGetImportedKeys> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetImportedKeys() public CommandGetImportedKeys() CommandGetImportedKeys(CommandGetImportedKeys) public CommandGetImportedKeys(CommandGetImportedKeys other) Parameters other CommandGetImportedKeys Fields CatalogFieldNumber Field number for the \"catalog\" field. public const int CatalogFieldNumber = 1 Field Value int DbSchemaFieldNumber Field number for the \"db_schema\" field. public const int DbSchemaFieldNumber = 2 Field Value int TableFieldNumber Field number for the \"table\" field. public const int TableFieldNumber = 3 Field Value int Properties Catalog Specifies the catalog to search for the primary key table. An empty string retrieves those without a catalog. If omitted the catalog name should not be used to narrow the search. public string Catalog { get; set; } Property Value string DbSchema Specifies the schema to search for the primary key table. An empty string retrieves those without a schema. If omitted the schema name should not be used to narrow the search. public string DbSchema { get; set; } Property Value string Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasCatalog Gets whether the \"catalog\" field is set public bool HasCatalog { get; } Property Value bool HasDbSchema Gets whether the \"db_schema\" field is set public bool HasDbSchema { get; } Property Value bool Parser public static MessageParser<CommandGetImportedKeys> Parser { get; } Property Value MessageParser<CommandGetImportedKeys> Table Specifies the primary key table to get the foreign keys for. public string Table { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearCatalog() Clears the value of the \"catalog\" field public void ClearCatalog() ClearDbSchema() Clears the value of the \"db_schema\" field public void ClearDbSchema() Clone() Creates a deep clone of this object. public CommandGetImportedKeys Clone() Returns CommandGetImportedKeys A deep clone of this object. Equals(CommandGetImportedKeys) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetImportedKeys other) Parameters other CommandGetImportedKeys An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetImportedKeys) Merges the given message into this one. public void MergeFrom(CommandGetImportedKeys other) Parameters other CommandGetImportedKeys Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetPrimaryKeys.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetPrimaryKeys.html",
    "title": "Class CommandGetPrimaryKeys | Apache Arrow .NET",
    "summary": "Class CommandGetPrimaryKeys Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a request to retrieve the primary keys of a table on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < catalog_name: utf8, db_schema_name: utf8, table_name: utf8 not null, column_name: utf8 not null, key_name: utf8, key_sequence: int32 not null The returned data should be ordered by catalog_name, db_schema_name, table_name, key_name, then key_sequence. public sealed class CommandGetPrimaryKeys : IMessage<CommandGetPrimaryKeys>, IEquatable<CommandGetPrimaryKeys>, IDeepCloneable<CommandGetPrimaryKeys>, IBufferMessage, IMessage Inheritance object CommandGetPrimaryKeys Implements IMessage<CommandGetPrimaryKeys> IEquatable<CommandGetPrimaryKeys> IDeepCloneable<CommandGetPrimaryKeys> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetPrimaryKeys() public CommandGetPrimaryKeys() CommandGetPrimaryKeys(CommandGetPrimaryKeys) public CommandGetPrimaryKeys(CommandGetPrimaryKeys other) Parameters other CommandGetPrimaryKeys Fields CatalogFieldNumber Field number for the \"catalog\" field. public const int CatalogFieldNumber = 1 Field Value int DbSchemaFieldNumber Field number for the \"db_schema\" field. public const int DbSchemaFieldNumber = 2 Field Value int TableFieldNumber Field number for the \"table\" field. public const int TableFieldNumber = 3 Field Value int Properties Catalog Specifies the catalog to search for the table. An empty string retrieves those without a catalog. If omitted the catalog name should not be used to narrow the search. public string Catalog { get; set; } Property Value string DbSchema Specifies the schema to search for the table. An empty string retrieves those without a schema. If omitted the schema name should not be used to narrow the search. public string DbSchema { get; set; } Property Value string Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasCatalog Gets whether the \"catalog\" field is set public bool HasCatalog { get; } Property Value bool HasDbSchema Gets whether the \"db_schema\" field is set public bool HasDbSchema { get; } Property Value bool Parser public static MessageParser<CommandGetPrimaryKeys> Parser { get; } Property Value MessageParser<CommandGetPrimaryKeys> Table Specifies the table to get the primary keys for. public string Table { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearCatalog() Clears the value of the \"catalog\" field public void ClearCatalog() ClearDbSchema() Clears the value of the \"db_schema\" field public void ClearDbSchema() Clone() Creates a deep clone of this object. public CommandGetPrimaryKeys Clone() Returns CommandGetPrimaryKeys A deep clone of this object. Equals(CommandGetPrimaryKeys) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetPrimaryKeys other) Parameters other CommandGetPrimaryKeys An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetPrimaryKeys) Merges the given message into this one. public void MergeFrom(CommandGetPrimaryKeys other) Parameters other CommandGetPrimaryKeys Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetSqlInfo.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetSqlInfo.html",
    "title": "Class CommandGetSqlInfo | Apache Arrow .NET",
    "summary": "Class CommandGetSqlInfo Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a metadata request. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the metadata request. The returned Arrow schema will be: < info_name: uint32 not null, value: dense_union< string_value: utf8, bool_value: bool, bigint_value: int64, int32_bitmask: int32, string_list: list<string_data: utf8> int32_to_int32_list_map: map<key: int32, value: list<\\(data\\): int32>> where there is one row per requested piece of metadata information. public sealed class CommandGetSqlInfo : IMessage<CommandGetSqlInfo>, IEquatable<CommandGetSqlInfo>, IDeepCloneable<CommandGetSqlInfo>, IBufferMessage, IMessage Inheritance object CommandGetSqlInfo Implements IMessage<CommandGetSqlInfo> IEquatable<CommandGetSqlInfo> IDeepCloneable<CommandGetSqlInfo> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetSqlInfo() public CommandGetSqlInfo() CommandGetSqlInfo(CommandGetSqlInfo) public CommandGetSqlInfo(CommandGetSqlInfo other) Parameters other CommandGetSqlInfo Fields InfoFieldNumber Field number for the \"info\" field. public const int InfoFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Info Values are modelled after ODBC's SQLGetInfo() function. This information is intended to provide Flight SQL clients with basic, SQL syntax and SQL functions related information. More information types can be added in future releases. E.g. more SQL syntax support types, scalar functions support, type conversion support etc. Note that the set of metadata may expand. Initially, Flight SQL will support the following information types: Server Information - Range [0-500) Syntax Information - Range [500-1000) Range [0-10,000) is reserved for defaults (see SqlInfo enum for default options). Custom options should start at 10,000. If omitted, then all metadata will be retrieved. Flight SQL Servers may choose to include additional metadata above and beyond the specified set, however they must at least return the specified set. IDs ranging from 0 to 10,000 (exclusive) are reserved for future use. If additional metadata is included, the metadata IDs should start from 10,000. public RepeatedField<uint> Info { get; } Property Value RepeatedField<uint> Parser public static MessageParser<CommandGetSqlInfo> Parser { get; } Property Value MessageParser<CommandGetSqlInfo> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public CommandGetSqlInfo Clone() Returns CommandGetSqlInfo A deep clone of this object. Equals(CommandGetSqlInfo) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetSqlInfo other) Parameters other CommandGetSqlInfo An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetSqlInfo) Merges the given message into this one. public void MergeFrom(CommandGetSqlInfo other) Parameters other CommandGetSqlInfo Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetTableTypes.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetTableTypes.html",
    "title": "Class CommandGetTableTypes | Apache Arrow .NET",
    "summary": "Class CommandGetTableTypes Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a request to retrieve the list of table types on a Flight SQL enabled backend. The table types depend on vendor/implementation. It is usually used to separate tables from views or system tables. TABLE, VIEW, and SYSTEM TABLE are commonly supported. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < table_type: utf8 not null The returned data should be ordered by table_type. public sealed class CommandGetTableTypes : IMessage<CommandGetTableTypes>, IEquatable<CommandGetTableTypes>, IDeepCloneable<CommandGetTableTypes>, IBufferMessage, IMessage Inheritance object CommandGetTableTypes Implements IMessage<CommandGetTableTypes> IEquatable<CommandGetTableTypes> IDeepCloneable<CommandGetTableTypes> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetTableTypes() public CommandGetTableTypes() CommandGetTableTypes(CommandGetTableTypes) public CommandGetTableTypes(CommandGetTableTypes other) Parameters other CommandGetTableTypes Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<CommandGetTableTypes> Parser { get; } Property Value MessageParser<CommandGetTableTypes> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public CommandGetTableTypes Clone() Returns CommandGetTableTypes A deep clone of this object. Equals(CommandGetTableTypes) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetTableTypes other) Parameters other CommandGetTableTypes An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetTableTypes) Merges the given message into this one. public void MergeFrom(CommandGetTableTypes other) Parameters other CommandGetTableTypes Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetTables.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetTables.html",
    "title": "Class CommandGetTables | Apache Arrow .NET",
    "summary": "Class CommandGetTables Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a request to retrieve the list of tables, and optionally their schemas, on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < catalog_name: utf8, db_schema_name: utf8, table_name: utf8 not null, table_type: utf8 not null, [optional] table_schema: bytes not null (schema of the table as described in Schema.fbs::Schema, it is serialized as an IPC message.) Fields on table_schema may contain the following metadata: ARROW:FLIGHT:SQL:CATALOG_NAME - Table's catalog name ARROW:FLIGHT:SQL:DB_SCHEMA_NAME - Database schema name ARROW:FLIGHT:SQL:TABLE_NAME - Table name ARROW:FLIGHT:SQL:TYPE_NAME - The data source-specific name for the data type of the column. ARROW:FLIGHT:SQL:PRECISION - Column precision/size ARROW:FLIGHT:SQL:SCALE - Column scale/decimal digits if applicable ARROW:FLIGHT:SQL:IS_AUTO_INCREMENT - \"1\" indicates if the column is auto incremented, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_CASE_SENSITIVE - \"1\" indicates if the column is case-sensitive, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_READ_ONLY - \"1\" indicates if the column is read only, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_SEARCHABLE - \"1\" indicates if the column is searchable via WHERE clause, \"0\" otherwise. ARROW:FLIGHT:SQL:REMARKS - A comment describing the column. This field has been added after all others, clients should be prepared to find it missing. The returned data should be ordered by catalog_name, db_schema_name, table_name, then table_type, followed by table_schema if requested. public sealed class CommandGetTables : IMessage<CommandGetTables>, IEquatable<CommandGetTables>, IDeepCloneable<CommandGetTables>, IBufferMessage, IMessage Inheritance object CommandGetTables Implements IMessage<CommandGetTables> IEquatable<CommandGetTables> IDeepCloneable<CommandGetTables> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetTables() public CommandGetTables() CommandGetTables(CommandGetTables) public CommandGetTables(CommandGetTables other) Parameters other CommandGetTables Fields CatalogFieldNumber Field number for the \"catalog\" field. public const int CatalogFieldNumber = 1 Field Value int DbSchemaFilterPatternFieldNumber Field number for the \"db_schema_filter_pattern\" field. public const int DbSchemaFilterPatternFieldNumber = 2 Field Value int IncludeSchemaFieldNumber Field number for the \"include_schema\" field. public const int IncludeSchemaFieldNumber = 5 Field Value int TableNameFilterPatternFieldNumber Field number for the \"table_name_filter_pattern\" field. public const int TableNameFilterPatternFieldNumber = 3 Field Value int TableTypesFieldNumber Field number for the \"table_types\" field. public const int TableTypesFieldNumber = 4 Field Value int Properties Catalog Specifies the Catalog to search for the tables. An empty string retrieves those without a catalog. If omitted the catalog name should not be used to narrow the search. public string Catalog { get; set; } Property Value string DbSchemaFilterPattern Specifies a filter pattern for schemas to search for. When no db_schema_filter_pattern is provided, all schemas matching other filters are searched. In the pattern string, two special characters can be used to denote matching rules: \"%\" means to match any substring with 0 or more characters. \"_\" means to match any one character. public string DbSchemaFilterPattern { get; set; } Property Value string Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasCatalog Gets whether the \"catalog\" field is set public bool HasCatalog { get; } Property Value bool HasDbSchemaFilterPattern Gets whether the \"db_schema_filter_pattern\" field is set public bool HasDbSchemaFilterPattern { get; } Property Value bool HasTableNameFilterPattern Gets whether the \"table_name_filter_pattern\" field is set public bool HasTableNameFilterPattern { get; } Property Value bool IncludeSchema Specifies if the Arrow schema should be returned for found tables. public bool IncludeSchema { get; set; } Property Value bool Parser public static MessageParser<CommandGetTables> Parser { get; } Property Value MessageParser<CommandGetTables> TableNameFilterPattern Specifies a filter pattern for tables to search for. When no table_name_filter_pattern is provided, all tables matching other filters are searched. In the pattern string, two special characters can be used to denote matching rules: \"%\" means to match any substring with 0 or more characters. \"_\" means to match any one character. public string TableNameFilterPattern { get; set; } Property Value string TableTypes Specifies a filter of table types which must match. The table types depend on vendor/implementation. It is usually used to separate tables from views or system tables. TABLE, VIEW, and SYSTEM TABLE are commonly supported. public RepeatedField<string> TableTypes { get; } Property Value RepeatedField<string> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearCatalog() Clears the value of the \"catalog\" field public void ClearCatalog() ClearDbSchemaFilterPattern() Clears the value of the \"db_schema_filter_pattern\" field public void ClearDbSchemaFilterPattern() ClearTableNameFilterPattern() Clears the value of the \"table_name_filter_pattern\" field public void ClearTableNameFilterPattern() Clone() Creates a deep clone of this object. public CommandGetTables Clone() Returns CommandGetTables A deep clone of this object. Equals(CommandGetTables) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetTables other) Parameters other CommandGetTables An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetTables) Merges the given message into this one. public void MergeFrom(CommandGetTables other) Parameters other CommandGetTables Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandGetXdbcTypeInfo.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandGetXdbcTypeInfo.html",
    "title": "Class CommandGetXdbcTypeInfo | Apache Arrow .NET",
    "summary": "Class CommandGetXdbcTypeInfo Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a request to retrieve information about data type supported on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the schema of the query. GetFlightInfo: execute the catalog metadata request. The returned schema will be: < type_name: utf8 not null (The name of the data type, for example: VARCHAR, INTEGER, etc), data_type: int32 not null (The SQL data type), column_size: int32 (The maximum size supported by that column. In case of exact numeric types, this represents the maximum precision. In case of string types, this represents the character length. In case of datetime data types, this represents the length in characters of the string representation. NULL is returned for data types where column size is not applicable.), literal_prefix: utf8 (Character or characters used to prefix a literal, NULL is returned for data types where a literal prefix is not applicable.), literal_suffix: utf8 (Character or characters used to terminate a literal, NULL is returned for data types where a literal suffix is not applicable.), create_params: list<utf8 not null> (A list of keywords corresponding to which parameters can be used when creating a column for that specific type. NULL is returned if there are no parameters for the data type definition.), nullable: int32 not null (Shows if the data type accepts a NULL value. The possible values can be seen in the Nullable enum.), case_sensitive: bool not null (Shows if a character data type is case-sensitive in collations and comparisons), searchable: int32 not null (Shows how the data type is used in a WHERE clause. The possible values can be seen in the Searchable enum.), unsigned_attribute: bool (Shows if the data type is unsigned. NULL is returned if the attribute is not applicable to the data type or the data type is not numeric.), fixed_prec_scale: bool not null (Shows if the data type has predefined fixed precision and scale.), auto_increment: bool (Shows if the data type is auto incremental. NULL is returned if the attribute is not applicable to the data type or the data type is not numeric.), local_type_name: utf8 (Localized version of the data source-dependent name of the data type. NULL is returned if a localized name is not supported by the data source), minimum_scale: int32 (The minimum scale of the data type on the data source. If a data type has a fixed scale, the MINIMUM_SCALE and MAXIMUM_SCALE columns both contain this value. NULL is returned if scale is not applicable.), maximum_scale: int32 (The maximum scale of the data type on the data source. NULL is returned if scale is not applicable.), sql_data_type: int32 not null (The value of the SQL DATA TYPE which has the same values as data_type value. Except for interval and datetime, which uses generic values. More info about those types can be obtained through datetime_subcode. The possible values can be seen in the XdbcDataType enum.), datetime_subcode: int32 (Only used when the SQL DATA TYPE is interval or datetime. It contains its sub types. For type different from interval and datetime, this value is NULL. The possible values can be seen in the XdbcDatetimeSubcode enum.), num_prec_radix: int32 (If the data type is an approximate numeric type, this column contains the value 2 to indicate that COLUMN_SIZE specifies a number of bits. For exact numeric types, this column contains the value 10 to indicate that column size specifies a number of decimal digits. Otherwise, this column is NULL.), interval_precision: int32 (If the data type is an interval data type, then this column contains the value of the interval leading precision. Otherwise, this column is NULL. This fields is only relevant to be used by ODBC). The returned data should be ordered by data_type and then by type_name. public sealed class CommandGetXdbcTypeInfo : IMessage<CommandGetXdbcTypeInfo>, IEquatable<CommandGetXdbcTypeInfo>, IDeepCloneable<CommandGetXdbcTypeInfo>, IBufferMessage, IMessage Inheritance object CommandGetXdbcTypeInfo Implements IMessage<CommandGetXdbcTypeInfo> IEquatable<CommandGetXdbcTypeInfo> IDeepCloneable<CommandGetXdbcTypeInfo> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandGetXdbcTypeInfo() public CommandGetXdbcTypeInfo() CommandGetXdbcTypeInfo(CommandGetXdbcTypeInfo) public CommandGetXdbcTypeInfo(CommandGetXdbcTypeInfo other) Parameters other CommandGetXdbcTypeInfo Fields DataTypeFieldNumber Field number for the \"data_type\" field. public const int DataTypeFieldNumber = 1 Field Value int Properties DataType Specifies the data type to search for the info. public int DataType { get; set; } Property Value int Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasDataType Gets whether the \"data_type\" field is set public bool HasDataType { get; } Property Value bool Parser public static MessageParser<CommandGetXdbcTypeInfo> Parser { get; } Property Value MessageParser<CommandGetXdbcTypeInfo> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearDataType() Clears the value of the \"data_type\" field public void ClearDataType() Clone() Creates a deep clone of this object. public CommandGetXdbcTypeInfo Clone() Returns CommandGetXdbcTypeInfo A deep clone of this object. Equals(CommandGetXdbcTypeInfo) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandGetXdbcTypeInfo other) Parameters other CommandGetXdbcTypeInfo An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandGetXdbcTypeInfo) Merges the given message into this one. public void MergeFrom(CommandGetXdbcTypeInfo other) Parameters other CommandGetXdbcTypeInfo Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandPreparedStatementQuery.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandPreparedStatementQuery.html",
    "title": "Class CommandPreparedStatementQuery | Apache Arrow .NET",
    "summary": "Class CommandPreparedStatementQuery Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents an instance of executing a prepared statement. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. Fields on this schema may contain the following metadata: ARROW:FLIGHT:SQL:CATALOG_NAME - Table's catalog name ARROW:FLIGHT:SQL:DB_SCHEMA_NAME - Database schema name ARROW:FLIGHT:SQL:TABLE_NAME - Table name ARROW:FLIGHT:SQL:TYPE_NAME - The data source-specific name for the data type of the column. ARROW:FLIGHT:SQL:PRECISION - Column precision/size ARROW:FLIGHT:SQL:SCALE - Column scale/decimal digits if applicable ARROW:FLIGHT:SQL:IS_AUTO_INCREMENT - \"1\" indicates if the column is auto incremented, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_CASE_SENSITIVE - \"1\" indicates if the column is case-sensitive, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_READ_ONLY - \"1\" indicates if the column is read only, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_SEARCHABLE - \"1\" indicates if the column is searchable via WHERE clause, \"0\" otherwise. ARROW:FLIGHT:SQL:REMARKS - A comment describing the column. This field has been added after all others, clients should be prepared to find it missing. If the schema is retrieved after parameter values have been bound with DoPut, then the server should account for the parameters when determining the schema. DoPut: bind parameter values. All of the bound parameter sets will be executed as a single atomic execution. GetFlightInfo: execute the prepared statement instance. public sealed class CommandPreparedStatementQuery : IMessage<CommandPreparedStatementQuery>, IEquatable<CommandPreparedStatementQuery>, IDeepCloneable<CommandPreparedStatementQuery>, IBufferMessage, IMessage Inheritance object CommandPreparedStatementQuery Implements IMessage<CommandPreparedStatementQuery> IEquatable<CommandPreparedStatementQuery> IDeepCloneable<CommandPreparedStatementQuery> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandPreparedStatementQuery() public CommandPreparedStatementQuery() CommandPreparedStatementQuery(CommandPreparedStatementQuery) public CommandPreparedStatementQuery(CommandPreparedStatementQuery other) Parameters other CommandPreparedStatementQuery Fields PreparedStatementHandleFieldNumber Field number for the \"prepared_statement_handle\" field. public const int PreparedStatementHandleFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<CommandPreparedStatementQuery> Parser { get; } Property Value MessageParser<CommandPreparedStatementQuery> PreparedStatementHandle Opaque handle for the prepared statement on the server. public ByteString PreparedStatementHandle { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public CommandPreparedStatementQuery Clone() Returns CommandPreparedStatementQuery A deep clone of this object. Equals(CommandPreparedStatementQuery) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandPreparedStatementQuery other) Parameters other CommandPreparedStatementQuery An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandPreparedStatementQuery) Merges the given message into this one. public void MergeFrom(CommandPreparedStatementQuery other) Parameters other CommandPreparedStatementQuery Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandPreparedStatementUpdate.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandPreparedStatementUpdate.html",
    "title": "Class CommandPreparedStatementUpdate | Apache Arrow .NET",
    "summary": "Class CommandPreparedStatementUpdate Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a SQL update query. Used in the command member of FlightDescriptor for the RPC call DoPut to cause the server to execute the included prepared statement handle as an update. public sealed class CommandPreparedStatementUpdate : IMessage<CommandPreparedStatementUpdate>, IEquatable<CommandPreparedStatementUpdate>, IDeepCloneable<CommandPreparedStatementUpdate>, IBufferMessage, IMessage Inheritance object CommandPreparedStatementUpdate Implements IMessage<CommandPreparedStatementUpdate> IEquatable<CommandPreparedStatementUpdate> IDeepCloneable<CommandPreparedStatementUpdate> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandPreparedStatementUpdate() public CommandPreparedStatementUpdate() CommandPreparedStatementUpdate(CommandPreparedStatementUpdate) public CommandPreparedStatementUpdate(CommandPreparedStatementUpdate other) Parameters other CommandPreparedStatementUpdate Fields PreparedStatementHandleFieldNumber Field number for the \"prepared_statement_handle\" field. public const int PreparedStatementHandleFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<CommandPreparedStatementUpdate> Parser { get; } Property Value MessageParser<CommandPreparedStatementUpdate> PreparedStatementHandle Opaque handle for the prepared statement on the server. public ByteString PreparedStatementHandle { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public CommandPreparedStatementUpdate Clone() Returns CommandPreparedStatementUpdate A deep clone of this object. Equals(CommandPreparedStatementUpdate) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandPreparedStatementUpdate other) Parameters other CommandPreparedStatementUpdate An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandPreparedStatementUpdate) Merges the given message into this one. public void MergeFrom(CommandPreparedStatementUpdate other) Parameters other CommandPreparedStatementUpdate Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.TableDefinitionOptions.Types.TableExistsOption.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.TableDefinitionOptions.Types.TableExistsOption.html",
    "title": "Enum CommandStatementIngest.Types.TableDefinitionOptions.Types.TableExistsOption | Apache Arrow .NET",
    "summary": "Enum CommandStatementIngest.Types.TableDefinitionOptions.Types.TableExistsOption Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll The action to take if the target table already exists public enum CommandStatementIngest.Types.TableDefinitionOptions.Types.TableExistsOption Fields [OriginalName(\"TABLE_EXISTS_OPTION_APPEND\")] Append = 2 Append to the table if it already exists [OriginalName(\"TABLE_EXISTS_OPTION_FAIL\")] Fail = 1 Fail if the table already exists [OriginalName(\"TABLE_EXISTS_OPTION_REPLACE\")] Replace = 3 Drop and recreate the table if it already exists [OriginalName(\"TABLE_EXISTS_OPTION_UNSPECIFIED\")] Unspecified = 0 Do not use. Servers should error if this is specified by a client."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.TableDefinitionOptions.Types.TableNotExistOption.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.TableDefinitionOptions.Types.TableNotExistOption.html",
    "title": "Enum CommandStatementIngest.Types.TableDefinitionOptions.Types.TableNotExistOption | Apache Arrow .NET",
    "summary": "Enum CommandStatementIngest.Types.TableDefinitionOptions.Types.TableNotExistOption Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll The action to take if the target table does not exist public enum CommandStatementIngest.Types.TableDefinitionOptions.Types.TableNotExistOption Fields [OriginalName(\"TABLE_NOT_EXIST_OPTION_CREATE\")] Create = 1 Create the table if it does not exist [OriginalName(\"TABLE_NOT_EXIST_OPTION_FAIL\")] Fail = 2 Fail if the table does not exist [OriginalName(\"TABLE_NOT_EXIST_OPTION_UNSPECIFIED\")] Unspecified = 0 Do not use. Servers should error if this is specified by a client."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.TableDefinitionOptions.Types.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.TableDefinitionOptions.Types.html",
    "title": "Class CommandStatementIngest.Types.TableDefinitionOptions.Types | Apache Arrow .NET",
    "summary": "Class CommandStatementIngest.Types.TableDefinitionOptions.Types Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Container for nested types declared in the TableDefinitionOptions message type. public static class CommandStatementIngest.Types.TableDefinitionOptions.Types Inheritance object CommandStatementIngest.Types.TableDefinitionOptions.Types Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.TableDefinitionOptions.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.TableDefinitionOptions.html",
    "title": "Class CommandStatementIngest.Types.TableDefinitionOptions | Apache Arrow .NET",
    "summary": "Class CommandStatementIngest.Types.TableDefinitionOptions Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Options for table definition behavior public sealed class CommandStatementIngest.Types.TableDefinitionOptions : IMessage<CommandStatementIngest.Types.TableDefinitionOptions>, IEquatable<CommandStatementIngest.Types.TableDefinitionOptions>, IDeepCloneable<CommandStatementIngest.Types.TableDefinitionOptions>, IBufferMessage, IMessage Inheritance object CommandStatementIngest.Types.TableDefinitionOptions Implements IMessage<CommandStatementIngest.Types.TableDefinitionOptions> IEquatable<CommandStatementIngest.Types.TableDefinitionOptions> IDeepCloneable<CommandStatementIngest.Types.TableDefinitionOptions> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors TableDefinitionOptions() public TableDefinitionOptions() TableDefinitionOptions(TableDefinitionOptions) public TableDefinitionOptions(CommandStatementIngest.Types.TableDefinitionOptions other) Parameters other CommandStatementIngest.Types.TableDefinitionOptions Fields IfExistsFieldNumber Field number for the \"if_exists\" field. public const int IfExistsFieldNumber = 2 Field Value int IfNotExistFieldNumber Field number for the \"if_not_exist\" field. public const int IfNotExistFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor IfExists public CommandStatementIngest.Types.TableDefinitionOptions.Types.TableExistsOption IfExists { get; set; } Property Value CommandStatementIngest.Types.TableDefinitionOptions.Types.TableExistsOption IfNotExist public CommandStatementIngest.Types.TableDefinitionOptions.Types.TableNotExistOption IfNotExist { get; set; } Property Value CommandStatementIngest.Types.TableDefinitionOptions.Types.TableNotExistOption Parser public static MessageParser<CommandStatementIngest.Types.TableDefinitionOptions> Parser { get; } Property Value MessageParser<CommandStatementIngest.Types.TableDefinitionOptions> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public CommandStatementIngest.Types.TableDefinitionOptions Clone() Returns CommandStatementIngest.Types.TableDefinitionOptions A deep clone of this object. Equals(TableDefinitionOptions) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandStatementIngest.Types.TableDefinitionOptions other) Parameters other CommandStatementIngest.Types.TableDefinitionOptions An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(TableDefinitionOptions) Merges the given message into this one. public void MergeFrom(CommandStatementIngest.Types.TableDefinitionOptions other) Parameters other CommandStatementIngest.Types.TableDefinitionOptions Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.Types.html",
    "title": "Class CommandStatementIngest.Types | Apache Arrow .NET",
    "summary": "Class CommandStatementIngest.Types Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Container for nested types declared in the CommandStatementIngest message type. public static class CommandStatementIngest.Types Inheritance object CommandStatementIngest.Types Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandStatementIngest.html",
    "title": "Class CommandStatementIngest | Apache Arrow .NET",
    "summary": "Class CommandStatementIngest Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a bulk ingestion request. Used in the command member of FlightDescriptor for the the RPC call DoPut to cause the server load the contents of the stream's FlightData into the target destination. public sealed class CommandStatementIngest : IMessage<CommandStatementIngest>, IEquatable<CommandStatementIngest>, IDeepCloneable<CommandStatementIngest>, IBufferMessage, IMessage Inheritance object CommandStatementIngest Implements IMessage<CommandStatementIngest> IEquatable<CommandStatementIngest> IDeepCloneable<CommandStatementIngest> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandStatementIngest() public CommandStatementIngest() CommandStatementIngest(CommandStatementIngest) public CommandStatementIngest(CommandStatementIngest other) Parameters other CommandStatementIngest Fields CatalogFieldNumber Field number for the \"catalog\" field. public const int CatalogFieldNumber = 4 Field Value int OptionsFieldNumber Field number for the \"options\" field. public const int OptionsFieldNumber = 1000 Field Value int SchemaFieldNumber Field number for the \"schema\" field. public const int SchemaFieldNumber = 3 Field Value int TableDefinitionOptionsFieldNumber Field number for the \"table_definition_options\" field. public const int TableDefinitionOptionsFieldNumber = 1 Field Value int TableFieldNumber Field number for the \"table\" field. public const int TableFieldNumber = 2 Field Value int TemporaryFieldNumber Field number for the \"temporary\" field. public const int TemporaryFieldNumber = 5 Field Value int TransactionIdFieldNumber Field number for the \"transaction_id\" field. public const int TransactionIdFieldNumber = 6 Field Value int Properties Catalog The catalog of the destination table to load data into. If unset, a backend-specific default may be used. public string Catalog { get; set; } Property Value string Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasCatalog Gets whether the \"catalog\" field is set public bool HasCatalog { get; } Property Value bool HasSchema Gets whether the \"schema\" field is set public bool HasSchema { get; } Property Value bool HasTransactionId Gets whether the \"transaction_id\" field is set public bool HasTransactionId { get; } Property Value bool Options Backend-specific options. public MapField<string, string> Options { get; } Property Value MapField<string, string> Parser public static MessageParser<CommandStatementIngest> Parser { get; } Property Value MessageParser<CommandStatementIngest> Schema The db_schema of the destination table to load data into. If unset, a backend-specific default may be used. public string Schema { get; set; } Property Value string Table The table to load data into. public string Table { get; set; } Property Value string TableDefinitionOptions The behavior for handling the table definition. public CommandStatementIngest.Types.TableDefinitionOptions TableDefinitionOptions { get; set; } Property Value CommandStatementIngest.Types.TableDefinitionOptions Temporary Store ingested data in a temporary table. The effect of setting temporary is to place the table in a backend-defined namespace, and to drop the table at the end of the session. The namespacing may make use of a backend-specific schema and/or catalog. The server should return an error if an explicit choice of schema or catalog is incompatible with the server's namespacing decision. public bool Temporary { get; set; } Property Value bool TransactionId Perform the ingestion as part of this transaction. If specified, results should not be committed in the event of an error/cancellation. public ByteString TransactionId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearCatalog() Clears the value of the \"catalog\" field public void ClearCatalog() ClearSchema() Clears the value of the \"schema\" field public void ClearSchema() ClearTransactionId() Clears the value of the \"transaction_id\" field public void ClearTransactionId() Clone() Creates a deep clone of this object. public CommandStatementIngest Clone() Returns CommandStatementIngest A deep clone of this object. Equals(CommandStatementIngest) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandStatementIngest other) Parameters other CommandStatementIngest An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandStatementIngest) Merges the given message into this one. public void MergeFrom(CommandStatementIngest other) Parameters other CommandStatementIngest Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandStatementQuery.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandStatementQuery.html",
    "title": "Class CommandStatementQuery | Apache Arrow .NET",
    "summary": "Class CommandStatementQuery Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a SQL query. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. Fields on this schema may contain the following metadata: ARROW:FLIGHT:SQL:CATALOG_NAME - Table's catalog name ARROW:FLIGHT:SQL:DB_SCHEMA_NAME - Database schema name ARROW:FLIGHT:SQL:TABLE_NAME - Table name ARROW:FLIGHT:SQL:TYPE_NAME - The data source-specific name for the data type of the column. ARROW:FLIGHT:SQL:PRECISION - Column precision/size ARROW:FLIGHT:SQL:SCALE - Column scale/decimal digits if applicable ARROW:FLIGHT:SQL:IS_AUTO_INCREMENT - \"1\" indicates if the column is auto incremented, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_CASE_SENSITIVE - \"1\" indicates if the column is case-sensitive, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_READ_ONLY - \"1\" indicates if the column is read only, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_SEARCHABLE - \"1\" indicates if the column is searchable via WHERE clause, \"0\" otherwise. ARROW:FLIGHT:SQL:REMARKS - A comment describing the column. This field has been added after all others, clients should be prepared to find it missing. GetFlightInfo: execute the query. public sealed class CommandStatementQuery : IMessage<CommandStatementQuery>, IEquatable<CommandStatementQuery>, IDeepCloneable<CommandStatementQuery>, IBufferMessage, IMessage Inheritance object CommandStatementQuery Implements IMessage<CommandStatementQuery> IEquatable<CommandStatementQuery> IDeepCloneable<CommandStatementQuery> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandStatementQuery() public CommandStatementQuery() CommandStatementQuery(CommandStatementQuery) public CommandStatementQuery(CommandStatementQuery other) Parameters other CommandStatementQuery Fields QueryFieldNumber Field number for the \"query\" field. public const int QueryFieldNumber = 1 Field Value int TransactionIdFieldNumber Field number for the \"transaction_id\" field. public const int TransactionIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasTransactionId Gets whether the \"transaction_id\" field is set public bool HasTransactionId { get; } Property Value bool Parser public static MessageParser<CommandStatementQuery> Parser { get; } Property Value MessageParser<CommandStatementQuery> Query The SQL syntax. public string Query { get; set; } Property Value string TransactionId Include the query as part of this transaction (if unset, the query is auto-committed). public ByteString TransactionId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearTransactionId() Clears the value of the \"transaction_id\" field public void ClearTransactionId() Clone() Creates a deep clone of this object. public CommandStatementQuery Clone() Returns CommandStatementQuery A deep clone of this object. Equals(CommandStatementQuery) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandStatementQuery other) Parameters other CommandStatementQuery An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandStatementQuery) Merges the given message into this one. public void MergeFrom(CommandStatementQuery other) Parameters other CommandStatementQuery Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandStatementSubstraitPlan.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandStatementSubstraitPlan.html",
    "title": "Class CommandStatementSubstraitPlan | Apache Arrow .NET",
    "summary": "Class CommandStatementSubstraitPlan Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a Substrait plan. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. Fields on this schema may contain the following metadata: ARROW:FLIGHT:SQL:CATALOG_NAME - Table's catalog name ARROW:FLIGHT:SQL:DB_SCHEMA_NAME - Database schema name ARROW:FLIGHT:SQL:TABLE_NAME - Table name ARROW:FLIGHT:SQL:TYPE_NAME - The data source-specific name for the data type of the column. ARROW:FLIGHT:SQL:PRECISION - Column precision/size ARROW:FLIGHT:SQL:SCALE - Column scale/decimal digits if applicable ARROW:FLIGHT:SQL:IS_AUTO_INCREMENT - \"1\" indicates if the column is auto incremented, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_CASE_SENSITIVE - \"1\" indicates if the column is case-sensitive, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_READ_ONLY - \"1\" indicates if the column is read only, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_SEARCHABLE - \"1\" indicates if the column is searchable via WHERE clause, \"0\" otherwise. ARROW:FLIGHT:SQL:REMARKS - A comment describing the column. This field has been added after all others, clients should be prepared to find it missing. GetFlightInfo: execute the query. DoPut: execute the query. public sealed class CommandStatementSubstraitPlan : IMessage<CommandStatementSubstraitPlan>, IEquatable<CommandStatementSubstraitPlan>, IDeepCloneable<CommandStatementSubstraitPlan>, IBufferMessage, IMessage Inheritance object CommandStatementSubstraitPlan Implements IMessage<CommandStatementSubstraitPlan> IEquatable<CommandStatementSubstraitPlan> IDeepCloneable<CommandStatementSubstraitPlan> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandStatementSubstraitPlan() public CommandStatementSubstraitPlan() CommandStatementSubstraitPlan(CommandStatementSubstraitPlan) public CommandStatementSubstraitPlan(CommandStatementSubstraitPlan other) Parameters other CommandStatementSubstraitPlan Fields PlanFieldNumber Field number for the \"plan\" field. public const int PlanFieldNumber = 1 Field Value int TransactionIdFieldNumber Field number for the \"transaction_id\" field. public const int TransactionIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasTransactionId Gets whether the \"transaction_id\" field is set public bool HasTransactionId { get; } Property Value bool Parser public static MessageParser<CommandStatementSubstraitPlan> Parser { get; } Property Value MessageParser<CommandStatementSubstraitPlan> Plan A serialized substrait.Plan public SubstraitPlan Plan { get; set; } Property Value SubstraitPlan TransactionId Include the query as part of this transaction (if unset, the query is auto-committed). public ByteString TransactionId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearTransactionId() Clears the value of the \"transaction_id\" field public void ClearTransactionId() Clone() Creates a deep clone of this object. public CommandStatementSubstraitPlan Clone() Returns CommandStatementSubstraitPlan A deep clone of this object. Equals(CommandStatementSubstraitPlan) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandStatementSubstraitPlan other) Parameters other CommandStatementSubstraitPlan An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandStatementSubstraitPlan) Merges the given message into this one. public void MergeFrom(CommandStatementSubstraitPlan other) Parameters other CommandStatementSubstraitPlan Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.CommandStatementUpdate.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.CommandStatementUpdate.html",
    "title": "Class CommandStatementUpdate | Apache Arrow .NET",
    "summary": "Class CommandStatementUpdate Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a SQL update query. Used in the command member of FlightDescriptor for the RPC call DoPut to cause the server to execute the included SQL update. public sealed class CommandStatementUpdate : IMessage<CommandStatementUpdate>, IEquatable<CommandStatementUpdate>, IDeepCloneable<CommandStatementUpdate>, IBufferMessage, IMessage Inheritance object CommandStatementUpdate Implements IMessage<CommandStatementUpdate> IEquatable<CommandStatementUpdate> IDeepCloneable<CommandStatementUpdate> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors CommandStatementUpdate() public CommandStatementUpdate() CommandStatementUpdate(CommandStatementUpdate) public CommandStatementUpdate(CommandStatementUpdate other) Parameters other CommandStatementUpdate Fields QueryFieldNumber Field number for the \"query\" field. public const int QueryFieldNumber = 1 Field Value int TransactionIdFieldNumber Field number for the \"transaction_id\" field. public const int TransactionIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasTransactionId Gets whether the \"transaction_id\" field is set public bool HasTransactionId { get; } Property Value bool Parser public static MessageParser<CommandStatementUpdate> Parser { get; } Property Value MessageParser<CommandStatementUpdate> Query The SQL syntax. public string Query { get; set; } Property Value string TransactionId Include the query as part of this transaction (if unset, the query is auto-committed). public ByteString TransactionId { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearTransactionId() Clears the value of the \"transaction_id\" field public void ClearTransactionId() Clone() Creates a deep clone of this object. public CommandStatementUpdate Clone() Returns CommandStatementUpdate A deep clone of this object. Equals(CommandStatementUpdate) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandStatementUpdate other) Parameters other CommandStatementUpdate An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CommandStatementUpdate) Merges the given message into this one. public void MergeFrom(CommandStatementUpdate other) Parameters other CommandStatementUpdate Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.DoPutPreparedStatementResult.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.DoPutPreparedStatementResult.html",
    "title": "Class DoPutPreparedStatementResult | Apache Arrow .NET",
    "summary": "Class DoPutPreparedStatementResult Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll An optional response returned when DoPut is called with CommandPreparedStatementQuery. Note on legacy behavior: previous versions of the protocol did not return any result for this command, and that behavior should still be supported by clients. In that case, the client can continue as though the fields in this message were not provided or set to sensible default values. public sealed class DoPutPreparedStatementResult : IMessage<DoPutPreparedStatementResult>, IEquatable<DoPutPreparedStatementResult>, IDeepCloneable<DoPutPreparedStatementResult>, IBufferMessage, IMessage Inheritance object DoPutPreparedStatementResult Implements IMessage<DoPutPreparedStatementResult> IEquatable<DoPutPreparedStatementResult> IDeepCloneable<DoPutPreparedStatementResult> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors DoPutPreparedStatementResult() public DoPutPreparedStatementResult() DoPutPreparedStatementResult(DoPutPreparedStatementResult) public DoPutPreparedStatementResult(DoPutPreparedStatementResult other) Parameters other DoPutPreparedStatementResult Fields PreparedStatementHandleFieldNumber Field number for the \"prepared_statement_handle\" field. public const int PreparedStatementHandleFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPreparedStatementHandle Gets whether the \"prepared_statement_handle\" field is set public bool HasPreparedStatementHandle { get; } Property Value bool Parser public static MessageParser<DoPutPreparedStatementResult> Parser { get; } Property Value MessageParser<DoPutPreparedStatementResult> PreparedStatementHandle Represents a (potentially updated) opaque handle for the prepared statement on the server. Because the handle could potentially be updated, any previous handles for this prepared statement should be considered invalid, and all subsequent requests for this prepared statement must use this new handle. The updated handle allows implementing query parameters with stateless services. When an updated handle is not provided by the server, clients should continue using the previous handle provided by ActionCreatePreparedStatementResonse. public ByteString PreparedStatementHandle { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPreparedStatementHandle() Clears the value of the \"prepared_statement_handle\" field public void ClearPreparedStatementHandle() Clone() Creates a deep clone of this object. public DoPutPreparedStatementResult Clone() Returns DoPutPreparedStatementResult A deep clone of this object. Equals(DoPutPreparedStatementResult) Indicates whether the current object is equal to another object of the same type. public bool Equals(DoPutPreparedStatementResult other) Parameters other DoPutPreparedStatementResult An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(DoPutPreparedStatementResult) Merges the given message into this one. public void MergeFrom(DoPutPreparedStatementResult other) Parameters other DoPutPreparedStatementResult Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.DoPutUpdateResult.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.DoPutUpdateResult.html",
    "title": "Class DoPutUpdateResult | Apache Arrow .NET",
    "summary": "Class DoPutUpdateResult Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Returned from the RPC call DoPut when a CommandStatementUpdate, CommandPreparedStatementUpdate, or CommandStatementIngest was in the request, containing results from the update. public sealed class DoPutUpdateResult : IMessage<DoPutUpdateResult>, IEquatable<DoPutUpdateResult>, IDeepCloneable<DoPutUpdateResult>, IBufferMessage, IMessage Inheritance object DoPutUpdateResult Implements IMessage<DoPutUpdateResult> IEquatable<DoPutUpdateResult> IDeepCloneable<DoPutUpdateResult> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors DoPutUpdateResult() public DoPutUpdateResult() DoPutUpdateResult(DoPutUpdateResult) public DoPutUpdateResult(DoPutUpdateResult other) Parameters other DoPutUpdateResult Fields RecordCountFieldNumber Field number for the \"record_count\" field. public const int RecordCountFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<DoPutUpdateResult> Parser { get; } Property Value MessageParser<DoPutUpdateResult> RecordCount The number of records updated. A return value of -1 represents an unknown updated record count. public long RecordCount { get; set; } Property Value long Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public DoPutUpdateResult Clone() Returns DoPutUpdateResult A deep clone of this object. Equals(DoPutUpdateResult) Indicates whether the current object is equal to another object of the same type. public bool Equals(DoPutUpdateResult other) Parameters other DoPutUpdateResult An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(DoPutUpdateResult) Merges the given message into this one. public void MergeFrom(DoPutUpdateResult other) Parameters other DoPutUpdateResult Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.FlightSqlExtensions.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.FlightSqlExtensions.html",
    "title": "Class FlightSqlExtensions | Apache Arrow .NET",
    "summary": "Class FlightSqlExtensions Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Holder for extension identifiers generated from the top level of FlightSql.proto public static class FlightSqlExtensions Inheritance object FlightSqlExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Experimental public static readonly Extension<MessageOptions, bool> Experimental Field Value Extension<MessageOptions, bool>"
  },
  "api/Arrow.Flight.Protocol.Sql.FlightSqlReflection.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.FlightSqlReflection.html",
    "title": "Class FlightSqlReflection | Apache Arrow .NET",
    "summary": "Class FlightSqlReflection Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Holder for reflection information generated from FlightSql.proto public static class FlightSqlReflection Inheritance object FlightSqlReflection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Descriptor File descriptor for FlightSql.proto public static FileDescriptor Descriptor { get; } Property Value FileDescriptor"
  },
  "api/Arrow.Flight.Protocol.Sql.Nullable.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.Nullable.html",
    "title": "Enum Nullable | Apache Arrow .NET",
    "summary": "Enum Nullable Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum Nullable Fields [OriginalName(\"NULLABILITY_NO_NULLS\")] NullabilityNoNulls = 0 Indicates that the fields does not allow the use of null values. [OriginalName(\"NULLABILITY_NULLABLE\")] NullabilityNullable = 1 Indicates that the fields allow the use of null values. [OriginalName(\"NULLABILITY_UNKNOWN\")] NullabilityUnknown = 2 Indicates that nullability of the fields cannot be determined."
  },
  "api/Arrow.Flight.Protocol.Sql.Searchable.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.Searchable.html",
    "title": "Enum Searchable | Apache Arrow .NET",
    "summary": "Enum Searchable Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum Searchable Fields [OriginalName(\"SEARCHABLE_BASIC\")] Basic = 2 Indicates that the column can be used In a WHERE clause with any operator other than LIKE. Allowed operators: comparison, quantified comparison, BETWEEN, DISTINCT, IN, MATCH, and UNIQUE. [OriginalName(\"SEARCHABLE_CHAR\")] Char = 1 Indicates that the column can be used in a WHERE clause if it is using a LIKE operator. [OriginalName(\"SEARCHABLE_FULL\")] Full = 3 Indicates that the column can be used in a WHERE clause using any operator. [OriginalName(\"SEARCHABLE_NONE\")] None = 0 Indicates that column cannot be used in a WHERE clause."
  },
  "api/Arrow.Flight.Protocol.Sql.SqlInfo.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlInfo.html",
    "title": "Enum SqlInfo | Apache Arrow .NET",
    "summary": "Enum SqlInfo Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Options for CommandGetSqlInfo. public enum SqlInfo Fields [OriginalName(\"FLIGHT_SQL_SERVER_ARROW_VERSION\")] FlightSqlServerArrowVersion = 2 Retrieves a UTF-8 string with the Arrow format version of the Flight SQL Server. [OriginalName(\"FLIGHT_SQL_SERVER_BULK_INGESTION\")] FlightSqlServerBulkIngestion = 10 Retrieves a boolean value indicating whether the Flight SQL Server supports executing bulk ingestion. [OriginalName(\"FLIGHT_SQL_SERVER_CANCEL\")] FlightSqlServerCancel = 9 Retrieves a boolean value indicating whether the Flight SQL Server supports explicit query cancellation (the CancelQuery action). [OriginalName(\"FLIGHT_SQL_SERVER_INGEST_TRANSACTIONS_SUPPORTED\")] FlightSqlServerIngestTransactionsSupported = 11 Retrieves a boolean value indicating whether transactions are supported for bulk ingestion. If not, invoking the method commit in the context of a bulk ingestion is a noop, and the isolation level is arrow.flight.protocol.sql.SqlTransactionIsolationLevel.TRANSACTION_NONE. Returns: false: if bulk ingestion transactions are unsupported; true: if bulk ingestion transactions are supported. [OriginalName(\"FLIGHT_SQL_SERVER_NAME\")] FlightSqlServerName = 0 Retrieves a UTF-8 string with the name of the Flight SQL Server. [OriginalName(\"FLIGHT_SQL_SERVER_READ_ONLY\")] FlightSqlServerReadOnly = 3 Retrieves a boolean value indicating whether the Flight SQL Server is read only. Returns: false: if read-write true: if read only [OriginalName(\"FLIGHT_SQL_SERVER_SQL\")] FlightSqlServerSql = 4 Retrieves a boolean value indicating whether the Flight SQL Server supports executing SQL queries. Note that the absence of this info (as opposed to a false value) does not necessarily mean that SQL is not supported, as this property was not originally defined. [OriginalName(\"FLIGHT_SQL_SERVER_STATEMENT_TIMEOUT\")] FlightSqlServerStatementTimeout = 100 Retrieves an int32 indicating the timeout (in milliseconds) for prepared statement handles. If 0, there is no timeout. Servers should reset the timeout when the handle is used in a command. [OriginalName(\"FLIGHT_SQL_SERVER_SUBSTRAIT\")] FlightSqlServerSubstrait = 5 Retrieves a boolean value indicating whether the Flight SQL Server supports executing Substrait plans. [OriginalName(\"FLIGHT_SQL_SERVER_SUBSTRAIT_MAX_VERSION\")] FlightSqlServerSubstraitMaxVersion = 7 Retrieves a string value indicating the maximum supported Substrait version, or null if Substrait is not supported. [OriginalName(\"FLIGHT_SQL_SERVER_SUBSTRAIT_MIN_VERSION\")] FlightSqlServerSubstraitMinVersion = 6 Retrieves a string value indicating the minimum supported Substrait version, or null if Substrait is not supported. [OriginalName(\"FLIGHT_SQL_SERVER_TRANSACTION\")] FlightSqlServerTransaction = 8 Retrieves an int32 indicating whether the Flight SQL Server supports the BeginTransaction/EndTransaction/BeginSavepoint/EndSavepoint actions. Even if this is not supported, the database may still support explicit \"BEGIN TRANSACTION\"/\"COMMIT\" SQL statements (see SQL_TRANSACTIONS_SUPPORTED); this property is only about whether the server implements the Flight SQL API endpoints. The possible values are listed in SqlSupportedTransaction. [OriginalName(\"FLIGHT_SQL_SERVER_TRANSACTION_TIMEOUT\")] FlightSqlServerTransactionTimeout = 101 Retrieves an int32 indicating the timeout (in milliseconds) for transactions, since transactions are not tied to a connection. If 0, there is no timeout. Servers should reset the timeout when the handle is used in a command. [OriginalName(\"FLIGHT_SQL_SERVER_VERSION\")] FlightSqlServerVersion = 1 Retrieves a UTF-8 string with the native version of the Flight SQL Server. [OriginalName(\"SQL_ALL_TABLES_ARE_SELECTABLE\")] SqlAllTablesAreSelectable = 506 Retrieves a boolean value indicating whether all tables are selectable. Returns: false: if not all tables are selectable or if none are; true: if all tables are selectable. [OriginalName(\"SQL_ANSI92_SUPPORTED_LEVEL\")] SqlAnsi92SupportedLevel = 526 Retrieves the supported ANSI92 SQL grammar level. Returns an int32 bitmask value representing the supported ANSI92 SQL grammar level. The returned bitmask should be parsed in order to retrieve the supported commands. For instance: return 0 (\\b0) => [] (ANSI92 SQL grammar is unsupported); return 1 (\\b1) => [ANSI92_ENTRY_SQL]; return 2 (\\b10) => [ANSI92_INTERMEDIATE_SQL]; return 3 (\\b11) => [ANSI92_ENTRY_SQL, ANSI92_INTERMEDIATE_SQL]; return 4 (\\b100) => [ANSI92_FULL_SQL]; return 5 (\\b101) => [ANSI92_ENTRY_SQL, ANSI92_FULL_SQL]; return 6 (\\b110) => [ANSI92_INTERMEDIATE_SQL, ANSI92_FULL_SQL]; return 7 (\\b111) => [ANSI92_ENTRY_SQL, ANSI92_INTERMEDIATE_SQL, ANSI92_FULL_SQL]. Valid ANSI92 SQL grammar levels are described under arrow.flight.protocol.sql.SupportedAnsi92SqlGrammarLevel. [OriginalName(\"SQL_BATCH_UPDATES_SUPPORTED\")] SqlBatchUpdatesSupported = 572 Retrieves a boolean value indicating whether this database supports batch updates. false: if this database does not support batch updates; true: if this database supports batch updates. [OriginalName(\"SQL_CATALOG_AT_START\")] SqlCatalogAtStart = 532 Retrieves a boolean value indicating whether a catalog appears at the start of a fully qualified table name. false: if a catalog does not appear at the start of a fully qualified table name; true: if a catalog appears at the start of a fully qualified table name. [OriginalName(\"SQL_CATALOG_TERM\")] SqlCatalogTerm = 531 Retrieves a UTF-8 string with the preferred term for \"catalog\". If a empty string is returned its assumed that the server does NOT supports catalogs. [OriginalName(\"SQL_CATALOGS_SUPPORTED_ACTIONS\")] SqlCatalogsSupportedActions = 534 Retrieves the supported actions for a SQL schema. Returns an int32 bitmask value representing the supported actions for a SQL catalog. The returned bitmask should be parsed in order to retrieve the supported actions for a SQL catalog. For instance: return 0 (\\b0) => [] (no supported actions for SQL catalog); return 1 (\\b1) => [SQL_ELEMENT_IN_PROCEDURE_CALLS]; return 2 (\\b10) => [SQL_ELEMENT_IN_INDEX_DEFINITIONS]; return 3 (\\b11) => [SQL_ELEMENT_IN_PROCEDURE_CALLS, SQL_ELEMENT_IN_INDEX_DEFINITIONS]; return 4 (\\b100) => [SQL_ELEMENT_IN_PRIVILEGE_DEFINITIONS]; return 5 (\\b101) => [SQL_ELEMENT_IN_PROCEDURE_CALLS, SQL_ELEMENT_IN_PRIVILEGE_DEFINITIONS]; return 6 (\\b110) => [SQL_ELEMENT_IN_INDEX_DEFINITIONS, SQL_ELEMENT_IN_PRIVILEGE_DEFINITIONS]; return 7 (\\b111) => [SQL_ELEMENT_IN_PROCEDURE_CALLS, SQL_ELEMENT_IN_INDEX_DEFINITIONS, SQL_ELEMENT_IN_PRIVILEGE_DEFINITIONS]. Valid actions for a SQL catalog are described under arrow.flight.protocol.sql.SqlSupportedElementActions. [OriginalName(\"SQL_CORRELATED_SUBQUERIES_SUPPORTED\")] SqlCorrelatedSubqueriesSupported = 539 Retrieves a boolean value indicating whether correlated subqueries are supported. Returns: false: if correlated subqueries are unsupported; true: if correlated subqueries are supported. [OriginalName(\"SQL_DATA_DEFINITION_CAUSES_TRANSACTION_COMMIT\")] SqlDataDefinitionCausesTransactionCommit = 565 Retrieves a boolean value indicating whether a data definition statement within a transaction forces the transaction to commit. Returns: false: if a data definition statement within a transaction does not force the transaction to commit; true: if a data definition statement within a transaction forces the transaction to commit. [OriginalName(\"SQL_DATA_DEFINITIONS_IN_TRANSACTIONS_IGNORED\")] SqlDataDefinitionsInTransactionsIgnored = 566 Retrieves a boolean value indicating whether a data definition statement within a transaction is ignored. Returns: false: if a data definition statement within a transaction is taken into account; true: a data definition statement within a transaction is ignored. [OriginalName(\"SQL_DATETIME_FUNCTIONS\")] SqlDatetimeFunctions = 512 Retrieves a UTF-8 string list with values of the supported datetime functions. [OriginalName(\"SQL_DB_SCHEMA_NAME_LENGTH\")] SqlDbSchemaNameLength = 552 Retrieves a int64 value representing the maximum number of characters allowed in a schema name. [OriginalName(\"SQL_DDL_CATALOG\")] SqlDdlCatalog = 500 Retrieves a boolean value indicating whether the Flight SQL Server supports CREATE and DROP of catalogs. Returns: false: if it doesn't support CREATE and DROP of catalogs. true: if it supports CREATE and DROP of catalogs. [OriginalName(\"SQL_DDL_SCHEMA\")] SqlDdlSchema = 501 Retrieves a boolean value indicating whether the Flight SQL Server supports CREATE and DROP of schemas. Returns: false: if it doesn't support CREATE and DROP of schemas. true: if it supports CREATE and DROP of schemas. [OriginalName(\"SQL_DDL_TABLE\")] SqlDdlTable = 502 Indicates whether the Flight SQL Server supports CREATE and DROP of tables. Returns: false: if it doesn't support CREATE and DROP of tables. true: if it supports CREATE and DROP of tables. [OriginalName(\"SQL_DEFAULT_TRANSACTION_ISOLATION\")] SqlDefaultTransactionIsolation = 562 Retrieves this database's default transaction isolation level as described in arrow.flight.protocol.sql.SqlTransactionIsolationLevel. Returns a int32 ordinal for the SQL transaction isolation level. [OriginalName(\"SQL_EXTRA_NAME_CHARACTERS\")] SqlExtraNameCharacters = 514 Retrieves a UTF-8 string with all the \"extra\" characters that can be used in unquoted identifier names (those beyond a-z, A-Z, 0-9 and _). [OriginalName(\"SQL_IDENTIFIER_CASE\")] SqlIdentifierCase = 503 Retrieves a int32 ordinal representing the case sensitivity of catalog, table, schema and table names. The possible values are listed in arrow.flight.protocol.sql.SqlSupportedCaseSensitivity. [OriginalName(\"SQL_IDENTIFIER_QUOTE_CHAR\")] SqlIdentifierQuoteChar = 504 Retrieves a UTF-8 string with the supported character(s) used to surround a delimited identifier. [OriginalName(\"SQL_KEYWORDS\")] SqlKeywords = 508 Retrieves a UTF-8 string list with values of the supported keywords. [OriginalName(\"SQL_LOCATORS_UPDATE_COPY\")] SqlLocatorsUpdateCopy = 575 Retrieves a boolean value indicating whether updates made to a LOB are made on a copy or directly to the LOB. Returns: false: if updates made to a LOB are made directly to the LOB; true: if updates made to a LOB are made on a copy. [OriginalName(\"SQL_MAX_BINARY_LITERAL_LENGTH\")] SqlMaxBinaryLiteralLength = 541 Retrieves a int64 value representing the maximum number of hex characters allowed in an inline binary literal. [OriginalName(\"SQL_MAX_CATALOG_NAME_LENGTH\")] SqlMaxCatalogNameLength = 554 Retrieves a int64 value representing the maximum number of characters allowed in a catalog name. [OriginalName(\"SQL_MAX_CHAR_LITERAL_LENGTH\")] SqlMaxCharLiteralLength = 542 Retrieves a int64 value representing the maximum number of characters allowed for a character literal. [OriginalName(\"SQL_MAX_COLUMN_NAME_LENGTH\")] SqlMaxColumnNameLength = 543 Retrieves a int64 value representing the maximum number of characters allowed for a column name. [OriginalName(\"SQL_MAX_COLUMNS_IN_GROUP_BY\")] SqlMaxColumnsInGroupBy = 544 Retrieves a int64 value representing the maximum number of columns allowed in a GROUP BY clause. [OriginalName(\"SQL_MAX_COLUMNS_IN_INDEX\")] SqlMaxColumnsInIndex = 545 Retrieves a int64 value representing the maximum number of columns allowed in an index. [OriginalName(\"SQL_MAX_COLUMNS_IN_ORDER_BY\")] SqlMaxColumnsInOrderBy = 546 Retrieves a int64 value representing the maximum number of columns allowed in an ORDER BY clause. [OriginalName(\"SQL_MAX_COLUMNS_IN_SELECT\")] SqlMaxColumnsInSelect = 547 Retrieves a int64 value representing the maximum number of columns allowed in a SELECT list. [OriginalName(\"SQL_MAX_COLUMNS_IN_TABLE\")] SqlMaxColumnsInTable = 548 Retrieves a int64 value representing the maximum number of columns allowed in a table. [OriginalName(\"SQL_MAX_CONNECTIONS\")] SqlMaxConnections = 549 Retrieves a int64 value representing the maximum number of concurrent connections possible. [OriginalName(\"SQL_MAX_CURSOR_NAME_LENGTH\")] SqlMaxCursorNameLength = 550 Retrieves a int64 value the maximum number of characters allowed in a cursor name. [OriginalName(\"SQL_MAX_INDEX_LENGTH\")] SqlMaxIndexLength = 551 Retrieves a int64 value representing the maximum number of bytes allowed for an index, including all of the parts of the index. [OriginalName(\"SQL_MAX_PROCEDURE_NAME_LENGTH\")] SqlMaxProcedureNameLength = 553 Retrieves a int64 value representing the maximum number of characters allowed in a procedure name. [OriginalName(\"SQL_MAX_ROW_SIZE\")] SqlMaxRowSize = 555 Retrieves a int64 value representing the maximum number of bytes allowed in a single row. [OriginalName(\"SQL_MAX_ROW_SIZE_INCLUDES_BLOBS\")] SqlMaxRowSizeIncludesBlobs = 556 Retrieves a boolean indicating whether the return value for the JDBC method getMaxRowSize includes the SQL data types LONGVARCHAR and LONGVARBINARY. Returns: false: if return value for the JDBC method getMaxRowSize does not include the SQL data types LONGVARCHAR and LONGVARBINARY; true: if return value for the JDBC method getMaxRowSize includes the SQL data types LONGVARCHAR and LONGVARBINARY. [OriginalName(\"SQL_MAX_STATEMENT_LENGTH\")] SqlMaxStatementLength = 557 Retrieves a int64 value representing the maximum number of characters allowed for an SQL statement; a result of 0 (zero) means that there is no limit or the limit is not known. [OriginalName(\"SQL_MAX_STATEMENTS\")] SqlMaxStatements = 558 Retrieves a int64 value representing the maximum number of active statements that can be open at the same time. [OriginalName(\"SQL_MAX_TABLE_NAME_LENGTH\")] SqlMaxTableNameLength = 559 Retrieves a int64 value representing the maximum number of characters allowed in a table name. [OriginalName(\"SQL_MAX_TABLES_IN_SELECT\")] SqlMaxTablesInSelect = 560 Retrieves a int64 value representing the maximum number of tables allowed in a SELECT statement. [OriginalName(\"SQL_MAX_USERNAME_LENGTH\")] SqlMaxUsernameLength = 561 Retrieves a int64 value representing the maximum number of characters allowed in a user name. [OriginalName(\"SQL_NAMED_PARAMETERS_SUPPORTED\")] SqlNamedParametersSupported = 574 Retrieves a boolean value indicating whether named parameters are supported in callable statements. Returns: false: if named parameters in callable statements are unsupported; true: if named parameters in callable statements are supported. [OriginalName(\"SQL_NULL_ORDERING\")] SqlNullOrdering = 507 Retrieves the null ordering. Returns a int32 ordinal for the null ordering being used, as described in arrow.flight.protocol.sql.SqlNullOrdering. [OriginalName(\"SQL_NULL_PLUS_NULL_IS_NULL\")] SqlNullPlusNullIsNull = 516 Retrieves a boolean value indicating whether concatenations between null and non-null values being null are supported. Returns: false: if concatenations between null and non-null values being null are unsupported; true: if concatenations between null and non-null values being null are supported. [OriginalName(\"SQL_NUMERIC_FUNCTIONS\")] SqlNumericFunctions = 509 Retrieves a UTF-8 string list with values of the supported numeric functions. [OriginalName(\"SQL_OUTER_JOINS_SUPPORT_LEVEL\")] SqlOuterJoinsSupportLevel = 528 Retrieves the support level for SQL OUTER JOINs. Returns a int32 ordinal for the SQL ordering being used, as described in arrow.flight.protocol.sql.SqlOuterJoinsSupportLevel. [OriginalName(\"SQL_PROCEDURE_TERM\")] SqlProcedureTerm = 530 Retrieves a UTF-8 string with the preferred term for \"procedure\". [OriginalName(\"SQL_QUOTED_IDENTIFIER_CASE\")] SqlQuotedIdentifierCase = 505 Retrieves a int32 describing the case sensitivity of quoted identifiers. The possible values are listed in arrow.flight.protocol.sql.SqlSupportedCaseSensitivity. [OriginalName(\"SQL_SAVEPOINTS_SUPPORTED\")] SqlSavepointsSupported = 573 Retrieves a boolean value indicating whether this database supports savepoints. Returns: false: if this database does not support savepoints; true: if this database supports savepoints. [OriginalName(\"SQL_SCHEMA_TERM\")] SqlSchemaTerm = 529 Retrieves a UTF-8 string with the preferred term for \"schema\". [OriginalName(\"SQL_SCHEMAS_SUPPORTED_ACTIONS\")] SqlSchemasSupportedActions = 533 Retrieves the supported actions for a SQL schema. Returns an int32 bitmask value representing the supported actions for a SQL schema. The returned bitmask should be parsed in order to retrieve the supported actions for a SQL schema. For instance: return 0 (\\b0) => [] (no supported actions for SQL schema); return 1 (\\b1) => [SQL_ELEMENT_IN_PROCEDURE_CALLS]; return 2 (\\b10) => [SQL_ELEMENT_IN_INDEX_DEFINITIONS]; return 3 (\\b11) => [SQL_ELEMENT_IN_PROCEDURE_CALLS, SQL_ELEMENT_IN_INDEX_DEFINITIONS]; return 4 (\\b100) => [SQL_ELEMENT_IN_PRIVILEGE_DEFINITIONS]; return 5 (\\b101) => [SQL_ELEMENT_IN_PROCEDURE_CALLS, SQL_ELEMENT_IN_PRIVILEGE_DEFINITIONS]; return 6 (\\b110) => [SQL_ELEMENT_IN_INDEX_DEFINITIONS, SQL_ELEMENT_IN_PRIVILEGE_DEFINITIONS]; return 7 (\\b111) => [SQL_ELEMENT_IN_PROCEDURE_CALLS, SQL_ELEMENT_IN_INDEX_DEFINITIONS, SQL_ELEMENT_IN_PRIVILEGE_DEFINITIONS]. Valid actions for a SQL schema described under arrow.flight.protocol.sql.SqlSupportedElementActions. [OriginalName(\"SQL_SEARCH_STRING_ESCAPE\")] SqlSearchStringEscape = 513 Retrieves the UTF-8 string that can be used to escape wildcard characters. This is the string that can be used to escape '' or '%' in the catalog search parameters that are a pattern (and therefore use one of the wildcard characters). The '' character represents any single character; the '%' character represents any sequence of zero or more characters. [OriginalName(\"SQL_SELECT_FOR_UPDATE_SUPPORTED\")] SqlSelectForUpdateSupported = 536 Retrieves a boolean value indicating whether SELECT FOR UPDATE statements are supported. Returns: false: if SELECT FOR UPDATE statements are unsupported; true: if SELECT FOR UPDATE statements are supported. [OriginalName(\"SQL_STORED_FUNCTIONS_USING_CALL_SYNTAX_SUPPORTED\")] SqlStoredFunctionsUsingCallSyntaxSupported = 576 Retrieves a boolean value indicating whether invoking user-defined or vendor functions using the stored procedure escape syntax is supported. Returns: false: if invoking user-defined or vendor functions using the stored procedure escape syntax is unsupported; true: if invoking user-defined or vendor functions using the stored procedure escape syntax is supported. [OriginalName(\"SQL_STORED_PROCEDURES_SUPPORTED\")] SqlStoredProceduresSupported = 537 Retrieves a boolean value indicating whether stored procedure calls that use the stored procedure escape syntax are supported. Returns: false: if stored procedure calls that use the stored procedure escape syntax are unsupported; true: if stored procedure calls that use the stored procedure escape syntax are supported. [OriginalName(\"SQL_STRING_FUNCTIONS\")] SqlStringFunctions = 510 Retrieves a UTF-8 string list with values of the supported string functions. [OriginalName(\"SQL_SUPPORTED_CONCURRENCIES_FOR_RESULT_SET_FORWARD_ONLY\")] SqlSupportedConcurrenciesForResultSetForwardOnly = 569 Returns an int32 bitmask value concurrency types supported for arrow.flight.protocol.sql.SqlSupportedResultSetType.SQL_RESULT_SET_TYPE_FORWARD_ONLY. For instance: return 0 (\\b0) => [] (no supported concurrency types for this result set type) return 1 (\\b1) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED] return 2 (\\b10) => [SQL_RESULT_SET_CONCURRENCY_READ_ONLY] return 3 (\\b11) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_READ_ONLY] return 4 (\\b100) => [SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 5 (\\b101) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 6 (\\b110) => [SQL_RESULT_SET_CONCURRENCY_READ_ONLY, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 7 (\\b111) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_READ_ONLY, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] Valid result set types are described under arrow.flight.protocol.sql.SqlSupportedResultSetConcurrency. [OriginalName(\"SQL_SUPPORTED_CONCURRENCIES_FOR_RESULT_SET_SCROLL_INSENSITIVE\")] SqlSupportedConcurrenciesForResultSetScrollInsensitive = 571 Returns an int32 bitmask value concurrency types supported for arrow.flight.protocol.sql.SqlSupportedResultSetType.SQL_RESULT_SET_TYPE_SCROLL_INSENSITIVE. For instance: return 0 (\\b0) => [] (no supported concurrency types for this result set type) return 1 (\\b1) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED] return 2 (\\b10) => [SQL_RESULT_SET_CONCURRENCY_READ_ONLY] return 3 (\\b11) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_READ_ONLY] return 4 (\\b100) => [SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 5 (\\b101) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 6 (\\b110) => [SQL_RESULT_SET_CONCURRENCY_READ_ONLY, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 7 (\\b111) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_READ_ONLY, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] Valid result set types are described under arrow.flight.protocol.sql.SqlSupportedResultSetConcurrency. [OriginalName(\"SQL_SUPPORTED_CONCURRENCIES_FOR_RESULT_SET_SCROLL_SENSITIVE\")] SqlSupportedConcurrenciesForResultSetScrollSensitive = 570 Returns an int32 bitmask value concurrency types supported for arrow.flight.protocol.sql.SqlSupportedResultSetType.SQL_RESULT_SET_TYPE_SCROLL_SENSITIVE. For instance: return 0 (\\b0) => [] (no supported concurrency types for this result set type) return 1 (\\b1) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED] return 2 (\\b10) => [SQL_RESULT_SET_CONCURRENCY_READ_ONLY] return 3 (\\b11) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_READ_ONLY] return 4 (\\b100) => [SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 5 (\\b101) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 6 (\\b110) => [SQL_RESULT_SET_CONCURRENCY_READ_ONLY, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 7 (\\b111) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_READ_ONLY, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] Valid result set types are described under arrow.flight.protocol.sql.SqlSupportedResultSetConcurrency. [OriginalName(\"SQL_SUPPORTED_CONCURRENCIES_FOR_RESULT_SET_UNSPECIFIED\")] SqlSupportedConcurrenciesForResultSetUnspecified = 568 Returns an int32 bitmask value concurrency types supported for arrow.flight.protocol.sql.SqlSupportedResultSetType.SQL_RESULT_SET_TYPE_UNSPECIFIED. For instance: return 0 (\\b0) => [] (no supported concurrency types for this result set type) return 1 (\\b1) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED] return 2 (\\b10) => [SQL_RESULT_SET_CONCURRENCY_READ_ONLY] return 3 (\\b11) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_READ_ONLY] return 4 (\\b100) => [SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 5 (\\b101) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 6 (\\b110) => [SQL_RESULT_SET_CONCURRENCY_READ_ONLY, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] return 7 (\\b111) => [SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED, SQL_RESULT_SET_CONCURRENCY_READ_ONLY, SQL_RESULT_SET_CONCURRENCY_UPDATABLE] Valid result set types are described under arrow.flight.protocol.sql.SqlSupportedResultSetConcurrency. [OriginalName(\"SQL_SUPPORTED_GRAMMAR\")] SqlSupportedGrammar = 525 Retrieves the supported SQL grammar level as per the ODBC specification. Returns an int32 bitmask value representing the supported SQL grammar level. The returned bitmask should be parsed in order to retrieve the supported grammar levels. For instance: return 0 (\\b0) => [] (SQL grammar is unsupported); return 1 (\\b1) => [SQL_MINIMUM_GRAMMAR]; return 2 (\\b10) => [SQL_CORE_GRAMMAR]; return 3 (\\b11) => [SQL_MINIMUM_GRAMMAR, SQL_CORE_GRAMMAR]; return 4 (\\b100) => [SQL_EXTENDED_GRAMMAR]; return 5 (\\b101) => [SQL_MINIMUM_GRAMMAR, SQL_EXTENDED_GRAMMAR]; return 6 (\\b110) => [SQL_CORE_GRAMMAR, SQL_EXTENDED_GRAMMAR]; return 7 (\\b111) => [SQL_MINIMUM_GRAMMAR, SQL_CORE_GRAMMAR, SQL_EXTENDED_GRAMMAR]. Valid SQL grammar levels are described under arrow.flight.protocol.sql.SupportedSqlGrammar. [OriginalName(\"SQL_SUPPORTED_GROUP_BY\")] SqlSupportedGroupBy = 522 Retrieves the supported GROUP BY commands; Returns an int32 bitmask value representing the supported commands. The returned bitmask should be parsed in order to retrieve the supported commands. For instance: return 0 (\\b0) => [] (GROUP BY is unsupported); return 1 (\\b1) => [SQL_GROUP_BY_UNRELATED]; return 2 (\\b10) => [SQL_GROUP_BY_BEYOND_SELECT]; return 3 (\\b11) => [SQL_GROUP_BY_UNRELATED, SQL_GROUP_BY_BEYOND_SELECT]. Valid GROUP BY types are described under arrow.flight.protocol.sql.SqlSupportedGroupBy. [OriginalName(\"SQL_SUPPORTED_POSITIONED_COMMANDS\")] SqlSupportedPositionedCommands = 535 Retrieves the supported SQL positioned commands. Returns an int32 bitmask value representing the supported SQL positioned commands. The returned bitmask should be parsed in order to retrieve the supported SQL positioned commands. For instance: return 0 (\\b0) => [] (no supported SQL positioned commands); return 1 (\\b1) => [SQL_POSITIONED_DELETE]; return 2 (\\b10) => [SQL_POSITIONED_UPDATE]; return 3 (\\b11) => [SQL_POSITIONED_DELETE, SQL_POSITIONED_UPDATE]. Valid SQL positioned commands are described under arrow.flight.protocol.sql.SqlSupportedPositionedCommands. [OriginalName(\"SQL_SUPPORTED_RESULT_SET_TYPES\")] SqlSupportedResultSetTypes = 567 Retrieves an int32 bitmask value representing the supported result set types. The returned bitmask should be parsed in order to retrieve the supported result set types. For instance: return 0 (\\b0) => [] (no supported result set types); return 1 (\\b1) => [SQL_RESULT_SET_TYPE_UNSPECIFIED]; return 2 (\\b10) => [SQL_RESULT_SET_TYPE_FORWARD_ONLY]; return 3 (\\b11) => [SQL_RESULT_SET_TYPE_UNSPECIFIED, SQL_RESULT_SET_TYPE_FORWARD_ONLY]; return 4 (\\b100) => [SQL_RESULT_SET_TYPE_SCROLL_INSENSITIVE]; return 5 (\\b101) => [SQL_RESULT_SET_TYPE_UNSPECIFIED, SQL_RESULT_SET_TYPE_SCROLL_INSENSITIVE]; return 6 (\\b110) => [SQL_RESULT_SET_TYPE_FORWARD_ONLY, SQL_RESULT_SET_TYPE_SCROLL_INSENSITIVE]; return 7 (\\b111) => [SQL_RESULT_SET_TYPE_UNSPECIFIED, SQL_RESULT_SET_TYPE_FORWARD_ONLY, SQL_RESULT_SET_TYPE_SCROLL_INSENSITIVE]; return 8 (\\b1000) => [SQL_RESULT_SET_TYPE_SCROLL_SENSITIVE]; ... Valid result set types are described under arrow.flight.protocol.sql.SqlSupportedResultSetType. [OriginalName(\"SQL_SUPPORTED_SUBQUERIES\")] SqlSupportedSubqueries = 538 Retrieves the supported SQL subqueries. Returns an int32 bitmask value representing the supported SQL subqueries. The returned bitmask should be parsed in order to retrieve the supported SQL subqueries. For instance: return 0 (\\b0) => [] (no supported SQL subqueries); return 1 (\\b1) => [SQL_SUBQUERIES_IN_COMPARISONS]; return 2 (\\b10) => [SQL_SUBQUERIES_IN_EXISTS]; return 3 (\\b11) => [SQL_SUBQUERIES_IN_COMPARISONS, SQL_SUBQUERIES_IN_EXISTS]; return 4 (\\b100) => [SQL_SUBQUERIES_IN_INS]; return 5 (\\b101) => [SQL_SUBQUERIES_IN_COMPARISONS, SQL_SUBQUERIES_IN_INS]; return 6 (\\b110) => [SQL_SUBQUERIES_IN_INS, SQL_SUBQUERIES_IN_EXISTS]; return 7 (\\b111) => [SQL_SUBQUERIES_IN_COMPARISONS, SQL_SUBQUERIES_IN_EXISTS, SQL_SUBQUERIES_IN_INS]; return 8 (\\b1000) => [SQL_SUBQUERIES_IN_QUANTIFIEDS]; return 9 (\\b1001) => [SQL_SUBQUERIES_IN_COMPARISONS, SQL_SUBQUERIES_IN_QUANTIFIEDS]; return 10 (\\b1010) => [SQL_SUBQUERIES_IN_EXISTS, SQL_SUBQUERIES_IN_QUANTIFIEDS]; return 11 (\\b1011) => [SQL_SUBQUERIES_IN_COMPARISONS, SQL_SUBQUERIES_IN_EXISTS, SQL_SUBQUERIES_IN_QUANTIFIEDS]; return 12 (\\b1100) => [SQL_SUBQUERIES_IN_INS, SQL_SUBQUERIES_IN_QUANTIFIEDS]; return 13 (\\b1101) => [SQL_SUBQUERIES_IN_COMPARISONS, SQL_SUBQUERIES_IN_INS, SQL_SUBQUERIES_IN_QUANTIFIEDS]; return 14 (\\b1110) => [SQL_SUBQUERIES_IN_EXISTS, SQL_SUBQUERIES_IN_INS, SQL_SUBQUERIES_IN_QUANTIFIEDS]; return 15 (\\b1111) => [SQL_SUBQUERIES_IN_COMPARISONS, SQL_SUBQUERIES_IN_EXISTS, SQL_SUBQUERIES_IN_INS, SQL_SUBQUERIES_IN_QUANTIFIEDS]; ... Valid SQL subqueries are described under arrow.flight.protocol.sql.SqlSupportedSubqueries. [OriginalName(\"SQL_SUPPORTED_TRANSACTIONS_ISOLATION_LEVELS\")] SqlSupportedTransactionsIsolationLevels = 564 Retrieves the supported transactions isolation levels. Returns an int32 bitmask value representing the supported transactions isolation levels. The returned bitmask should be parsed in order to retrieve the supported transactions isolation levels. For instance: return 0 (\\b0) => [] (no supported SQL transactions isolation levels); return 1 (\\b1) => [SQL_TRANSACTION_NONE]; return 2 (\\b10) => [SQL_TRANSACTION_READ_UNCOMMITTED]; return 3 (\\b11) => [SQL_TRANSACTION_NONE, SQL_TRANSACTION_READ_UNCOMMITTED]; return 4 (\\b100) => [SQL_TRANSACTION_REPEATABLE_READ]; return 5 (\\b101) => [SQL_TRANSACTION_NONE, SQL_TRANSACTION_REPEATABLE_READ]; return 6 (\\b110) => [SQL_TRANSACTION_READ_UNCOMMITTED, SQL_TRANSACTION_REPEATABLE_READ]; return 7 (\\b111) => [SQL_TRANSACTION_NONE, SQL_TRANSACTION_READ_UNCOMMITTED, SQL_TRANSACTION_REPEATABLE_READ]; return 8 (\\b1000) => [SQL_TRANSACTION_REPEATABLE_READ]; return 9 (\\b1001) => [SQL_TRANSACTION_NONE, SQL_TRANSACTION_REPEATABLE_READ]; return 10 (\\b1010) => [SQL_TRANSACTION_READ_UNCOMMITTED, SQL_TRANSACTION_REPEATABLE_READ]; return 11 (\\b1011) => [SQL_TRANSACTION_NONE, SQL_TRANSACTION_READ_UNCOMMITTED, SQL_TRANSACTION_REPEATABLE_READ]; return 12 (\\b1100) => [SQL_TRANSACTION_REPEATABLE_READ, SQL_TRANSACTION_REPEATABLE_READ]; return 13 (\\b1101) => [SQL_TRANSACTION_NONE, SQL_TRANSACTION_REPEATABLE_READ, SQL_TRANSACTION_REPEATABLE_READ]; return 14 (\\b1110) => [SQL_TRANSACTION_READ_UNCOMMITTED, SQL_TRANSACTION_REPEATABLE_READ, SQL_TRANSACTION_REPEATABLE_READ]; return 15 (\\b1111) => [SQL_TRANSACTION_NONE, SQL_TRANSACTION_READ_UNCOMMITTED, SQL_TRANSACTION_REPEATABLE_READ, SQL_TRANSACTION_REPEATABLE_READ]; return 16 (\\b10000) => [SQL_TRANSACTION_SERIALIZABLE]; ... Valid SQL positioned commands are described under arrow.flight.protocol.sql.SqlTransactionIsolationLevel. [OriginalName(\"SQL_SUPPORTED_UNIONS\")] SqlSupportedUnions = 540 Retrieves the supported SQL UNIONs. Returns an int32 bitmask value representing the supported SQL UNIONs. The returned bitmask should be parsed in order to retrieve the supported SQL UNIONs. For instance: return 0 (\\b0) => [] (no supported SQL positioned commands); return 1 (\\b1) => [SQL_UNION]; return 2 (\\b10) => [SQL_UNION_ALL]; return 3 (\\b11) => [SQL_UNION, SQL_UNION_ALL]. Valid SQL positioned commands are described under arrow.flight.protocol.sql.SqlSupportedUnions. [OriginalName(\"SQL_SUPPORTS_COLUMN_ALIASING\")] SqlSupportsColumnAliasing = 515 Retrieves a boolean value indicating whether column aliasing is supported. If so, the SQL AS clause can be used to provide names for computed columns or to provide alias names for columns as required. Returns: false: if column aliasing is unsupported; true: if column aliasing is supported. [OriginalName(\"SQL_SUPPORTS_CONVERT\")] SqlSupportsConvert = 517 Retrieves a map where the key is the type to convert from and the value is a list with the types to convert to, indicating the supported conversions. Each key and each item on the list value is a value to a predefined type on SqlSupportsConvert enum. The returned map will be: map<int32, list<int32>> [OriginalName(\"SQL_SUPPORTS_DIFFERENT_TABLE_CORRELATION_NAMES\")] SqlSupportsDifferentTableCorrelationNames = 519 Retrieves a boolean value indicating whether, when table correlation names are supported, they are restricted to being different from the names of the tables. Returns: false: if different table correlation names are unsupported; true: if different table correlation names are supported [OriginalName(\"SQL_SUPPORTS_EXPRESSIONS_IN_ORDER_BY\")] SqlSupportsExpressionsInOrderBy = 520 Retrieves a boolean value indicating whether expressions in ORDER BY lists are supported. Returns: false: if expressions in ORDER BY are unsupported; true: if expressions in ORDER BY are supported; [OriginalName(\"SQL_SUPPORTS_INTEGRITY_ENHANCEMENT_FACILITY\")] SqlSupportsIntegrityEnhancementFacility = 527 Retrieves a boolean value indicating whether the SQL Integrity Enhancement Facility is supported. Returns: false: if the SQL Integrity Enhancement Facility is supported; true: if the SQL Integrity Enhancement Facility is supported. [OriginalName(\"SQL_SUPPORTS_LIKE_ESCAPE_CLAUSE\")] SqlSupportsLikeEscapeClause = 523 Retrieves a boolean value indicating whether specifying a LIKE escape clause is supported. Returns: false: if specifying a LIKE escape clause is unsupported; true: if specifying a LIKE escape clause is supported. [OriginalName(\"SQL_SUPPORTS_NON_NULLABLE_COLUMNS\")] SqlSupportsNonNullableColumns = 524 Retrieves a boolean value indicating whether columns may be defined as non-nullable. Returns: false: if columns cannot be defined as non-nullable; true: if columns may be defined as non-nullable. [OriginalName(\"SQL_SUPPORTS_ORDER_BY_UNRELATED\")] SqlSupportsOrderByUnrelated = 521 Retrieves a boolean value indicating whether using a column that is not in the SELECT statement in a GROUP BY clause is supported. Returns: false: if using a column that is not in the SELECT statement in a GROUP BY clause is unsupported; true: if using a column that is not in the SELECT statement in a GROUP BY clause is supported. [OriginalName(\"SQL_SUPPORTS_TABLE_CORRELATION_NAMES\")] SqlSupportsTableCorrelationNames = 518 Retrieves a boolean value indicating whether, when table correlation names are supported, they are restricted to being different from the names of the tables. Returns: false: if table correlation names are unsupported; true: if table correlation names are supported. [OriginalName(\"SQL_SYSTEM_FUNCTIONS\")] SqlSystemFunctions = 511 Retrieves a UTF-8 string list with values of the supported system functions. [OriginalName(\"SQL_TRANSACTIONS_SUPPORTED\")] SqlTransactionsSupported = 563 Retrieves a boolean value indicating whether transactions are supported. If not, invoking the method commit is a noop, and the isolation level is arrow.flight.protocol.sql.SqlTransactionIsolationLevel.TRANSACTION_NONE. Returns: false: if transactions are unsupported; true: if transactions are supported."
  },
  "api/Arrow.Flight.Protocol.Sql.SqlNullOrdering.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlNullOrdering.html",
    "title": "Enum SqlNullOrdering | Apache Arrow .NET",
    "summary": "Enum SqlNullOrdering Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlNullOrdering Fields [OriginalName(\"SQL_NULLS_SORTED_AT_END\")] SqlNullsSortedAtEnd = 3 [OriginalName(\"SQL_NULLS_SORTED_AT_START\")] SqlNullsSortedAtStart = 2 [OriginalName(\"SQL_NULLS_SORTED_HIGH\")] SqlNullsSortedHigh = 0 [OriginalName(\"SQL_NULLS_SORTED_LOW\")] SqlNullsSortedLow = 1"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlOuterJoinsSupportLevel.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlOuterJoinsSupportLevel.html",
    "title": "Enum SqlOuterJoinsSupportLevel | Apache Arrow .NET",
    "summary": "Enum SqlOuterJoinsSupportLevel Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlOuterJoinsSupportLevel Fields [OriginalName(\"SQL_FULL_OUTER_JOINS\")] SqlFullOuterJoins = 2 [OriginalName(\"SQL_JOINS_UNSUPPORTED\")] SqlJoinsUnsupported = 0 [OriginalName(\"SQL_LIMITED_OUTER_JOINS\")] SqlLimitedOuterJoins = 1"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedCaseSensitivity.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedCaseSensitivity.html",
    "title": "Enum SqlSupportedCaseSensitivity | Apache Arrow .NET",
    "summary": "Enum SqlSupportedCaseSensitivity Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportedCaseSensitivity Fields [OriginalName(\"SQL_CASE_SENSITIVITY_CASE_INSENSITIVE\")] SqlCaseSensitivityCaseInsensitive = 1 [OriginalName(\"SQL_CASE_SENSITIVITY_LOWERCASE\")] SqlCaseSensitivityLowercase = 3 [OriginalName(\"SQL_CASE_SENSITIVITY_UNKNOWN\")] SqlCaseSensitivityUnknown = 0 [OriginalName(\"SQL_CASE_SENSITIVITY_UPPERCASE\")] SqlCaseSensitivityUppercase = 2"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedElementActions.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedElementActions.html",
    "title": "Enum SqlSupportedElementActions | Apache Arrow .NET",
    "summary": "Enum SqlSupportedElementActions Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportedElementActions Fields [OriginalName(\"SQL_ELEMENT_IN_INDEX_DEFINITIONS\")] SqlElementInIndexDefinitions = 1 [OriginalName(\"SQL_ELEMENT_IN_PRIVILEGE_DEFINITIONS\")] SqlElementInPrivilegeDefinitions = 2 [OriginalName(\"SQL_ELEMENT_IN_PROCEDURE_CALLS\")] SqlElementInProcedureCalls = 0"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedGroupBy.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedGroupBy.html",
    "title": "Enum SqlSupportedGroupBy | Apache Arrow .NET",
    "summary": "Enum SqlSupportedGroupBy Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportedGroupBy Fields [OriginalName(\"SQL_GROUP_BY_BEYOND_SELECT\")] SqlGroupByBeyondSelect = 1 [OriginalName(\"SQL_GROUP_BY_UNRELATED\")] SqlGroupByUnrelated = 0"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedPositionedCommands.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedPositionedCommands.html",
    "title": "Enum SqlSupportedPositionedCommands | Apache Arrow .NET",
    "summary": "Enum SqlSupportedPositionedCommands Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportedPositionedCommands Fields [OriginalName(\"SQL_POSITIONED_DELETE\")] SqlPositionedDelete = 0 [OriginalName(\"SQL_POSITIONED_UPDATE\")] SqlPositionedUpdate = 1"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedResultSetConcurrency.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedResultSetConcurrency.html",
    "title": "Enum SqlSupportedResultSetConcurrency | Apache Arrow .NET",
    "summary": "Enum SqlSupportedResultSetConcurrency Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportedResultSetConcurrency Fields [OriginalName(\"SQL_RESULT_SET_CONCURRENCY_READ_ONLY\")] SqlResultSetConcurrencyReadOnly = 1 [OriginalName(\"SQL_RESULT_SET_CONCURRENCY_UNSPECIFIED\")] SqlResultSetConcurrencyUnspecified = 0 [OriginalName(\"SQL_RESULT_SET_CONCURRENCY_UPDATABLE\")] SqlResultSetConcurrencyUpdatable = 2"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedResultSetType.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedResultSetType.html",
    "title": "Enum SqlSupportedResultSetType | Apache Arrow .NET",
    "summary": "Enum SqlSupportedResultSetType Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportedResultSetType Fields [OriginalName(\"SQL_RESULT_SET_TYPE_FORWARD_ONLY\")] SqlResultSetTypeForwardOnly = 1 [OriginalName(\"SQL_RESULT_SET_TYPE_SCROLL_INSENSITIVE\")] SqlResultSetTypeScrollInsensitive = 2 [OriginalName(\"SQL_RESULT_SET_TYPE_SCROLL_SENSITIVE\")] SqlResultSetTypeScrollSensitive = 3 [OriginalName(\"SQL_RESULT_SET_TYPE_UNSPECIFIED\")] SqlResultSetTypeUnspecified = 0"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedSubqueries.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedSubqueries.html",
    "title": "Enum SqlSupportedSubqueries | Apache Arrow .NET",
    "summary": "Enum SqlSupportedSubqueries Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportedSubqueries Fields [OriginalName(\"SQL_SUBQUERIES_IN_COMPARISONS\")] SqlSubqueriesInComparisons = 0 [OriginalName(\"SQL_SUBQUERIES_IN_EXISTS\")] SqlSubqueriesInExists = 1 [OriginalName(\"SQL_SUBQUERIES_IN_INS\")] SqlSubqueriesInIns = 2 [OriginalName(\"SQL_SUBQUERIES_IN_QUANTIFIEDS\")] SqlSubqueriesInQuantifieds = 3"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedTransaction.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedTransaction.html",
    "title": "Enum SqlSupportedTransaction | Apache Arrow .NET",
    "summary": "Enum SqlSupportedTransaction Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll The level of support for Flight SQL transaction RPCs. public enum SqlSupportedTransaction Fields [OriginalName(\"SQL_SUPPORTED_TRANSACTION_NONE\")] None = 0 Unknown/not indicated/no support [OriginalName(\"SQL_SUPPORTED_TRANSACTION_SAVEPOINT\")] Savepoint = 2 Transactions and savepoints [OriginalName(\"SQL_SUPPORTED_TRANSACTION_TRANSACTION\")] Transaction = 1 Transactions, but not savepoints. A savepoint is a mark within a transaction that can be individually rolled back to. Not all databases support savepoints."
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedTransactions.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedTransactions.html",
    "title": "Enum SqlSupportedTransactions | Apache Arrow .NET",
    "summary": "Enum SqlSupportedTransactions Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportedTransactions Fields [OriginalName(\"SQL_DATA_DEFINITION_TRANSACTIONS\")] SqlDataDefinitionTransactions = 1 [OriginalName(\"SQL_DATA_MANIPULATION_TRANSACTIONS\")] SqlDataManipulationTransactions = 2 [OriginalName(\"SQL_TRANSACTION_UNSPECIFIED\")] SqlTransactionUnspecified = 0"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportedUnions.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportedUnions.html",
    "title": "Enum SqlSupportedUnions | Apache Arrow .NET",
    "summary": "Enum SqlSupportedUnions Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportedUnions Fields [OriginalName(\"SQL_UNION\")] SqlUnion = 0 [OriginalName(\"SQL_UNION_ALL\")] SqlUnionAll = 1"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlSupportsConvert.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlSupportsConvert.html",
    "title": "Enum SqlSupportsConvert | Apache Arrow .NET",
    "summary": "Enum SqlSupportsConvert Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlSupportsConvert Fields [OriginalName(\"SQL_CONVERT_BIGINT\")] SqlConvertBigint = 0 [OriginalName(\"SQL_CONVERT_BINARY\")] SqlConvertBinary = 1 [OriginalName(\"SQL_CONVERT_BIT\")] SqlConvertBit = 2 [OriginalName(\"SQL_CONVERT_CHAR\")] SqlConvertChar = 3 [OriginalName(\"SQL_CONVERT_DATE\")] SqlConvertDate = 4 [OriginalName(\"SQL_CONVERT_DECIMAL\")] SqlConvertDecimal = 5 [OriginalName(\"SQL_CONVERT_FLOAT\")] SqlConvertFloat = 6 [OriginalName(\"SQL_CONVERT_INTEGER\")] SqlConvertInteger = 7 [OriginalName(\"SQL_CONVERT_INTERVAL_DAY_TIME\")] SqlConvertIntervalDayTime = 8 [OriginalName(\"SQL_CONVERT_INTERVAL_YEAR_MONTH\")] SqlConvertIntervalYearMonth = 9 [OriginalName(\"SQL_CONVERT_LONGVARBINARY\")] SqlConvertLongvarbinary = 10 [OriginalName(\"SQL_CONVERT_LONGVARCHAR\")] SqlConvertLongvarchar = 11 [OriginalName(\"SQL_CONVERT_NUMERIC\")] SqlConvertNumeric = 12 [OriginalName(\"SQL_CONVERT_REAL\")] SqlConvertReal = 13 [OriginalName(\"SQL_CONVERT_SMALLINT\")] SqlConvertSmallint = 14 [OriginalName(\"SQL_CONVERT_TIME\")] SqlConvertTime = 15 [OriginalName(\"SQL_CONVERT_TIMESTAMP\")] SqlConvertTimestamp = 16 [OriginalName(\"SQL_CONVERT_TINYINT\")] SqlConvertTinyint = 17 [OriginalName(\"SQL_CONVERT_VARBINARY\")] SqlConvertVarbinary = 18 [OriginalName(\"SQL_CONVERT_VARCHAR\")] SqlConvertVarchar = 19"
  },
  "api/Arrow.Flight.Protocol.Sql.SqlTransactionIsolationLevel.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SqlTransactionIsolationLevel.html",
    "title": "Enum SqlTransactionIsolationLevel | Apache Arrow .NET",
    "summary": "Enum SqlTransactionIsolationLevel Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SqlTransactionIsolationLevel Fields [OriginalName(\"SQL_TRANSACTION_NONE\")] SqlTransactionNone = 0 [OriginalName(\"SQL_TRANSACTION_READ_COMMITTED\")] SqlTransactionReadCommitted = 2 [OriginalName(\"SQL_TRANSACTION_READ_UNCOMMITTED\")] SqlTransactionReadUncommitted = 1 [OriginalName(\"SQL_TRANSACTION_REPEATABLE_READ\")] SqlTransactionRepeatableRead = 3 [OriginalName(\"SQL_TRANSACTION_SERIALIZABLE\")] SqlTransactionSerializable = 4"
  },
  "api/Arrow.Flight.Protocol.Sql.SubstraitPlan.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SubstraitPlan.html",
    "title": "Class SubstraitPlan | Apache Arrow .NET",
    "summary": "Class SubstraitPlan Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll An embedded message describing a Substrait plan to execute. public sealed class SubstraitPlan : IMessage<SubstraitPlan>, IEquatable<SubstraitPlan>, IDeepCloneable<SubstraitPlan>, IBufferMessage, IMessage Inheritance object SubstraitPlan Implements IMessage<SubstraitPlan> IEquatable<SubstraitPlan> IDeepCloneable<SubstraitPlan> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors SubstraitPlan() public SubstraitPlan() SubstraitPlan(SubstraitPlan) public SubstraitPlan(SubstraitPlan other) Parameters other SubstraitPlan Fields PlanFieldNumber Field number for the \"plan\" field. public const int PlanFieldNumber = 1 Field Value int VersionFieldNumber Field number for the \"version\" field. public const int VersionFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<SubstraitPlan> Parser { get; } Property Value MessageParser<SubstraitPlan> Plan The serialized substrait.Plan to create a prepared statement for. XXX(ARROW-16902): this is bytes instead of an embedded message because Protobuf does not really support one DLL using Protobuf definitions from another DLL. public ByteString Plan { get; set; } Property Value ByteString Version The Substrait release, e.g. \"0.12.0\". This information is not tracked in the plan itself, so this is the only way for consumers to potentially know if they can handle the plan. public string Version { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public SubstraitPlan Clone() Returns SubstraitPlan A deep clone of this object. Equals(SubstraitPlan) Indicates whether the current object is equal to another object of the same type. public bool Equals(SubstraitPlan other) Parameters other SubstraitPlan An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(SubstraitPlan) Merges the given message into this one. public void MergeFrom(SubstraitPlan other) Parameters other SubstraitPlan Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.SupportedAnsi92SqlGrammarLevel.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SupportedAnsi92SqlGrammarLevel.html",
    "title": "Enum SupportedAnsi92SqlGrammarLevel | Apache Arrow .NET",
    "summary": "Enum SupportedAnsi92SqlGrammarLevel Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SupportedAnsi92SqlGrammarLevel Fields [OriginalName(\"ANSI92_ENTRY_SQL\")] Ansi92EntrySql = 0 [OriginalName(\"ANSI92_FULL_SQL\")] Ansi92FullSql = 2 [OriginalName(\"ANSI92_INTERMEDIATE_SQL\")] Ansi92IntermediateSql = 1"
  },
  "api/Arrow.Flight.Protocol.Sql.SupportedSqlGrammar.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.SupportedSqlGrammar.html",
    "title": "Enum SupportedSqlGrammar | Apache Arrow .NET",
    "summary": "Enum SupportedSqlGrammar Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum SupportedSqlGrammar Fields [OriginalName(\"SQL_CORE_GRAMMAR\")] SqlCoreGrammar = 1 [OriginalName(\"SQL_EXTENDED_GRAMMAR\")] SqlExtendedGrammar = 2 [OriginalName(\"SQL_MINIMUM_GRAMMAR\")] SqlMinimumGrammar = 0"
  },
  "api/Arrow.Flight.Protocol.Sql.TicketStatementQuery.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.TicketStatementQuery.html",
    "title": "Class TicketStatementQuery | Apache Arrow .NET",
    "summary": "Class TicketStatementQuery Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Represents a ticket resulting from GetFlightInfo with a CommandStatementQuery. This should be used only once and treated as an opaque value, that is, clients should not attempt to parse this. public sealed class TicketStatementQuery : IMessage<TicketStatementQuery>, IEquatable<TicketStatementQuery>, IDeepCloneable<TicketStatementQuery>, IBufferMessage, IMessage Inheritance object TicketStatementQuery Implements IMessage<TicketStatementQuery> IEquatable<TicketStatementQuery> IDeepCloneable<TicketStatementQuery> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods FlightSqlExtensions.Serialize(IBufferMessage) Constructors TicketStatementQuery() public TicketStatementQuery() TicketStatementQuery(TicketStatementQuery) public TicketStatementQuery(TicketStatementQuery other) Parameters other TicketStatementQuery Fields StatementHandleFieldNumber Field number for the \"statement_handle\" field. public const int StatementHandleFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<TicketStatementQuery> Parser { get; } Property Value MessageParser<TicketStatementQuery> StatementHandle Unique identifier for the instance of the statement to execute. public ByteString StatementHandle { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public TicketStatementQuery Clone() Returns TicketStatementQuery A deep clone of this object. Equals(TicketStatementQuery) Indicates whether the current object is equal to another object of the same type. public bool Equals(TicketStatementQuery other) Parameters other TicketStatementQuery An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(TicketStatementQuery) Merges the given message into this one. public void MergeFrom(TicketStatementQuery other) Parameters other TicketStatementQuery Remarks See the user guide for precise merge semantics. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/Arrow.Flight.Protocol.Sql.UpdateDeleteRules.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.UpdateDeleteRules.html",
    "title": "Enum UpdateDeleteRules | Apache Arrow .NET",
    "summary": "Enum UpdateDeleteRules Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll public enum UpdateDeleteRules Fields [OriginalName(\"CASCADE\")] Cascade = 0 [OriginalName(\"NO_ACTION\")] NoAction = 3 [OriginalName(\"RESTRICT\")] Restrict = 1 [OriginalName(\"SET_DEFAULT\")] SetDefault = 4 [OriginalName(\"SET_NULL\")] SetNull = 2"
  },
  "api/Arrow.Flight.Protocol.Sql.XdbcDataType.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.XdbcDataType.html",
    "title": "Enum XdbcDataType | Apache Arrow .NET",
    "summary": "Enum XdbcDataType Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll The JDBC/ODBC-defined type of any object. All the values here are the same as in the JDBC and ODBC specs. public enum XdbcDataType Fields [OriginalName(\"XDBC_BIGINT\")] XdbcBigint = -5 [OriginalName(\"XDBC_BINARY\")] XdbcBinary = -2 [OriginalName(\"XDBC_BIT\")] XdbcBit = -7 [OriginalName(\"XDBC_CHAR\")] XdbcChar = 1 [OriginalName(\"XDBC_DATE\")] XdbcDate = 91 [OriginalName(\"XDBC_DATETIME\")] XdbcDatetime = 9 [OriginalName(\"XDBC_DECIMAL\")] XdbcDecimal = 3 [OriginalName(\"XDBC_DOUBLE\")] XdbcDouble = 8 [OriginalName(\"XDBC_FLOAT\")] XdbcFloat = 6 [OriginalName(\"XDBC_INTEGER\")] XdbcInteger = 4 [OriginalName(\"XDBC_INTERVAL\")] XdbcInterval = 10 [OriginalName(\"XDBC_LONGVARBINARY\")] XdbcLongvarbinary = -4 [OriginalName(\"XDBC_LONGVARCHAR\")] XdbcLongvarchar = -1 [OriginalName(\"XDBC_NUMERIC\")] XdbcNumeric = 2 [OriginalName(\"XDBC_REAL\")] XdbcReal = 7 [OriginalName(\"XDBC_SMALLINT\")] XdbcSmallint = 5 [OriginalName(\"XDBC_TIME\")] XdbcTime = 92 [OriginalName(\"XDBC_TIMESTAMP\")] XdbcTimestamp = 93 [OriginalName(\"XDBC_TINYINT\")] XdbcTinyint = -6 [OriginalName(\"XDBC_UNKNOWN_TYPE\")] XdbcUnknownType = 0 [OriginalName(\"XDBC_VARBINARY\")] XdbcVarbinary = -3 [OriginalName(\"XDBC_VARCHAR\")] XdbcVarchar = 12 [OriginalName(\"XDBC_WCHAR\")] XdbcWchar = -8 [OriginalName(\"XDBC_WVARCHAR\")] XdbcWvarchar = -9"
  },
  "api/Arrow.Flight.Protocol.Sql.XdbcDatetimeSubcode.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.XdbcDatetimeSubcode.html",
    "title": "Enum XdbcDatetimeSubcode | Apache Arrow .NET",
    "summary": "Enum XdbcDatetimeSubcode Namespace Arrow.Flight.Protocol.Sql Assembly Apache.Arrow.Flight.Sql.dll Detailed subtype information for XDBC_TYPE_DATETIME and XDBC_TYPE_INTERVAL. public enum XdbcDatetimeSubcode Fields [OriginalName(\"XDBC_SUBCODE_DATE\", PreferredAlias = false)] XdbcSubcodeDate = 1 [OriginalName(\"XDBC_SUBCODE_DAY\", PreferredAlias = false)] XdbcSubcodeDay = 3 [OriginalName(\"XDBC_SUBCODE_DAY_TO_HOUR\")] XdbcSubcodeDayToHour = 8 [OriginalName(\"XDBC_SUBCODE_DAY_TO_MINUTE\")] XdbcSubcodeDayToMinute = 9 [OriginalName(\"XDBC_SUBCODE_DAY_TO_SECOND\")] XdbcSubcodeDayToSecond = 10 [OriginalName(\"XDBC_SUBCODE_HOUR\", PreferredAlias = false)] XdbcSubcodeHour = 4 [OriginalName(\"XDBC_SUBCODE_HOUR_TO_MINUTE\")] XdbcSubcodeHourToMinute = 11 [OriginalName(\"XDBC_SUBCODE_HOUR_TO_SECOND\")] XdbcSubcodeHourToSecond = 12 [OriginalName(\"XDBC_SUBCODE_INTERVAL_DAY\")] XdbcSubcodeIntervalDay = 103 [OriginalName(\"XDBC_SUBCODE_INTERVAL_DAY_TO_HOUR\")] XdbcSubcodeIntervalDayToHour = 108 [OriginalName(\"XDBC_SUBCODE_INTERVAL_DAY_TO_MINUTE\")] XdbcSubcodeIntervalDayToMinute = 109 [OriginalName(\"XDBC_SUBCODE_INTERVAL_DAY_TO_SECOND\")] XdbcSubcodeIntervalDayToSecond = 110 [OriginalName(\"XDBC_SUBCODE_INTERVAL_HOUR\")] XdbcSubcodeIntervalHour = 104 [OriginalName(\"XDBC_SUBCODE_INTERVAL_HOUR_TO_MINUTE\")] XdbcSubcodeIntervalHourToMinute = 111 [OriginalName(\"XDBC_SUBCODE_INTERVAL_HOUR_TO_SECOND\")] XdbcSubcodeIntervalHourToSecond = 112 [OriginalName(\"XDBC_SUBCODE_INTERVAL_MINUTE\")] XdbcSubcodeIntervalMinute = 105 [OriginalName(\"XDBC_SUBCODE_INTERVAL_MINUTE_TO_SECOND\")] XdbcSubcodeIntervalMinuteToSecond = 113 [OriginalName(\"XDBC_SUBCODE_INTERVAL_MONTH\")] XdbcSubcodeIntervalMonth = 102 [OriginalName(\"XDBC_SUBCODE_INTERVAL_SECOND\")] XdbcSubcodeIntervalSecond = 106 [OriginalName(\"XDBC_SUBCODE_INTERVAL_YEAR\")] XdbcSubcodeIntervalYear = 101 [OriginalName(\"XDBC_SUBCODE_INTERVAL_YEAR_TO_MONTH\")] XdbcSubcodeIntervalYearToMonth = 107 [OriginalName(\"XDBC_SUBCODE_MINUTE\", PreferredAlias = false)] XdbcSubcodeMinute = 5 [OriginalName(\"XDBC_SUBCODE_MINUTE_TO_SECOND\")] XdbcSubcodeMinuteToSecond = 13 [OriginalName(\"XDBC_SUBCODE_MONTH\", PreferredAlias = false)] XdbcSubcodeMonth = 2 [OriginalName(\"XDBC_SUBCODE_SECOND\")] XdbcSubcodeSecond = 6 [OriginalName(\"XDBC_SUBCODE_TIME\")] XdbcSubcodeTime = 2 [OriginalName(\"XDBC_SUBCODE_TIME_WITH_TIMEZONE\")] XdbcSubcodeTimeWithTimezone = 4 [OriginalName(\"XDBC_SUBCODE_TIMESTAMP\")] XdbcSubcodeTimestamp = 3 [OriginalName(\"XDBC_SUBCODE_TIMESTAMP_WITH_TIMEZONE\")] XdbcSubcodeTimestampWithTimezone = 5 [OriginalName(\"XDBC_SUBCODE_UNKNOWN\")] XdbcSubcodeUnknown = 0 [OriginalName(\"XDBC_SUBCODE_YEAR\")] XdbcSubcodeYear = 1 [OriginalName(\"XDBC_SUBCODE_YEAR_TO_MONTH\")] XdbcSubcodeYearToMonth = 7"
  },
  "api/Arrow.Flight.Protocol.Sql.html": {
    "href": "api/Arrow.Flight.Protocol.Sql.html",
    "title": "Namespace Arrow.Flight.Protocol.Sql | Apache Arrow .NET",
    "summary": "Namespace Arrow.Flight.Protocol.Sql Classes ActionBeginSavepointRequest Request message for the \"BeginSavepoint\" action. Creates a savepoint within a transaction. Only supported if FLIGHT_SQL_TRANSACTION is FLIGHT_SQL_TRANSACTION_SUPPORT_SAVEPOINT. ActionBeginSavepointResult The result of a \"BeginSavepoint\" action. The transaction can be manipulated with the \"EndSavepoint\" action. If the associated transaction is committed, rolled back, or times out, then the savepoint is also invalidated. The result should be wrapped in a google.protobuf.Any message. ActionBeginTransactionRequest Request message for the \"BeginTransaction\" action. Begins a transaction. ActionBeginTransactionResult The result of a \"BeginTransaction\" action. The transaction can be manipulated with the \"EndTransaction\" action, or automatically via server timeout. If the transaction times out, then it is automatically rolled back. The result should be wrapped in a google.protobuf.Any message. ActionCancelQueryRequest Request message for the \"CancelQuery\" action. Explicitly cancel a running query. This lets a single client explicitly cancel work, no matter how many clients are involved/whether the query is distributed or not, given server support. The transaction/statement is not rolled back; it is the application's job to commit or rollback as appropriate. This only indicates the client no longer wishes to read the remainder of the query results or continue submitting data. This command is idempotent. This command is deprecated since 13.0.0. Use the \"CancelFlightInfo\" action with DoAction instead. ActionCancelQueryResult The result of cancelling a query. The result should be wrapped in a google.protobuf.Any message. This command is deprecated since 13.0.0. Use the \"CancelFlightInfo\" action with DoAction instead. ActionCancelQueryResult.Types Container for nested types declared in the ActionCancelQueryResult message type. ActionClosePreparedStatementRequest Request message for the \"ClosePreparedStatement\" action on a Flight SQL enabled backend. Closes server resources associated with the prepared statement handle. ActionCreatePreparedStatementRequest Request message for the \"CreatePreparedStatement\" action on a Flight SQL enabled backend. ActionCreatePreparedStatementResult Wrap the result of a \"CreatePreparedStatement\" or \"CreatePreparedSubstraitPlan\" action. The resultant PreparedStatement can be closed either: Manually, through the \"ClosePreparedStatement\" action; Automatically, by a server timeout. The result should be wrapped in a google.protobuf.Any message. ActionCreatePreparedSubstraitPlanRequest Request message for the \"CreatePreparedSubstraitPlan\" action on a Flight SQL enabled backend. ActionEndSavepointRequest Request message for the \"EndSavepoint\" action. Release (RELEASE) the savepoint or rollback (ROLLBACK) to the savepoint. Releasing a savepoint invalidates that savepoint. Rolling back to a savepoint does not invalidate the savepoint, but invalidates all savepoints created after the current savepoint. ActionEndSavepointRequest.Types Container for nested types declared in the ActionEndSavepointRequest message type. ActionEndTransactionRequest Request message for the \"EndTransaction\" action. Commit (COMMIT) or rollback (ROLLBACK) the transaction. If the action completes successfully, the transaction handle is invalidated, as are all associated savepoints. ActionEndTransactionRequest.Types Container for nested types declared in the ActionEndTransactionRequest message type. CommandGetCatalogs Represents a request to retrieve the list of catalogs on a Flight SQL enabled backend. The definition of a catalog depends on vendor/implementation. It is usually the database itself Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < catalog_name: utf8 not null The returned data should be ordered by catalog_name. CommandGetCrossReference Represents a request to retrieve a description of the foreign key columns in the given foreign key table that reference the primary key or the columns representing a unique constraint of the parent table (could be the same or a different table) on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < pk_catalog_name: utf8, pk_db_schema_name: utf8, pk_table_name: utf8 not null, pk_column_name: utf8 not null, fk_catalog_name: utf8, fk_db_schema_name: utf8, fk_table_name: utf8 not null, fk_column_name: utf8 not null, key_sequence: int32 not null, fk_key_name: utf8, pk_key_name: utf8, update_rule: uint8 not null, delete_rule: uint8 not null The returned data should be ordered by pk_catalog_name, pk_db_schema_name, pk_table_name, pk_key_name, then key_sequence. update_rule and delete_rule returns a byte that is equivalent to actions: 0 = CASCADE 1 = RESTRICT 2 = SET NULL 3 = NO ACTION 4 = SET DEFAULT CommandGetDbSchemas Represents a request to retrieve the list of database schemas on a Flight SQL enabled backend. The definition of a database schema depends on vendor/implementation. It is usually a collection of tables. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < catalog_name: utf8, db_schema_name: utf8 not null The returned data should be ordered by catalog_name, then db_schema_name. CommandGetExportedKeys Represents a request to retrieve a description of the foreign key columns that reference the given table's primary key columns (the foreign keys exported by a table) of a table on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < pk_catalog_name: utf8, pk_db_schema_name: utf8, pk_table_name: utf8 not null, pk_column_name: utf8 not null, fk_catalog_name: utf8, fk_db_schema_name: utf8, fk_table_name: utf8 not null, fk_column_name: utf8 not null, key_sequence: int32 not null, fk_key_name: utf8, pk_key_name: utf8, update_rule: uint8 not null, delete_rule: uint8 not null The returned data should be ordered by fk_catalog_name, fk_db_schema_name, fk_table_name, fk_key_name, then key_sequence. update_rule and delete_rule returns a byte that is equivalent to actions declared on UpdateDeleteRules enum. CommandGetImportedKeys Represents a request to retrieve the foreign keys of a table on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < pk_catalog_name: utf8, pk_db_schema_name: utf8, pk_table_name: utf8 not null, pk_column_name: utf8 not null, fk_catalog_name: utf8, fk_db_schema_name: utf8, fk_table_name: utf8 not null, fk_column_name: utf8 not null, key_sequence: int32 not null, fk_key_name: utf8, pk_key_name: utf8, update_rule: uint8 not null, delete_rule: uint8 not null The returned data should be ordered by pk_catalog_name, pk_db_schema_name, pk_table_name, pk_key_name, then key_sequence. update_rule and delete_rule returns a byte that is equivalent to actions: 0 = CASCADE 1 = RESTRICT 2 = SET NULL 3 = NO ACTION 4 = SET DEFAULT CommandGetPrimaryKeys Represents a request to retrieve the primary keys of a table on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < catalog_name: utf8, db_schema_name: utf8, table_name: utf8 not null, column_name: utf8 not null, key_name: utf8, key_sequence: int32 not null The returned data should be ordered by catalog_name, db_schema_name, table_name, key_name, then key_sequence. CommandGetSqlInfo Represents a metadata request. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the metadata request. The returned Arrow schema will be: < info_name: uint32 not null, value: dense_union< string_value: utf8, bool_value: bool, bigint_value: int64, int32_bitmask: int32, string_list: list<string_data: utf8> int32_to_int32_list_map: map<key: int32, value: list<\\(data\\): int32>> where there is one row per requested piece of metadata information. CommandGetTableTypes Represents a request to retrieve the list of table types on a Flight SQL enabled backend. The table types depend on vendor/implementation. It is usually used to separate tables from views or system tables. TABLE, VIEW, and SYSTEM TABLE are commonly supported. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < table_type: utf8 not null The returned data should be ordered by table_type. CommandGetTables Represents a request to retrieve the list of tables, and optionally their schemas, on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. GetFlightInfo: execute the catalog metadata request. The returned Arrow schema will be: < catalog_name: utf8, db_schema_name: utf8, table_name: utf8 not null, table_type: utf8 not null, [optional] table_schema: bytes not null (schema of the table as described in Schema.fbs::Schema, it is serialized as an IPC message.) Fields on table_schema may contain the following metadata: ARROW:FLIGHT:SQL:CATALOG_NAME - Table's catalog name ARROW:FLIGHT:SQL:DB_SCHEMA_NAME - Database schema name ARROW:FLIGHT:SQL:TABLE_NAME - Table name ARROW:FLIGHT:SQL:TYPE_NAME - The data source-specific name for the data type of the column. ARROW:FLIGHT:SQL:PRECISION - Column precision/size ARROW:FLIGHT:SQL:SCALE - Column scale/decimal digits if applicable ARROW:FLIGHT:SQL:IS_AUTO_INCREMENT - \"1\" indicates if the column is auto incremented, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_CASE_SENSITIVE - \"1\" indicates if the column is case-sensitive, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_READ_ONLY - \"1\" indicates if the column is read only, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_SEARCHABLE - \"1\" indicates if the column is searchable via WHERE clause, \"0\" otherwise. ARROW:FLIGHT:SQL:REMARKS - A comment describing the column. This field has been added after all others, clients should be prepared to find it missing. The returned data should be ordered by catalog_name, db_schema_name, table_name, then table_type, followed by table_schema if requested. CommandGetXdbcTypeInfo Represents a request to retrieve information about data type supported on a Flight SQL enabled backend. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the schema of the query. GetFlightInfo: execute the catalog metadata request. The returned schema will be: < type_name: utf8 not null (The name of the data type, for example: VARCHAR, INTEGER, etc), data_type: int32 not null (The SQL data type), column_size: int32 (The maximum size supported by that column. In case of exact numeric types, this represents the maximum precision. In case of string types, this represents the character length. In case of datetime data types, this represents the length in characters of the string representation. NULL is returned for data types where column size is not applicable.), literal_prefix: utf8 (Character or characters used to prefix a literal, NULL is returned for data types where a literal prefix is not applicable.), literal_suffix: utf8 (Character or characters used to terminate a literal, NULL is returned for data types where a literal suffix is not applicable.), create_params: list<utf8 not null> (A list of keywords corresponding to which parameters can be used when creating a column for that specific type. NULL is returned if there are no parameters for the data type definition.), nullable: int32 not null (Shows if the data type accepts a NULL value. The possible values can be seen in the Nullable enum.), case_sensitive: bool not null (Shows if a character data type is case-sensitive in collations and comparisons), searchable: int32 not null (Shows how the data type is used in a WHERE clause. The possible values can be seen in the Searchable enum.), unsigned_attribute: bool (Shows if the data type is unsigned. NULL is returned if the attribute is not applicable to the data type or the data type is not numeric.), fixed_prec_scale: bool not null (Shows if the data type has predefined fixed precision and scale.), auto_increment: bool (Shows if the data type is auto incremental. NULL is returned if the attribute is not applicable to the data type or the data type is not numeric.), local_type_name: utf8 (Localized version of the data source-dependent name of the data type. NULL is returned if a localized name is not supported by the data source), minimum_scale: int32 (The minimum scale of the data type on the data source. If a data type has a fixed scale, the MINIMUM_SCALE and MAXIMUM_SCALE columns both contain this value. NULL is returned if scale is not applicable.), maximum_scale: int32 (The maximum scale of the data type on the data source. NULL is returned if scale is not applicable.), sql_data_type: int32 not null (The value of the SQL DATA TYPE which has the same values as data_type value. Except for interval and datetime, which uses generic values. More info about those types can be obtained through datetime_subcode. The possible values can be seen in the XdbcDataType enum.), datetime_subcode: int32 (Only used when the SQL DATA TYPE is interval or datetime. It contains its sub types. For type different from interval and datetime, this value is NULL. The possible values can be seen in the XdbcDatetimeSubcode enum.), num_prec_radix: int32 (If the data type is an approximate numeric type, this column contains the value 2 to indicate that COLUMN_SIZE specifies a number of bits. For exact numeric types, this column contains the value 10 to indicate that column size specifies a number of decimal digits. Otherwise, this column is NULL.), interval_precision: int32 (If the data type is an interval data type, then this column contains the value of the interval leading precision. Otherwise, this column is NULL. This fields is only relevant to be used by ODBC). The returned data should be ordered by data_type and then by type_name. CommandPreparedStatementQuery Represents an instance of executing a prepared statement. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. Fields on this schema may contain the following metadata: ARROW:FLIGHT:SQL:CATALOG_NAME - Table's catalog name ARROW:FLIGHT:SQL:DB_SCHEMA_NAME - Database schema name ARROW:FLIGHT:SQL:TABLE_NAME - Table name ARROW:FLIGHT:SQL:TYPE_NAME - The data source-specific name for the data type of the column. ARROW:FLIGHT:SQL:PRECISION - Column precision/size ARROW:FLIGHT:SQL:SCALE - Column scale/decimal digits if applicable ARROW:FLIGHT:SQL:IS_AUTO_INCREMENT - \"1\" indicates if the column is auto incremented, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_CASE_SENSITIVE - \"1\" indicates if the column is case-sensitive, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_READ_ONLY - \"1\" indicates if the column is read only, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_SEARCHABLE - \"1\" indicates if the column is searchable via WHERE clause, \"0\" otherwise. ARROW:FLIGHT:SQL:REMARKS - A comment describing the column. This field has been added after all others, clients should be prepared to find it missing. If the schema is retrieved after parameter values have been bound with DoPut, then the server should account for the parameters when determining the schema. DoPut: bind parameter values. All of the bound parameter sets will be executed as a single atomic execution. GetFlightInfo: execute the prepared statement instance. CommandPreparedStatementUpdate Represents a SQL update query. Used in the command member of FlightDescriptor for the RPC call DoPut to cause the server to execute the included prepared statement handle as an update. CommandStatementIngest Represents a bulk ingestion request. Used in the command member of FlightDescriptor for the the RPC call DoPut to cause the server load the contents of the stream's FlightData into the target destination. CommandStatementIngest.Types Container for nested types declared in the CommandStatementIngest message type. CommandStatementIngest.Types.TableDefinitionOptions Options for table definition behavior CommandStatementIngest.Types.TableDefinitionOptions.Types Container for nested types declared in the TableDefinitionOptions message type. CommandStatementQuery Represents a SQL query. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. Fields on this schema may contain the following metadata: ARROW:FLIGHT:SQL:CATALOG_NAME - Table's catalog name ARROW:FLIGHT:SQL:DB_SCHEMA_NAME - Database schema name ARROW:FLIGHT:SQL:TABLE_NAME - Table name ARROW:FLIGHT:SQL:TYPE_NAME - The data source-specific name for the data type of the column. ARROW:FLIGHT:SQL:PRECISION - Column precision/size ARROW:FLIGHT:SQL:SCALE - Column scale/decimal digits if applicable ARROW:FLIGHT:SQL:IS_AUTO_INCREMENT - \"1\" indicates if the column is auto incremented, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_CASE_SENSITIVE - \"1\" indicates if the column is case-sensitive, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_READ_ONLY - \"1\" indicates if the column is read only, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_SEARCHABLE - \"1\" indicates if the column is searchable via WHERE clause, \"0\" otherwise. ARROW:FLIGHT:SQL:REMARKS - A comment describing the column. This field has been added after all others, clients should be prepared to find it missing. GetFlightInfo: execute the query. CommandStatementSubstraitPlan Represents a Substrait plan. Used in the command member of FlightDescriptor for the following RPC calls: GetSchema: return the Arrow schema of the query. Fields on this schema may contain the following metadata: ARROW:FLIGHT:SQL:CATALOG_NAME - Table's catalog name ARROW:FLIGHT:SQL:DB_SCHEMA_NAME - Database schema name ARROW:FLIGHT:SQL:TABLE_NAME - Table name ARROW:FLIGHT:SQL:TYPE_NAME - The data source-specific name for the data type of the column. ARROW:FLIGHT:SQL:PRECISION - Column precision/size ARROW:FLIGHT:SQL:SCALE - Column scale/decimal digits if applicable ARROW:FLIGHT:SQL:IS_AUTO_INCREMENT - \"1\" indicates if the column is auto incremented, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_CASE_SENSITIVE - \"1\" indicates if the column is case-sensitive, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_READ_ONLY - \"1\" indicates if the column is read only, \"0\" otherwise. ARROW:FLIGHT:SQL:IS_SEARCHABLE - \"1\" indicates if the column is searchable via WHERE clause, \"0\" otherwise. ARROW:FLIGHT:SQL:REMARKS - A comment describing the column. This field has been added after all others, clients should be prepared to find it missing. GetFlightInfo: execute the query. DoPut: execute the query. CommandStatementUpdate Represents a SQL update query. Used in the command member of FlightDescriptor for the RPC call DoPut to cause the server to execute the included SQL update. DoPutPreparedStatementResult An optional response returned when DoPut is called with CommandPreparedStatementQuery. Note on legacy behavior: previous versions of the protocol did not return any result for this command, and that behavior should still be supported by clients. In that case, the client can continue as though the fields in this message were not provided or set to sensible default values. DoPutUpdateResult Returned from the RPC call DoPut when a CommandStatementUpdate, CommandPreparedStatementUpdate, or CommandStatementIngest was in the request, containing results from the update. FlightSqlExtensions Holder for extension identifiers generated from the top level of FlightSql.proto FlightSqlReflection Holder for reflection information generated from FlightSql.proto SubstraitPlan An embedded message describing a Substrait plan to execute. TicketStatementQuery Represents a ticket resulting from GetFlightInfo with a CommandStatementQuery. This should be used only once and treated as an opaque value, that is, clients should not attempt to parse this. Enums ActionCancelQueryResult.Types.CancelResult ActionEndSavepointRequest.Types.EndSavepoint ActionEndTransactionRequest.Types.EndTransaction CommandStatementIngest.Types.TableDefinitionOptions.Types.TableExistsOption The action to take if the target table already exists CommandStatementIngest.Types.TableDefinitionOptions.Types.TableNotExistOption The action to take if the target table does not exist Nullable Searchable SqlInfo Options for CommandGetSqlInfo. SqlNullOrdering SqlOuterJoinsSupportLevel SqlSupportedCaseSensitivity SqlSupportedElementActions SqlSupportedGroupBy SqlSupportedPositionedCommands SqlSupportedResultSetConcurrency SqlSupportedResultSetType SqlSupportedSubqueries SqlSupportedTransaction The level of support for Flight SQL transaction RPCs. SqlSupportedTransactions SqlSupportedUnions SqlSupportsConvert SqlTransactionIsolationLevel SupportedAnsi92SqlGrammarLevel SupportedSqlGrammar UpdateDeleteRules XdbcDataType The JDBC/ODBC-defined type of any object. All the values here are the same as in the JDBC and ODBC specs. XdbcDatetimeSubcode Detailed subtype information for XDBC_TYPE_DATETIME and XDBC_TYPE_INTERVAL."
  },
  "api/Microsoft.AspNetCore.Builder.FlightIEndpointRouteBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.FlightIEndpointRouteBuilderExtensions.html",
    "title": "Class FlightIEndpointRouteBuilderExtensions | Apache Arrow .NET",
    "summary": "Class FlightIEndpointRouteBuilderExtensions Namespace Microsoft.AspNetCore.Builder Assembly Apache.Arrow.Flight.AspNetCore.dll public static class FlightIEndpointRouteBuilderExtensions Inheritance object FlightIEndpointRouteBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MapFlightEndpoint(IEndpointRouteBuilder) public static GrpcServiceEndpointConventionBuilder MapFlightEndpoint(this IEndpointRouteBuilder endpointRouteBuilder) Parameters endpointRouteBuilder IEndpointRouteBuilder Returns GrpcServiceEndpointConventionBuilder"
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder | Apache Arrow .NET",
    "summary": "Namespace Microsoft.AspNetCore.Builder Classes FlightIEndpointRouteBuilderExtensions"
  },
  "api/Microsoft.Extensions.DependencyInjection.FlightIGrpcServerBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.FlightIGrpcServerBuilderExtensions.html",
    "title": "Class FlightIGrpcServerBuilderExtensions | Apache Arrow .NET",
    "summary": "Class FlightIGrpcServerBuilderExtensions Namespace Microsoft.Extensions.DependencyInjection Assembly Apache.Arrow.Flight.AspNetCore.dll public static class FlightIGrpcServerBuilderExtensions Inheritance object FlightIGrpcServerBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddFlightServer<T>(IGrpcServerBuilder) public static IGrpcServerBuilder AddFlightServer<T>(this IGrpcServerBuilder grpcServerBuilder) where T : FlightServer Parameters grpcServerBuilder IGrpcServerBuilder Returns IGrpcServerBuilder Type Parameters T"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Apache Arrow .NET",
    "summary": "Namespace Microsoft.Extensions.DependencyInjection Classes FlightIGrpcServerBuilderExtensions"
  },
  "index.html": {
    "href": "index.html",
    "title": "Apache Arrow .NET | Apache Arrow .NET",
    "summary": "Apache Arrow .NET An implementation of Arrow targeting .NET. See our current feature matrix for currently available features. Implementation Arrow specification 1.0.0. (Support for reading 0.11+.) C# 11 .NET Standard 2.0, .NET 6.0, .NET 8.0 and .NET Framework 4.6.2 Asynchronous I/O Uses modern .NET runtime features such as Span<T>, Memory<T>, MemoryManager<T>, and System.Buffers primitives for memory allocation, memory storage, and fast serialization. Uses Acyclic Visitor Pattern for array types and arrays to facilitate serialization, record batch traversal, and format growth. Known Issues Cannot read Arrow files containing tensors. Cannot easily modify allocation strategy without implementing a custom memory pool. All allocations are currently 64-byte aligned and padded to 8-bytes. Default memory allocation strategy uses an over-allocation strategy with pointer fixing, which results in significant memory overhead for small buffers. A buffer that requires a single byte for storage may be backed by an allocation of up to 64-bytes to satisfy alignment requirements. There are currently few builder APIs available for specific array types. Arrays must be built manually with an arrow buffer builder abstraction. FlatBuffer code generation is not included in the build process. Serialization implementation does not perform exhaustive validation checks during deserialization in every scenario. Throws exceptions with vague, inconsistent, or non-localized messages in many situations Throws exceptions that are non-specific to the Arrow implementation in some circumstances where it probably should (eg. does not throw ArrowException exceptions) Lack of code documentation Lack of usage examples Usage Example demonstrating reading RecordBatches from an Arrow IPC file using an ArrowFileReader: using System.Diagnostics; using System.IO; using System.Threading.Tasks; using Apache.Arrow; using Apache.Arrow.Ipc; public static async Task<RecordBatch> ReadArrowAsync(string filename) { using (var stream = File.OpenRead(filename)) using (var reader = new ArrowFileReader(stream)) { var recordBatch = await reader.ReadNextRecordBatchAsync(); Debug.WriteLine(\"Read record batch with {0} column(s)\", recordBatch.ColumnCount); return recordBatch; } } Status Memory Management Allocations are 64-byte aligned and padded to 8-bytes. Allocations are automatically garbage collected Arrays Primitive Types Int8, Int16, Int32, Int64 UInt8, UInt16, UInt32, UInt64 Float, Double, Half-float (.NET 6+) Binary (variable-length) String (utf-8) Null Parametric Types Timestamp Date32, Date64 Decimal32, Decimal64, Decimal128, Decimal256 Time32, Time64 Binary (fixed-length) List Struct Union Map Duration Interval Type Metadata Data Types Fields Schema Serialization File Reader and Writer Stream Reader and Writer IPC Format Compression Buffer compression and decompression is supported, but requires installing the Apache.Arrow.Compression package. When reading compressed data, you must pass an CompressionCodecFactory instance to the ArrowFileReader or ArrowStreamReader constructor, and when writing compressed data a CompressionCodecFactory must be set in the IpcOptions. Alternatively, a custom implementation of ICompressionCodecFactory can be used. Not Implemented Serialization Exhaustive validation Run End Encoding Types Tensor Arrays Large Arrays. There are large array types provided to help with interoperability with other libraries, but these do not support buffers larger than 2 GiB and an exception will be raised if trying to import an array that is too large. Large Binary Large List Large String Views Binary View List View String View Array Operations Equality / Comparison Casting Compute There is currently no API available for a compute / kernel abstraction."
  }
}